{
    "rdf_content": {
        "authors": [
            {
                "affiliation": "Human Technopole",
                "email": "vera.galinova@fht.org",
                "github_user": "veegalinova",
                "name": "Vera Galinova",
                "orcid": null
            },
            {
                "affiliation": "Human Technopole",
                "email": "mehdi.seifi@fht.org",
                "github_user": null,
                "name": "Mehdi Seifi",
                "orcid": null
            },
            {
                "affiliation": "Wageningen University",
                "github_user": null,
                "name": "Sofia Bengoa Luoni",
                "orcid": null
            }
        ],
        "cite": [
            {
                "text": "Yuxin Wu and Alexander Kirillov and Francisco Massa and Wan-Yen Lo and Ross Girshick, Detectron2, 2019",
                "url": "https://github.com/facebookresearch/detectron2"
            }
        ],
        "covers": [
            "cover.png"
        ],
        "description": "Leaf plant segmentation",
        "documentation": "doc.md",
        "format_version": "0.5.3",
        "git_repo": "https://github.com/ai4life-opencalls/oc-1-project-74",
        "id": "witty-whale",
        "id_emoji": "üê≥",
        "inputs": [
            {
                "axes": [
                    {
                        "channel_names": [
                            "channel",
                            "channel",
                            "channel"
                        ],
                        "type": "channel"
                    },
                    {
                        "id": "y",
                        "size": 800,
                        "type": "space"
                    },
                    {
                        "id": "x",
                        "size": 1067,
                        "type": "space"
                    }
                ],
                "id": "input",
                "test_tensor": {
                    "sha256": "67015dbe64730522fc450f4973576d62630a4016983d2aac01cfae465ed1deba",
                    "source": "input_sample.npy"
                }
            }
        ],
        "license": "BSD-3-Clause",
        "links": [
            "https://github.com/facebookresearch/detectron2"
        ],
        "name": "OC1 Project 74 Leaf segmentation with detectron2",
        "outputs": [
            {
                "axes": [
                    {
                        "id": "s",
                        "size": 7,
                        "type": "space"
                    },
                    {
                        "id": "p",
                        "size": 4,
                        "type": "space"
                    }
                ],
                "id": "bboxes",
                "test_tensor": {
                    "sha256": "00d00ed8642a14b8bc9f69b316f1044349f5efe38d787f28ef091ae4f78453ef",
                    "source": "output_boxes.npy"
                }
            },
            {
                "axes": [
                    {
                        "id": "s",
                        "size": 7,
                        "type": "space"
                    }
                ],
                "id": "classes",
                "test_tensor": {
                    "sha256": "7aa21c77539786adb918182cbc41d49497c17bc5e6935f499a14fc7f18e9ac32",
                    "source": "output_classes.npy"
                }
            },
            {
                "axes": [
                    {
                        "id": "s",
                        "size": 7,
                        "type": "space"
                    },
                    {
                        "id": "t",
                        "size": 1,
                        "type": "space"
                    },
                    {
                        "id": "y",
                        "size": 28,
                        "type": "space"
                    },
                    {
                        "id": "x",
                        "size": 28,
                        "type": "space"
                    }
                ],
                "id": "masks",
                "test_tensor": {
                    "sha256": "12e23c4590297af8aabc9a9b36f9fda7c9051784a736bce6c7435a2bf748b04c",
                    "source": "output_masks.npy"
                }
            },
            {
                "axes": [
                    {
                        "id": "s",
                        "size": 7,
                        "type": "space"
                    }
                ],
                "id": "scores",
                "test_tensor": {
                    "sha256": "24cb61ee2b9dbe476dc6dc6314edd7e10eeca9b9bd91c48aae776fb373e74975",
                    "source": "output_scores.npy"
                }
            },
            {
                "axes": [
                    {
                        "id": "dims",
                        "size": 2,
                        "type": "space"
                    }
                ],
                "id": "shape",
                "test_tensor": {
                    "sha256": "d1f57d9ef57cfe135872a5251e05a928373583a83ffac60838ded3c43e1ea419",
                    "source": "output_shape.npy"
                }
            }
        ],
        "tags": [
            "Instance segmentation",
            "Plants",
            "2D",
            "RGB",
            "Detectron2"
        ],
        "type": "model",
        "uploader": {
            "email": "veegalinova@gmail.com"
        },
        "version": "0.1.1",
        "weights": {
            "onnx": {
                "opset_version": 11,
                "sha256": "d02a7cfdb0086a4d54981b9ab3a667b32b34a8da488c8e8fe0b08925f119a34f",
                "source": "model.onnx"
            }
        }
    },
    "rdf_yaml_sha256": "f8622690eeff218f66943f16e309922189bd0095fefcc9f79c33045fb5a66ad0",
    "scores": {
        "core_compatibility": 0.0,
        "metadata_completeness": 0.0,
        "metadata_format": 0.0,
        "overall_compatibility": 0.0,
        "overall_partner_tool_compatibility": 0.0,
        "tool_compatibility": {},
        "tool_compatibility_version_specific": {}
    },
    "status": "failed",
    "tests": {
        "biapy_3.6.5": {
            "badge": null,
            "details": "[all] pytorch_state_dict not found in model RDF or inputs != 1\n",
            "error": "[all] pytorch_state_dict not found in model RDF or inputs != 1\n",
            "links": [
                "biapy/biapy"
            ],
            "score": 0.0,
            "status": "failed"
        },
        "bioimageio.core_0.9.4": {
            "badge": null,
            "details": {
                "details": [
                    {
                        "context": {
                            "file_name": "rdf.yaml",
                            "known_files": {
                                "https://github.com/ai4life-opencalls/oc-1-project-74": null,
                                "https://github.com/facebookresearch/detectron2": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/cover.png?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/doc.md?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/input_sample.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/model.onnx?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_boxes.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_classes.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_masks.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_scores.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_shape.npy?version=v0": null,
                                "input_sample.npy": "67015dbe64730522fc450f4973576d62630a4016983d2aac01cfae465ed1deba",
                                "model.onnx": "d02a7cfdb0086a4d54981b9ab3a667b32b34a8da488c8e8fe0b08925f119a34f",
                                "output_boxes.npy": "00d00ed8642a14b8bc9f69b316f1044349f5efe38d787f28ef091ae4f78453ef",
                                "output_classes.npy": "7aa21c77539786adb918182cbc41d49497c17bc5e6935f499a14fc7f18e9ac32",
                                "output_masks.npy": "12e23c4590297af8aabc9a9b36f9fda7c9051784a736bce6c7435a2bf748b04c",
                                "output_scores.npy": "24cb61ee2b9dbe476dc6dc6314edd7e10eeca9b9bd91c48aae776fb373e74975",
                                "output_shape.npy": "d1f57d9ef57cfe135872a5251e05a928373583a83ffac60838ded3c43e1ea419"
                            },
                            "original_source_name": null,
                            "perform_io_checks": true,
                            "root": "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files?version=v0",
                            "update_hashes": false
                        },
                        "errors": [],
                        "loc": [],
                        "name": "Successfully created `ModelDescr` instance.",
                        "recommended_env": null,
                        "saved_conda_compare": null,
                        "status": "passed",
                        "warnings": []
                    },
                    {
                        "context": {
                            "file_name": "rdf.yaml",
                            "known_files": {
                                "https://github.com/ai4life-opencalls/oc-1-project-74": null,
                                "https://github.com/facebookresearch/detectron2": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/cover.png?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/doc.md?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/input_sample.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/model.onnx?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_boxes.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_classes.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_masks.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_scores.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/output_shape.npy?version=v0": null,
                                "input_sample.npy": "67015dbe64730522fc450f4973576d62630a4016983d2aac01cfae465ed1deba",
                                "model.onnx": "d02a7cfdb0086a4d54981b9ab3a667b32b34a8da488c8e8fe0b08925f119a34f",
                                "output_boxes.npy": "00d00ed8642a14b8bc9f69b316f1044349f5efe38d787f28ef091ae4f78453ef",
                                "output_classes.npy": "7aa21c77539786adb918182cbc41d49497c17bc5e6935f499a14fc7f18e9ac32",
                                "output_masks.npy": "12e23c4590297af8aabc9a9b36f9fda7c9051784a736bce6c7435a2bf748b04c",
                                "output_scores.npy": "24cb61ee2b9dbe476dc6dc6314edd7e10eeca9b9bd91c48aae776fb373e74975",
                                "output_shape.npy": "d1f57d9ef57cfe135872a5251e05a928373583a83ffac60838ded3c43e1ea419"
                            },
                            "original_source_name": null,
                            "perform_io_checks": true,
                            "root": "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files?version=v0",
                            "update_hashes": false
                        },
                        "errors": [],
                        "loc": [],
                        "name": "bioimageio.spec format validation model 0.5.5",
                        "recommended_env": null,
                        "saved_conda_compare": null,
                        "status": "passed",
                        "warnings": [
                            {
                                "loc": [
                                    "inputs",
                                    0,
                                    "sample_tensor"
                                ],
                                "msg": "Needs to be filled for FAIR compliance",
                                "severity": 35,
                                "type": "warning"
                            },
                            {
                                "loc": [
                                    "outputs",
                                    0,
                                    "sample_tensor"
                                ],
                                "msg": "Needs to be filled for FAIR compliance",
                                "severity": 35,
                                "type": "warning"
                            },
                            {
                                "loc": [
                                    "outputs",
                                    1,
                                    "sample_tensor"
                                ],
                                "msg": "Needs to be filled for FAIR compliance",
                                "severity": 35,
                                "type": "warning"
                            },
                            {
                                "loc": [
                                    "outputs",
                                    2,
                                    "sample_tensor"
                                ],
                                "msg": "Needs to be filled for FAIR compliance",
                                "severity": 35,
                                "type": "warning"
                            },
                            {
                                "loc": [
                                    "outputs",
                                    3,
                                    "sample_tensor"
                                ],
                                "msg": "Needs to be filled for FAIR compliance",
                                "severity": 35,
                                "type": "warning"
                            },
                            {
                                "loc": [
                                    "outputs",
                                    4,
                                    "sample_tensor"
                                ],
                                "msg": "Needs to be filled for FAIR compliance",
                                "severity": 35,
                                "type": "warning"
                            }
                        ]
                    },
                    {
                        "context": null,
                        "errors": [],
                        "loc": [
                            "weights",
                            "onnx"
                        ],
                        "name": "Reproduce test outputs from test inputs (onnx)",
                        "recommended_env": {
                            "channels": [
                                "conda-forge",
                                "nodefaults"
                            ],
                            "dependencies": [
                                "conda-forge::bioimageio.core",
                                "onnxruntime",
                                "pip"
                            ],
                            "name": null
                        },
                        "saved_conda_compare": "Success. All the packages in the specification file are present in the environment with matching version and build string.\n",
                        "status": "passed",
                        "warnings": []
                    },
                    {
                        "context": null,
                        "errors": [],
                        "loc": [
                            "weights",
                            "onnx"
                        ],
                        "name": "Run onnx inference for inputs with batch_size: 1 and size parameter n: 0",
                        "recommended_env": null,
                        "saved_conda_compare": null,
                        "status": "passed",
                        "warnings": []
                    }
                ],
                "env": [
                    [
                        "bioimageio.spec",
                        "0.5.5.6",
                        "",
                        ""
                    ],
                    [
                        "bioimageio.core",
                        "0.9.4",
                        "",
                        ""
                    ]
                ],
                "format_version": "0.5.5",
                "id": "witty-whale",
                "metadata_completeness": 0.5333333333333333,
                "name": "bioimageio format validation",
                "saved_conda_list": "# packages in environment at /usr/share/miniconda/envs/95227f474ca45b024cf315edb4101e4919199d0a79ef5ff1eb474dc8ce1ec4d8:\n#\n# Name                     Version          Build                    Channel\n_libgcc_mutex              0.1              conda_forge              conda-forge\n_openmp_mutex              4.5              2_gnu                    conda-forge\nannotated-types            0.7.0            pyhd8ed1ab_1             conda-forge\nanyio                      4.11.0           pyhcf101f3_0             conda-forge\naom                        3.9.1            hac33072_0               conda-forge\nbioimageio.core            0.9.4            pyhd8ed1ab_0             conda-forge\nbioimageio.spec            0.5.5.6          pyhd8ed1ab_0             conda-forge\nblosc                      1.21.6           he440d0b_1               conda-forge\nbrunsli                    0.1              he3183e4_1               conda-forge\nbzip2                      1.0.8            hda65f42_8               conda-forge\nc-ares                     1.34.5           hb9d3cd8_0               conda-forge\nc-blosc2                   2.21.3           h4cfbee9_0               conda-forge\nca-certificates            2025.10.5        hbd8a1cb_0               conda-forge\ncached-property            1.5.2            hd8ed1ab_1               conda-forge\ncached_property            1.5.2            pyha770c72_1             conda-forge\ncertifi                    2025.10.5        pyhd8ed1ab_0             conda-forge\ncharls                     2.4.2            h59595ed_0               conda-forge\ncolorama                   0.4.6            pyhd8ed1ab_1             conda-forge\ncoloredlogs                15.0.1           pyhd8ed1ab_4             conda-forge\ncpython                    3.13.9           py313hd8ed1ab_101        conda-forge\ndav1d                      1.2.1            hd590300_0               conda-forge\ndistro                     1.9.0            pyhd8ed1ab_1             conda-forge\ndnspython                  2.8.0            pyhcf101f3_0             conda-forge\nemail-validator            2.3.0            pyhd8ed1ab_0             conda-forge\nemail_validator            2.3.0            hd8ed1ab_0               conda-forge\nexceptiongroup             1.3.0            pyhd8ed1ab_0             conda-forge\nfilelock                   3.20.0           pyhd8ed1ab_0             conda-forge\ngenericache                0.5.2            pyhd8ed1ab_0             conda-forge\ngiflib                     5.2.2            hd590300_0               conda-forge\ngmp                        6.3.0            hac33072_2               conda-forge\ngmpy2                      2.2.1            py313h86d8783_1          conda-forge\nh11                        0.16.0           pyhd8ed1ab_0             conda-forge\nh2                         4.3.0            pyhcf101f3_0             conda-forge\nh5py                       3.15.1           nompi_py313h253c126_100  conda-forge\nhdf5                       1.14.6           nompi_h6e4c0c1_103       conda-forge\nhpack                      4.1.0            pyhd8ed1ab_0             conda-forge\nhttpcore                   1.0.9            pyh29332c3_0             conda-forge\nhttpx                      0.28.1           pyhd8ed1ab_0             conda-forge\nhumanfriendly              10.0             pyh707e725_8             conda-forge\nhyperframe                 6.1.0            pyhd8ed1ab_0             conda-forge\nidna                       3.11             pyhd8ed1ab_0             conda-forge\nimagecodecs                2025.8.2         py313h718aa22_4          conda-forge\nimageio                    2.37.0           pyhfb79c49_0             conda-forge\nimportlib-metadata         8.7.0            pyhe01879c_1             conda-forge\njxrlib                     1.1              hd590300_3               conda-forge\nkeyutils                   1.6.3            hb9d3cd8_0               conda-forge\nkrb5                       1.21.3           h659f571_0               conda-forge\nlcms2                      2.17             h717163a_0               conda-forge\nld_impl_linux-64           2.44             h1aa0949_4               conda-forge\nlerc                       4.0.0            h0aef613_1               conda-forge\nlibabseil                  20250814.1       cxx17_hee66210_0         conda-forge\nlibaec                     1.1.4            h3f801dc_0               conda-forge\nlibavif16                  1.3.0            h6395336_2               conda-forge\nlibblas                    3.9.0            37_h4a7cf45_openblas     conda-forge\nlibbrotlicommon            1.1.0            hb03c661_4               conda-forge\nlibbrotlidec               1.1.0            hb03c661_4               conda-forge\nlibbrotlienc               1.1.0            hb03c661_4               conda-forge\nlibcblas                   3.9.0            37_h0358290_openblas     conda-forge\nlibcurl                    8.16.0           h4e3cde8_0               conda-forge\nlibdeflate                 1.24             h86f0d12_0               conda-forge\nlibedit                    3.1.20250104     pl5321h7949ede_0         conda-forge\nlibev                      4.33             hd590300_2               conda-forge\nlibexpat                   2.7.1            hecca717_0               conda-forge\nlibffi                     3.5.2            h9ec8514_0               conda-forge\nlibfreetype                2.14.1           ha770c72_0               conda-forge\nlibfreetype6               2.14.1           h73754d4_0               conda-forge\nlibgcc                     15.2.0           h767d61c_7               conda-forge\nlibgcc-ng                  15.2.0           h69a702a_7               conda-forge\nlibgfortran                15.2.0           h69a702a_7               conda-forge\nlibgfortran5               15.2.0           hcd61629_7               conda-forge\nlibgomp                    15.2.0           h767d61c_7               conda-forge\nlibhwy                     1.3.0            h4c17acf_1               conda-forge\nlibjpeg-turbo              3.1.0            hb9d3cd8_0               conda-forge\nlibjxl                     0.11.1           h6cb5226_4               conda-forge\nliblapack                  3.9.0            37_h47877c9_openblas     conda-forge\nliblzma                    5.8.1            hb9d3cd8_2               conda-forge\nlibmpdec                   4.0.0            hb9d3cd8_0               conda-forge\nlibnghttp2                 1.67.0           had1ee68_0               conda-forge\nlibopenblas                0.3.30           pthreads_h94d23a6_2      conda-forge\nlibpng                     1.6.50           h421ea60_1               conda-forge\nlibsqlite                  3.50.4           h0c1763c_0               conda-forge\nlibssh2                    1.11.1           hcf80075_0               conda-forge\nlibstdcxx                  15.2.0           h8f9b012_7               conda-forge\nlibstdcxx-ng               15.2.0           h4852527_7               conda-forge\nlibtiff                    4.7.1            h8261f1e_0               conda-forge\nlibuuid                    2.41.2           he9a06e4_0               conda-forge\nlibwebp-base               1.6.0            hd42ef1d_0               conda-forge\nlibxcb                     1.17.0           h8a09558_0               conda-forge\nlibzlib                    1.3.1            hb9d3cd8_2               conda-forge\nlibzopfli                  1.0.3            h9c3ff4c_0               conda-forge\nloguru                     0.7.3            pyh707e725_0             conda-forge\nlz4-c                      1.10.0           h5888daf_1               conda-forge\nmarkdown                   3.9              pyhd8ed1ab_0             conda-forge\nmarkdown-it-py             4.0.0            pyhd8ed1ab_0             conda-forge\nmdurl                      0.1.2            pyhd8ed1ab_1             conda-forge\nmpc                        1.3.1            h24ddda3_1               conda-forge\nmpfr                       4.2.1            h90cbb55_3               conda-forge\nmpmath                     1.3.0            pyhd8ed1ab_1             conda-forge\nncurses                    6.5              h2d0b736_3               conda-forge\nnumpy                      2.3.4            py313hf6604e3_0          conda-forge\nonnxruntime                1.22.0           py313hd753461_0_cpu      conda-forge\nopenjpeg                   2.5.4            h55fea9a_0               conda-forge\nopenssl                    3.5.4            h26f9b46_0               conda-forge\npackaging                  25.0             pyh29332c3_1             conda-forge\npandas                     2.3.3            py313h08cd8bf_1          conda-forge\npillow                     11.3.0           py313ha492abd_3          conda-forge\npip                        25.2             pyh145f28c_0             conda-forge\nplatformdirs               4.5.0            pyhcf101f3_0             conda-forge\nprotobuf                   6.32.1           py313h50fafe1_2          conda-forge\npthread-stubs              0.4              hb9d3cd8_1002            conda-forge\npydantic                   2.11.10          pyh3cfb1c2_0             conda-forge\npydantic-core              2.33.2           py313h4b2b08d_0          conda-forge\npydantic-settings          2.11.0           pyh3cfb1c2_0             conda-forge\npygments                   2.19.2           pyhd8ed1ab_0             conda-forge\npython                     3.13.9           hc97d973_101_cp313       conda-forge\npython-dateutil            2.9.0.post0      pyhe01879c_2             conda-forge\npython-dotenv              1.2.1            pyhcf101f3_0             conda-forge\npython-flatbuffers         25.9.23          pyh1e1bc0e_0             conda-forge\npython-tzdata              2025.2           pyhd8ed1ab_0             conda-forge\npython_abi                 3.13             8_cp313                  conda-forge\npytz                       2025.2           pyhd8ed1ab_0             conda-forge\nrav1e                      0.7.1            h8fae777_3               conda-forge\nreadline                   8.2              h8c095d6_2               conda-forge\nrich                       14.2.0           pyhcf101f3_0             conda-forge\nruyaml                     0.91.0           pyhd8ed1ab_1             conda-forge\nscipy                      1.16.2           py313h11c21cd_0          conda-forge\nsetuptools                 80.9.0           pyhff2d567_0             conda-forge\nsix                        1.17.0           pyhe01879c_1             conda-forge\nsnappy                     1.2.2            h03e3b7b_0               conda-forge\nsniffio                    1.3.1            pyhd8ed1ab_1             conda-forge\nsvt-av1                    3.1.2            hecca717_0               conda-forge\nsympy                      1.14.0           pyh2585a3b_105           conda-forge\ntifffile                   2025.10.16       pyhd8ed1ab_0             conda-forge\ntk                         8.6.13           noxft_hd72426e_102       conda-forge\ntqdm                       4.67.1           pyhd8ed1ab_1             conda-forge\ntyping-extensions          4.15.0           h396c80c_0               conda-forge\ntyping-inspection          0.4.2            pyhd8ed1ab_0             conda-forge\ntyping_extensions          4.15.0           pyhcf101f3_0             conda-forge\ntzdata                     2025b            h78e105d_0               conda-forge\nxarray                     2025.1.2         pyhd8ed1ab_0             conda-forge\nxorg-libxau                1.0.12           hb9d3cd8_0               conda-forge\nxorg-libxdmcp              1.1.5            hb9d3cd8_0               conda-forge\nzfp                        1.0.1            h909a3a2_3               conda-forge\nzipp                       3.23.0           pyhd8ed1ab_0             conda-forge\nzlib-ng                    2.2.5            hde8ca8f_0               conda-forge\nzstd                       1.5.7            hb8e6e7a_2               conda-forge\n",
                "source_name": "https://hypha.aicell.io/bioimage-io/artifacts/witty-whale/files/rdf.yaml?version=v0",
                "status": "passed",
                "type": "model"
            },
            "error": null,
            "links": [
                "bioimageio/bioimageio.core"
            ],
            "score": 1.0,
            "status": "passed"
        },
        "careamics_0.0.16": {
            "badge": null,
            "details": "'Model' resource not tagged with 'CAREamics' or 'careamics'.",
            "error": null,
            "links": [],
            "score": 0.0,
            "status": "not-applicable"
        },
        "careamics_0.0.17": {
            "badge": null,
            "details": "'Model' resource not tagged with 'CAREamics' or 'careamics'.",
            "error": null,
            "links": [],
            "score": 0.0,
            "status": "not-applicable"
        }
    }
}