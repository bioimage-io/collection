{
    "rdf_content": {
        "attachments": [
            {
                "sha256": "3fbae1fcd7e507f94ff9bfc1cdcb800df61fddd3b4953a7f441f3e347c9efe8c",
                "source": "model_usage.py"
            }
        ],
        "authors": [
            {
                "affiliation": "Helmholtz Munich",
                "email": "padovaf@tcd.ie",
                "github_user": "ElpadoCan",
                "name": "Francesco Padovani",
                "orcid": "0000-0003-2540-8240"
            }
        ],
        "cite": [
            {
                "doi": "10.1101/2024.10.22.619610",
                "text": "Padovani, F., Čavka, I., Neves, A. R. R., López, C. P., Al-Refaie, N., Bolcato, L., Chatzitheodoridou, D., Chadha, Y., Su, X.A., Lengefeld, J., Cabianca D. S., Köhler, S., Schmoller, K. M. SpotMAX: a generalist framework for multi-dimensional automatic spot detection and quantification, bioRxiv (2024) DOI: 10.1101/2024.10.22.619610",
                "url": "https://www.biorxiv.org/content/10.1101/2024.10.22.619610v1"
            }
        ],
        "config": {
            "bioimageio": {
                "thumbnails": {
                    "cover.png": "cover.thumbnail.png"
                }
            }
        },
        "covers": [
            "cover.png"
        ],
        "description": "U-Net 2D trained on images containing diffraction-limited fluorescent spots. The model is trained to return a boolean mask of spot areas.",
        "documentation": "README.md",
        "format_version": "0.5.3",
        "git_repo": "https://github.com/ElpadoCan/SpotMAX",
        "id": "patient-swan",
        "id_emoji": "🦢",
        "inputs": [
            {
                "axes": [
                    {
                        "type": "batch"
                    },
                    {
                        "concatenable": false,
                        "id": "z",
                        "size": 43,
                        "type": "space"
                    },
                    {
                        "concatenable": false,
                        "id": "y",
                        "size": 123,
                        "type": "space"
                    },
                    {
                        "concatenable": false,
                        "id": "x",
                        "size": 167,
                        "type": "space"
                    }
                ],
                "data": {
                    "type": "uint8"
                },
                "id": "mNeon",
                "test_tensor": {
                    "sha256": "b3ebf3e5ef1f0547c2bfc70d2a4e80d23a2d3676c984752d49cdbe3d2525f161",
                    "source": "input_sample.npy"
                }
            }
        ],
        "license": "GPL-3.0-only",
        "links": [
            "https://spotmax.readthedocs.io/en/latest/"
        ],
        "maintainers": [],
        "name": "SpotMAX-AI",
        "outputs": [
            {
                "axes": [
                    {
                        "type": "batch"
                    },
                    {
                        "id": "z",
                        "size": 43,
                        "type": "space"
                    },
                    {
                        "id": "y",
                        "size": 123,
                        "type": "space"
                    },
                    {
                        "id": "x",
                        "size": 167,
                        "type": "space"
                    }
                ],
                "data": {
                    "type": "uint8"
                },
                "description": "predicted boolean mask of spot areas",
                "id": "mask",
                "test_tensor": {
                    "sha256": "41ac73f1ca089e6fe631b825bf6e3ab70c0d2d3cf59a24a494ad293fc8541801",
                    "source": "output_sample_mask.npy"
                }
            }
        ],
        "tags": [
            "spot-detection",
            "diffraction-limited-spots",
            "pytorch",
            "fluorescence-light-microscopy",
            "spotmax"
        ],
        "type": "model",
        "uploader": {
            "email": "padovaf@tcd.ie",
            "name": "Francesco Padovani"
        },
        "version": "1.0.7",
        "weights": {
            "pytorch_state_dict": {
                "architecture": {
                    "callable": "Model",
                    "kwargs": {
                        "PhysicalSizeX": 0.06725,
                        "config_yaml_filepath": "spotmax/nnet/config.yaml",
                        "gaussian_filter_sigma": 0,
                        "model_type": "2D",
                        "preprocess_across_experiment": false,
                        "preprocess_across_timepoints": false,
                        "remove_hot_pixels": true,
                        "resolution_multiplier_yx": 1,
                        "save_prediction_map": false,
                        "use_gpu": true,
                        "verbose": false
                    },
                    "sha256": "6f309b7a1b5616f8d4f85ab291ae0ea960e1841b44b960099da0bf706e703791",
                    "source": "model.py"
                },
                "dependencies": {
                    "sha256": "ab73b411af9a529f08de92c2ef12cd1c261c072e8e44f197e5d2a0dba4c2e86a",
                    "source": "environment.yml"
                },
                "pytorch_version": "2.4.1",
                "sha256": "c1e276f8aa450bac8ecb3b04068754182de77cf20aefe1e4d01729f71804a901",
                "source": "unet_best.pth"
            }
        }
    },
    "rdf_yaml_sha256": "b7842a5ece717b2e236c215916f948e049df6f14a5c64dd1a9ebd4c0876b3405",
    "scores": {
        "core_compatibility": 0.0,
        "metadata_completeness": 0.0,
        "metadata_format": 0.0,
        "overall_compatibility": 0.0,
        "overall_partner_tool_compatibility": 0.0,
        "tool_compatibility": {},
        "tool_compatibility_version_specific": {}
    },
    "status": "failed",
    "tests": {
        "biapy": {
            "3.6.5": {
                "badge": null,
                "details": "[all] pytorch_state_dict not found in model RDF or inputs != 1\n",
                "error": "[all] pytorch_state_dict not found in model RDF or inputs != 1\n",
                "links": [
                    "biapy/biapy"
                ],
                "score": 0.0,
                "status": "failed"
            }
        },
        "bioimageio.core": {
            "0.9.3": {
                "badge": null,
                "details": {
                    "details": [
                        {
                            "context": null,
                            "errors": [
                                {
                                    "loc": [],
                                    "msg": "test command 'conda run -n 23660dfeb3edb17f649bd73a8b8a8769936ecb63634fab8621dae229fa966652 bioimageio test https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/rdf.yaml?version=v0 --summary-path=/tmp/tmpfn8lhntm/pytorch_state_dict/summary.json --determinism=full --stop-early' did not produce a summary file at /tmp/tmpfn8lhntm/pytorch_state_dict/summary.json",
                                    "traceback_html": "",
                                    "traceback_md": "",
                                    "type": "bioimageio cli",
                                    "with_traceback": false
                                }
                            ],
                            "loc": [],
                            "name": "run 'bioimageio test'",
                            "recommended_env": null,
                            "saved_conda_compare": null,
                            "status": "failed",
                            "warnings": []
                        }
                    ],
                    "env": [],
                    "format_version": "unknown",
                    "id": null,
                    "metadata_completeness": 0.0,
                    "name": "calling bioimageio test command",
                    "saved_conda_list": "# packages in environment at /usr/share/miniconda/envs/core:\n#\n# Name                     Version          Build                    Channel\n_libgcc_mutex              0.1              conda_forge              conda-forge\n_openmp_mutex              4.5              2_gnu                    conda-forge\nannotated-types            0.7.0            pyhd8ed1ab_1             conda-forge\nanyio                      4.11.0           pyhcf101f3_0             conda-forge\naom                        3.9.1            hac33072_0               conda-forge\nbackoffice                 0.1.0            pypi_0                   pypi\nbioimageio.core            0.9.3            pyhd8ed1ab_0             conda-forge\nbioimageio.spec            0.5.5.5          pyhd8ed1ab_0             conda-forge\nblosc                      1.21.6           he440d0b_1               conda-forge\nbrunsli                    0.1              he3183e4_1               conda-forge\nbzip2                      1.0.8            hda65f42_8               conda-forge\nc-ares                     1.34.5           hb9d3cd8_0               conda-forge\nc-blosc2                   2.21.3           h4cfbee9_0               conda-forge\nca-certificates            2025.10.5        hbd8a1cb_0               conda-forge\ncached-property            1.5.2            hd8ed1ab_1               conda-forge\ncached_property            1.5.2            pyha770c72_1             conda-forge\ncertifi                    2025.10.5        pyhd8ed1ab_0             conda-forge\ncffi                       2.0.0            pypi_0                   pypi\ncharls                     2.4.2            h59595ed_0               conda-forge\ncharset-normalizer         3.4.3            pypi_0                   pypi\ncolorama                   0.4.6            pyhd8ed1ab_1             conda-forge\ncryptography               46.0.2           pypi_0                   pypi\ndav1d                      1.2.1            hd590300_0               conda-forge\ndistro                     1.9.0            pyhd8ed1ab_1             conda-forge\ndnspython                  2.8.0            pyhcf101f3_0             conda-forge\nemail-validator            2.3.0            pyhd8ed1ab_0             conda-forge\nemail_validator            2.3.0            hd8ed1ab_0               conda-forge\nexceptiongroup             1.3.0            pyhd8ed1ab_0             conda-forge\nfilelock                   3.20.0           pyhd8ed1ab_0             conda-forge\ngenericache                0.5.2            pyhd8ed1ab_0             conda-forge\ngiflib                     5.2.2            hd590300_0               conda-forge\nh11                        0.16.0           pyhd8ed1ab_0             conda-forge\nh2                         4.3.0            pyhcf101f3_0             conda-forge\nh5py                       3.14.0           nompi_py313h253c126_101  conda-forge\nhdf5                       1.14.6           nompi_h6e4c0c1_103       conda-forge\nhpack                      4.1.0            pyhd8ed1ab_0             conda-forge\nhttpcore                   1.0.9            pyh29332c3_0             conda-forge\nhttpx                      0.28.1           pyhd8ed1ab_0             conda-forge\nhyperframe                 6.1.0            pyhd8ed1ab_0             conda-forge\nidna                       3.10             pyhd8ed1ab_1             conda-forge\nimagecodecs                2025.8.2         py313h718aa22_4          conda-forge\nimageio                    2.37.0           pyhfb79c49_0             conda-forge\nimportlib-metadata         8.7.0            pyhe01879c_1             conda-forge\njxrlib                     1.1              hd590300_3               conda-forge\nkeyutils                   1.6.3            hb9d3cd8_0               conda-forge\nkrb5                       1.21.3           h659f571_0               conda-forge\nlcms2                      2.17             h717163a_0               conda-forge\nld_impl_linux-64           2.44             ha97dd6f_2               conda-forge\nlerc                       4.0.0            h0aef613_1               conda-forge\nlibaec                     1.1.4            h3f801dc_0               conda-forge\nlibavif16                  1.3.0            h6395336_2               conda-forge\nlibblas                    3.9.0            36_h4a7cf45_openblas     conda-forge\nlibbrotlicommon            1.1.0            hb03c661_4               conda-forge\nlibbrotlidec               1.1.0            hb03c661_4               conda-forge\nlibbrotlienc               1.1.0            hb03c661_4               conda-forge\nlibcblas                   3.9.0            36_h0358290_openblas     conda-forge\nlibcurl                    8.14.1           h332b0f4_0               conda-forge\nlibdeflate                 1.24             h86f0d12_0               conda-forge\nlibedit                    3.1.20250104     pl5321h7949ede_0         conda-forge\nlibev                      4.33             hd590300_2               conda-forge\nlibexpat                   2.7.1            hecca717_0               conda-forge\nlibffi                     3.4.6            h2dba641_1               conda-forge\nlibfreetype                2.14.1           ha770c72_0               conda-forge\nlibfreetype6               2.14.1           h73754d4_0               conda-forge\nlibgcc                     15.2.0           h767d61c_7               conda-forge\nlibgcc-ng                  15.2.0           h69a702a_7               conda-forge\nlibgfortran                15.2.0           h69a702a_7               conda-forge\nlibgfortran5               15.2.0           hcd61629_7               conda-forge\nlibgomp                    15.2.0           h767d61c_7               conda-forge\nlibhwy                     1.3.0            h4c17acf_1               conda-forge\nlibjpeg-turbo              3.1.0            hb9d3cd8_0               conda-forge\nlibjxl                     0.11.1           h6cb5226_4               conda-forge\nliblapack                  3.9.0            36_h47877c9_openblas     conda-forge\nliblzma                    5.8.1            hb9d3cd8_2               conda-forge\nlibmpdec                   4.0.0            hb9d3cd8_0               conda-forge\nlibnghttp2                 1.67.0           had1ee68_0               conda-forge\nlibopenblas                0.3.30           pthreads_h94d23a6_2      conda-forge\nlibpng                     1.6.50           h421ea60_1               conda-forge\nlibsqlite                  3.50.4           h0c1763c_0               conda-forge\nlibssh2                    1.11.1           hcf80075_0               conda-forge\nlibstdcxx                  15.2.0           h8f9b012_7               conda-forge\nlibstdcxx-ng               15.2.0           h4852527_7               conda-forge\nlibtiff                    4.7.1            h8261f1e_0               conda-forge\nlibuuid                    2.41.2           he9a06e4_0               conda-forge\nlibwebp-base               1.6.0            hd42ef1d_0               conda-forge\nlibxcb                     1.17.0           h8a09558_0               conda-forge\nlibzlib                    1.3.1            hb9d3cd8_2               conda-forge\nlibzopfli                  1.0.3            h9c3ff4c_0               conda-forge\nloguru                     0.7.3            pyh707e725_0             conda-forge\nlz4-c                      1.10.0           h5888daf_1               conda-forge\nmarkdown                   3.9              pyhd8ed1ab_0             conda-forge\nmarkdown-it-py             4.0.0            pyhd8ed1ab_0             conda-forge\nmdurl                      0.1.2            pyhd8ed1ab_1             conda-forge\nncurses                    6.5              h2d0b736_3               conda-forge\nnumpy                      2.3.3            py313hf6604e3_0          conda-forge\nopenjpeg                   2.5.4            h55fea9a_0               conda-forge\nopenssl                    3.5.4            h26f9b46_0               conda-forge\npackaging                  25.0             pyh29332c3_1             conda-forge\npandas                     2.3.3            py313h08cd8bf_1          conda-forge\npillow                     11.3.0           py313ha492abd_3          conda-forge\npip                        25.2             pyh145f28c_0             conda-forge\nplatformdirs               4.5.0            pyhcf101f3_0             conda-forge\npthread-stubs              0.4              hb9d3cd8_1002            conda-forge\npycparser                  2.23             pypi_0                   pypi\npydantic                   2.11.10          pyh3cfb1c2_0             conda-forge\npydantic-core              2.33.2           py313h4b2b08d_0          conda-forge\npydantic-settings          2.11.0           pyh3cfb1c2_0             conda-forge\npygithub                   2.8.1            pypi_0                   pypi\npygments                   2.19.2           pyhd8ed1ab_0             conda-forge\npyjwt                      2.10.1           pypi_0                   pypi\npynacl                     1.6.0            pypi_0                   pypi\npython                     3.13.7           h2b335a9_100_cp313       conda-forge\npython-dateutil            2.9.0.post0      pyhe01879c_2             conda-forge\npython-dotenv              1.1.1            pyhe01879c_0             conda-forge\npython-tzdata              2025.2           pyhd8ed1ab_0             conda-forge\npython_abi                 3.13             8_cp313                  conda-forge\npytz                       2025.2           pyhd8ed1ab_0             conda-forge\nrav1e                      0.7.1            h8fae777_3               conda-forge\nreadline                   8.2              h8c095d6_2               conda-forge\nrequests                   2.32.5           pypi_0                   pypi\nrich                       14.1.0           pyhe01879c_0             conda-forge\nruyaml                     0.91.0           pyhd8ed1ab_1             conda-forge\nscipy                      1.16.2           py313h11c21cd_0          conda-forge\nsetuptools                 80.9.0           pyhff2d567_0             conda-forge\nsix                        1.17.0           pyhe01879c_1             conda-forge\nsnappy                     1.2.2            h03e3b7b_0               conda-forge\nsniffio                    1.3.1            pyhd8ed1ab_1             conda-forge\nsvt-av1                    3.1.2            hecca717_0               conda-forge\ntifffile                   2025.10.4        pyhd8ed1ab_0             conda-forge\ntk                         8.6.13           noxft_hd72426e_102       conda-forge\ntqdm                       4.67.1           pyhd8ed1ab_1             conda-forge\ntyping-extensions          4.15.0           h396c80c_0               conda-forge\ntyping-inspection          0.4.2            pyhd8ed1ab_0             conda-forge\ntyping_extensions          4.15.0           pyhcf101f3_0             conda-forge\ntzdata                     2025b            h78e105d_0               conda-forge\nurllib3                    2.5.0            pypi_0                   pypi\nxarray                     2025.1.2         pyhd8ed1ab_0             conda-forge\nxorg-libxau                1.0.12           hb9d3cd8_0               conda-forge\nxorg-libxdmcp              1.1.5            hb9d3cd8_0               conda-forge\nzfp                        1.0.1            h909a3a2_3               conda-forge\nzipp                       3.23.0           pyhd8ed1ab_0             conda-forge\nzlib-ng                    2.2.5            hde8ca8f_0               conda-forge\nzstd                       1.5.7            hb8e6e7a_2               conda-forge\n",
                    "source_name": "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/rdf.yaml?version=v0",
                    "status": "failed",
                    "type": "unknown"
                },
                "error": "test command 'conda run -n 23660dfeb3edb17f649bd73a8b8a8769936ecb63634fab8621dae229fa966652 bioimageio test https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/rdf.yaml?version=v0 --summary-path=/tmp/tmpfn8lhntm/pytorch_state_dict/summary.json --determinism=full --stop-early' did not produce a summary file at /tmp/tmpfn8lhntm/pytorch_state_dict/summary.json",
                "links": [],
                "score": 0.0,
                "status": "failed"
            },
            "0.9.4": {
                "badge": null,
                "details": {
                    "details": [
                        {
                            "context": {
                                "file_name": "rdf.yaml",
                                "known_files": {
                                    "environment.yml": "ab73b411af9a529f08de92c2ef12cd1c261c072e8e44f197e5d2a0dba4c2e86a",
                                    "https://github.com/ElpadoCan/SpotMAX": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/README.md?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/cover.png?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/environment.yml?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/input_sample.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/model.py?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/model_usage.py?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/output_sample_mask.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/unet_best.pth?version=v0": null,
                                    "input_sample.npy": "b3ebf3e5ef1f0547c2bfc70d2a4e80d23a2d3676c984752d49cdbe3d2525f161",
                                    "model.py": "6f309b7a1b5616f8d4f85ab291ae0ea960e1841b44b960099da0bf706e703791",
                                    "model_usage.py": "3fbae1fcd7e507f94ff9bfc1cdcb800df61fddd3b4953a7f441f3e347c9efe8c",
                                    "output_sample_mask.npy": "41ac73f1ca089e6fe631b825bf6e3ab70c0d2d3cf59a24a494ad293fc8541801",
                                    "unet_best.pth": "c1e276f8aa450bac8ecb3b04068754182de77cf20aefe1e4d01729f71804a901"
                                },
                                "original_source_name": null,
                                "perform_io_checks": true,
                                "root": "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files?version=v0",
                                "update_hashes": false
                            },
                            "errors": [],
                            "loc": [],
                            "name": "Successfully created `ModelDescr` instance.",
                            "recommended_env": null,
                            "saved_conda_compare": null,
                            "status": "passed",
                            "warnings": []
                        },
                        {
                            "context": {
                                "file_name": "rdf.yaml",
                                "known_files": {
                                    "environment.yml": "ab73b411af9a529f08de92c2ef12cd1c261c072e8e44f197e5d2a0dba4c2e86a",
                                    "https://github.com/ElpadoCan/SpotMAX": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/README.md?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/cover.png?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/environment.yml?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/input_sample.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/model.py?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/model_usage.py?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/output_sample_mask.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/unet_best.pth?version=v0": null,
                                    "input_sample.npy": "b3ebf3e5ef1f0547c2bfc70d2a4e80d23a2d3676c984752d49cdbe3d2525f161",
                                    "model.py": "6f309b7a1b5616f8d4f85ab291ae0ea960e1841b44b960099da0bf706e703791",
                                    "model_usage.py": "3fbae1fcd7e507f94ff9bfc1cdcb800df61fddd3b4953a7f441f3e347c9efe8c",
                                    "output_sample_mask.npy": "41ac73f1ca089e6fe631b825bf6e3ab70c0d2d3cf59a24a494ad293fc8541801",
                                    "unet_best.pth": "c1e276f8aa450bac8ecb3b04068754182de77cf20aefe1e4d01729f71804a901"
                                },
                                "original_source_name": null,
                                "perform_io_checks": true,
                                "root": "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files?version=v0",
                                "update_hashes": false
                            },
                            "errors": [],
                            "loc": [],
                            "name": "bioimageio.spec format validation model 0.5.5",
                            "recommended_env": null,
                            "saved_conda_compare": null,
                            "status": "passed",
                            "warnings": [
                                {
                                    "loc": [
                                        "documentation"
                                    ],
                                    "msg": "No '# Validation' (sub)section found in README.md.",
                                    "severity": 30,
                                    "type": "warning"
                                },
                                {
                                    "loc": [
                                        "inputs",
                                        0,
                                        "sample_tensor"
                                    ],
                                    "msg": "Needs to be filled for FAIR compliance",
                                    "severity": 35,
                                    "type": "warning"
                                },
                                {
                                    "loc": [
                                        "outputs",
                                        0,
                                        "sample_tensor"
                                    ],
                                    "msg": "Needs to be filled for FAIR compliance",
                                    "severity": 35,
                                    "type": "warning"
                                }
                            ]
                        },
                        {
                            "context": null,
                            "errors": [
                                {
                                    "loc": [
                                        "weights",
                                        "pytorch_state_dict"
                                    ],
                                    "msg": "EOF when reading a line",
                                    "traceback_html": "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<style>\n.r1 {color: #800000; text-decoration-color: #800000}\n.r2 {color: #800000; text-decoration-color: #800000; font-weight: bold}\n.r3 {color: #bf7f7f; text-decoration-color: #bf7f7f; font-weight: bold}\n.r4 {color: #7f7f7f; text-decoration-color: #7f7f7f}\n.r5 {color: #0000ff; text-decoration-color: #0000ff}\n.r6 {color: #808000; text-decoration-color: #808000}\n.r7 {color: #00ffff; text-decoration-color: #00ffff}\n.r8 {color: #ff00ff; text-decoration-color: #ff00ff}\n.r9 {font-weight: bold; text-decoration: underline}\n.r10 {color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold; text-decoration: underline}\n.r11 {color: #0000ff; text-decoration-color: #0000ff; font-weight: bold; text-decoration: underline}\n.r12 {color: #808080; text-decoration-color: #808080}\n.r13 {color: #00ffff; text-decoration-color: #00ffff; text-decoration: underline}\n.r14 {font-weight: bold}\n.r15 {color: #00ff00; text-decoration-color: #00ff00}\n.r16 {color: #808000; text-decoration-color: #808000; font-weight: bold; text-decoration: underline}\n.r17 {color: #00ffff; text-decoration-color: #00ffff; font-weight: bold; text-decoration: underline}\n.r18 {color: #ff0000; text-decoration-color: #ff0000; font-weight: bold}\nbody {\n    color: #000000;\n    background-color: #ffffff;\n}\n</style>\n</head>\n<body>\n    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><code style=\"font-family:inherit\"><span class=\"r1\">╭─────────────────────────────── </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> ────────────────────────────────╮</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 774 </span><span class=\"r4\">│   │   </span>test_input = get_test_input_sample(model)                                         <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 775 </span><span class=\"r4\">│   │   </span>expected = get_test_output_sample(model)                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 776 </span><span class=\"r4\">│   │   </span>                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span> 777 <span class=\"r4\">│   │   </span><span class=\"r5\">with</span> create_prediction_pipeline(                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 778 </span><span class=\"r4\">│   │   │   </span>bioimageio_model=model, devices=devices, weight_format=weight_format          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 779 </span><span class=\"r4\">│   │   </span>) <span class=\"r5\">as</span> prediction_pipeline:                                                         <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 780 </span><span class=\"r4\">│   │   │   </span>results = prediction_pipeline.predict_sample_without_blocking(test_input)     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">368 </span><span class=\"r4\">│   │   │   </span><span class=\"r6\">f&quot;deprecated create_prediction_pipeline kwargs: {</span><span class=\"r7\">set</span>(deprecated_kwargs)<span class=\"r6\">}&quot;</span>      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">369 </span><span class=\"r4\">│   │   </span>)                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">370 </span><span class=\"r4\">│   </span>                                                                                       <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span>371 <span class=\"r4\">│   </span>model_adapter = model_adapter <span class=\"r8\">or</span> <span class=\"r9\">create_model_adapter(</span>                                 <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">372 </span><span class=\"r4\">│   │   </span><span class=\"r9\">model_description=bioimageio_model,</span>                                                <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">373 </span><span class=\"r4\">│   │   </span><span class=\"r9\">devices=devices,</span>                                                                   <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">374 </span><span class=\"r4\">│   │   </span><span class=\"r9\">weight_format_priority_order=weights_format </span><span class=\"r10\">and</span><span class=\"r9\"> (weights_format,),</span>                 <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">166 </span><span class=\"r4\">│   │   </span><span class=\"r5\">assert</span> errors                                                                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">167 </span><span class=\"r4\">│   │   </span><span class=\"r5\">if</span> <span class=\"r7\">len</span>(weight_format_priority_order) == <span class=\"r5\">1</span>:                                         <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">168 </span><span class=\"r4\">│   │   │   </span><span class=\"r5\">assert</span> <span class=\"r7\">len</span>(errors) == <span class=\"r5\">1</span>                                                        <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span>169 <span class=\"r4\">│   │   │   </span><span class=\"r11\">raise</span><span class=\"r9\"> errors[</span><span class=\"r11\">0</span><span class=\"r9\">]</span>                                                                <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">170 </span><span class=\"r4\">│   │   </span>                                                                                   <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">171 </span><span class=\"r4\">│   │   </span><span class=\"r5\">else</span>:                                                                              <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">172 </span><span class=\"r4\">│   │   │   </span>msg = (                                                                        <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">109 </span><span class=\"r4\">│   │   │   │   </span><span class=\"r5\">try</span>:                                                                       <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">110 </span><span class=\"r4\">│   │   │   │   │   </span><span class=\"r5\">from</span><span class=\"r12\"> </span><span class=\"r13\">.pytorch_backend</span><span class=\"r12\"> </span><span class=\"r5\">import</span> PytorchModelAdapter                       <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">111 </span><span class=\"r4\">│   │   │   │   │   </span>                                                                       <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span>112 <span class=\"r4\">│   │   │   │   │   </span><span class=\"r5\">return</span> PytorchModelAdapter(                                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">113 </span><span class=\"r4\">│   │   │   │   │   │   </span>model_description=model_description, devices=devices               <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">114 </span><span class=\"r4\">│   │   │   │   │   </span>)                                                                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">115 </span><span class=\"r4\">│   │   │   │   </span><span class=\"r5\">except</span> <span class=\"r7\">Exception</span> <span class=\"r5\">as</span> e:                                                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 35 </span><span class=\"r4\">│   │   │   </span><span class=\"r5\">raise</span> <span class=\"r7\">ValueError</span>(<span class=\"r6\">&quot;No `pytorch_state_dict` weights found&quot;</span>)                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 36 </span><span class=\"r4\">│   │   </span>                                                                                   <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 37 </span><span class=\"r4\">│   │   </span>devices = get_devices(devices)                                                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span> 38 <span class=\"r4\">│   │   </span><span class=\"r7\">self</span>._model = <span class=\"r9\">load_torch_model(weights, load_state=</span><span class=\"r11\">True</span><span class=\"r9\">, devices=devices)</span>          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 39 </span><span class=\"r4\">│   │   </span><span class=\"r5\">if</span> mode == <span class=\"r6\">&quot;eval&quot;</span>:                                                                 <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 40 </span><span class=\"r4\">│   │   │   </span><span class=\"r7\">self</span>._model = <span class=\"r7\">self</span>._model.eval()                                               <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 41 </span><span class=\"r4\">│   │   </span><span class=\"r5\">elif</span> mode == <span class=\"r6\">&quot;train&quot;</span>:                                                              <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">113 </span><span class=\"r4\">│   │   </span><span class=\"r5\">if</span> <span class=\"r7\">isinstance</span>(weight_spec, v0_4.PytorchStateDictWeightsDescr)                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">114 </span><span class=\"r4\">│   │   </span><span class=\"r5\">else</span> weight_spec.architecture.kwargs                                               <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">115 </span><span class=\"r4\">│   </span>)                                                                                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span>116 <span class=\"r4\">│   </span>torch_model = <span class=\"r9\">custom_callable(**model_kwargs)</span>                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">117 </span><span class=\"r4\">│   </span>                                                                                       <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">118 </span><span class=\"r4\">│   </span><span class=\"r5\">if</span> <span class=\"r8\">not</span> <span class=\"r7\">isinstance</span>(torch_model, nn.Module):                                             <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">119 </span><span class=\"r4\">│   │   </span><span class=\"r5\">if</span> <span class=\"r7\">isinstance</span>(                                                                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/tmp/tmpykuzgray/</span><span class=\"r14\">model_6f309b7a1b5616f8d4f85ab291ae0ea960e1841b44b960099da0bf706e703791.py</span>:132 i <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">129 </span><span class=\"r4\">│   │   </span>                                                                                   <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">130 </span><span class=\"r4\">│   │   </span><span class=\"r7\">self</span>.init_inference_params()                                                       <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">131 </span><span class=\"r4\">│   │   </span>                                                                                   <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span>132 <span class=\"r4\">│   │   </span>modules = <span class=\"r9\">install_and_import_modules()</span>                                             <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">133 </span><span class=\"r4\">│   │   </span>transform, Data, Operation, NDModel, Models, models =  modules                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">134 </span><span class=\"r4\">│   │   </span><span class=\"r7\">self</span>.transform = transform                                                         <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">135 </span><span class=\"r4\">│   │   </span><span class=\"r7\">self</span>.Data = Data                                                                   <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/tmp/tmpykuzgray/</span><span class=\"r14\">model_6f309b7a1b5616f8d4f85ab291ae0ea960e1841b44b960099da0bf706e703791.py</span>:19 in <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 16 </span><span class=\"r5\">from</span><span class=\"r12\"> </span><span class=\"r13\">spotmax.nnet</span><span class=\"r12\"> </span><span class=\"r5\">import</span> install_and_download, config_yaml_path                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 17 </span>                                                                                           <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 18 </span><span class=\"r5\">def</span><span class=\"r12\"> </span><span class=\"r15\">install_and_import_modules</span>():                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span> 19 <span class=\"r4\">│   </span><span class=\"r9\">install_and_download()</span>                                                                 <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 20 </span><span class=\"r4\">│   </span><span class=\"r5\">from</span><span class=\"r12\"> </span><span class=\"r13\">spotmax.nnet</span><span class=\"r12\"> </span><span class=\"r5\">import</span> transform                                                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 21 </span><span class=\"r4\">│   </span><span class=\"r5\">from</span><span class=\"r12\"> </span><span class=\"r13\">spotmax.nnet.models.nd_model</span><span class=\"r12\"> </span><span class=\"r5\">import</span> (                                             <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\"> 22 </span><span class=\"r4\">│   │   </span>Data, Operation, NDModel, Models, models                                           <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">10 </span><span class=\"r5\">from</span><span class=\"r12\"> </span><span class=\"r13\">spotmax</span><span class=\"r12\"> </span><span class=\"r5\">import</span> is_cli, printl, io                                                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">11 </span>                                                                                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">12 </span><span class=\"r5\">def</span><span class=\"r12\"> </span><span class=\"r15\">install_and_download</span>():                                                                 <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span>13 <span class=\"r4\">│   </span><span class=\"r9\">check_install_torch(is_cli=is_cli, caller_name=</span><span class=\"r16\">&#x27;SpotMAX&#x27;</span><span class=\"r9\">)</span>                               <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">14 </span><span class=\"r4\">│   </span>                                                                                        <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">15 </span><span class=\"r4\">│   </span>check_install_package(                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">16 </span><span class=\"r4\">│   │   </span><span class=\"r6\">&#x27;pytorch3dunet&#x27;</span>,                                                                    <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3135 </span><span class=\"r4\">│   │   </span>traceback.print_exc()                                                             <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3136 </span><span class=\"r4\">│   </span>                                                                                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3137 </span><span class=\"r4\">│   </span><span class=\"r5\">if</span> is_cli:                                                                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span>3138 <span class=\"r4\">│   │   </span><span class=\"r9\">_install_pytorch_cli(caller_name=caller_name)</span>                                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3139 </span><span class=\"r4\">│   │   </span><span class=\"r5\">return</span>                                                                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3140 </span><span class=\"r4\">│   </span>                                                                                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3141 </span><span class=\"r4\">│   </span>win = apps.InstallPyTorchDialog(parent=qparent, caller_name=caller_name)              <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3451 </span><span class=\"r4\">│   </span><span class=\"r5\">for</span> question, choices <span class=\"r8\">in</span> questions.items():                                           <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3452 </span><span class=\"r4\">│   │   </span>input_txt = get_cli_multi_choice_question(question, choices)                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3453 </span><span class=\"r4\">│   │   </span><span class=\"r5\">while</span> <span class=\"r5\">True</span>:                                                                       <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span>3454 <span class=\"r4\">│   │   │   </span>answer = <span class=\"r17\">input</span><span class=\"r9\">(input_txt)</span>                                                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3455 </span><span class=\"r4\">│   │   │   </span><span class=\"r5\">if</span> answer.lower() == <span class=\"r6\">&#x27;q&#x27;</span>:                                                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3456 </span><span class=\"r4\">│   │   │   │   </span>exit(<span class=\"r6\">&#x27;Execution stopped by the user.&#x27;</span>)                                    <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r4\">3457 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">╰──────────────────────────────────────────────────────────────────────────────────────────────────╯</span>\n<span class=\"r18\">EOFError: </span>EOF when reading a line\n</code></pre>\n</body>\n</html>\n",
                                    "traceback_md": "╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮\n│ /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p │\n│                                                                                                  │\n│    774 │   │   test_input = get_test_input_sample(model)                                         │\n│    775 │   │   expected = get_test_output_sample(model)                                          │\n│    776 │   │                                                                                     │\n│ ❱  777 │   │   with create_prediction_pipeline(                                                  │\n│    778 │   │   │   bioimageio_model=model, devices=devices, weight_format=weight_format          │\n│    779 │   │   ) as prediction_pipeline:                                                         │\n│    780 │   │   │   results = prediction_pipeline.predict_sample_without_blocking(test_input)     │\n│                                                                                                  │\n│ /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p │\n│                                                                                                  │\n│   368 │   │   │   f\"deprecated create_prediction_pipeline kwargs: {set(deprecated_kwargs)}\"      │\n│   369 │   │   )                                                                                  │\n│   370 │                                                                                          │\n│ ❱ 371 │   model_adapter = model_adapter or create_model_adapter(                                 │\n│   372 │   │   model_description=bioimageio_model,                                                │\n│   373 │   │   devices=devices,                                                                   │\n│   374 │   │   weight_format_priority_order=weights_format and (weights_format,),                 │\n│                                                                                                  │\n│ /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p │\n│                                                                                                  │\n│   166 │   │   assert errors                                                                      │\n│   167 │   │   if len(weight_format_priority_order) == 1:                                         │\n│   168 │   │   │   assert len(errors) == 1                                                        │\n│ ❱ 169 │   │   │   raise errors[0]                                                                │\n│   170 │   │                                                                                      │\n│   171 │   │   else:                                                                              │\n│   172 │   │   │   msg = (                                                                        │\n│                                                                                                  │\n│ /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p │\n│                                                                                                  │\n│   109 │   │   │   │   try:                                                                       │\n│   110 │   │   │   │   │   from .pytorch_backend import PytorchModelAdapter                       │\n│   111 │   │   │   │   │                                                                          │\n│ ❱ 112 │   │   │   │   │   return PytorchModelAdapter(                                            │\n│   113 │   │   │   │   │   │   model_description=model_description, devices=devices               │\n│   114 │   │   │   │   │   )                                                                      │\n│   115 │   │   │   │   except Exception as e:                                                     │\n│                                                                                                  │\n│ /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p │\n│                                                                                                  │\n│    35 │   │   │   raise ValueError(\"No `pytorch_state_dict` weights found\")                      │\n│    36 │   │                                                                                      │\n│    37 │   │   devices = get_devices(devices)                                                     │\n│ ❱  38 │   │   self._model = load_torch_model(weights, load_state=True, devices=devices)          │\n│    39 │   │   if mode == \"eval\":                                                                 │\n│    40 │   │   │   self._model = self._model.eval()                                               │\n│    41 │   │   elif mode == \"train\":                                                              │\n│                                                                                                  │\n│ /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p │\n│                                                                                                  │\n│   113 │   │   if isinstance(weight_spec, v0_4.PytorchStateDictWeightsDescr)                      │\n│   114 │   │   else weight_spec.architecture.kwargs                                               │\n│   115 │   )                                                                                      │\n│ ❱ 116 │   torch_model = custom_callable(**model_kwargs)                                          │\n│   117 │                                                                                          │\n│   118 │   if not isinstance(torch_model, nn.Module):                                             │\n│   119 │   │   if isinstance(                                                                     │\n│                                                                                                  │\n│ /tmp/tmpykuzgray/model_6f309b7a1b5616f8d4f85ab291ae0ea960e1841b44b960099da0bf706e703791.py:132 i │\n│                                                                                                  │\n│   129 │   │                                                                                      │\n│   130 │   │   self.init_inference_params()                                                       │\n│   131 │   │                                                                                      │\n│ ❱ 132 │   │   modules = install_and_import_modules()                                             │\n│   133 │   │   transform, Data, Operation, NDModel, Models, models =  modules                     │\n│   134 │   │   self.transform = transform                                                         │\n│   135 │   │   self.Data = Data                                                                   │\n│                                                                                                  │\n│ /tmp/tmpykuzgray/model_6f309b7a1b5616f8d4f85ab291ae0ea960e1841b44b960099da0bf706e703791.py:19 in │\n│                                                                                                  │\n│    16 from spotmax.nnet import install_and_download, config_yaml_path                            │\n│    17                                                                                            │\n│    18 def install_and_import_modules():                                                          │\n│ ❱  19 │   install_and_download()                                                                 │\n│    20 │   from spotmax.nnet import transform                                                     │\n│    21 │   from spotmax.nnet.models.nd_model import (                                             │\n│    22 │   │   Data, Operation, NDModel, Models, models                                           │\n│                                                                                                  │\n│ /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p │\n│                                                                                                  │\n│   10 from spotmax import is_cli, printl, io                                                      │\n│   11                                                                                             │\n│   12 def install_and_download():                                                                 │\n│ ❱ 13 │   check_install_torch(is_cli=is_cli, caller_name='SpotMAX')                               │\n│   14 │                                                                                           │\n│   15 │   check_install_package(                                                                  │\n│   16 │   │   'pytorch3dunet',                                                                    │\n│                                                                                                  │\n│ /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p │\n│                                                                                                  │\n│   3135 │   │   traceback.print_exc()                                                             │\n│   3136 │                                                                                         │\n│   3137 │   if is_cli:                                                                            │\n│ ❱ 3138 │   │   _install_pytorch_cli(caller_name=caller_name)                                     │\n│   3139 │   │   return                                                                            │\n│   3140 │                                                                                         │\n│   3141 │   win = apps.InstallPyTorchDialog(parent=qparent, caller_name=caller_name)              │\n│                                                                                                  │\n│ /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432/lib/p │\n│                                                                                                  │\n│   3451 │   for question, choices in questions.items():                                           │\n│   3452 │   │   input_txt = get_cli_multi_choice_question(question, choices)                      │\n│   3453 │   │   while True:                                                                       │\n│ ❱ 3454 │   │   │   answer = input(input_txt)                                                     │\n│   3455 │   │   │   if answer.lower() == 'q':                                                     │\n│   3456 │   │   │   │   exit('Execution stopped by the user.')                                    │\n│   3457                                                                                           │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────╯\nEOFError: EOF when reading a line\n",
                                    "type": "bioimageio.core",
                                    "with_traceback": true
                                }
                            ],
                            "loc": [
                                "weights",
                                "pytorch_state_dict"
                            ],
                            "name": "Reproduce test outputs from test inputs (pytorch_state_dict)",
                            "recommended_env": {
                                "channels": [
                                    "conda-forge",
                                    "fastai",
                                    "nodefaults"
                                ],
                                "dependencies": [
                                    "conda-forge::bioimageio.core",
                                    "pip",
                                    "python=3.11",
                                    {
                                        "pip": [
                                            "cellacdc",
                                            "opencv-python-headless",
                                            "pytorch3dunet-spotmax",
                                            "pyyaml",
                                            "spotmax",
                                            "torch"
                                        ]
                                    }
                                ],
                                "name": "spotmax_biio"
                            },
                            "saved_conda_compare": "Success. All the packages in the specification file are present in the environment with matching version and build string.\n",
                            "status": "failed",
                            "warnings": []
                        }
                    ],
                    "env": [
                        [
                            "bioimageio.core",
                            "0.9.4",
                            "",
                            ""
                        ],
                        [
                            "bioimageio.spec",
                            "0.5.5.6",
                            "",
                            ""
                        ]
                    ],
                    "format_version": "0.5.5",
                    "id": "patient-swan",
                    "metadata_completeness": 0.7575757575757576,
                    "name": "bioimageio format validation",
                    "saved_conda_list": "# packages in environment at /usr/share/miniconda/envs/e849bec8cc24470506fe7d6e87d3d3bb162897d9ccb70c67a933ee487b877432:\n#\n# Name                      Version          Build                    Channel\n_libgcc_mutex               0.1              conda_forge              conda-forge\n_openmp_mutex               4.5              2_gnu                    conda-forge\nannotated-types             0.7.0            pyhd8ed1ab_1             conda-forge\nanyio                       4.11.0           pyhcf101f3_0             conda-forge\naom                         3.9.1            hac33072_0               conda-forge\nbioimageio.core             0.9.4            pyhd8ed1ab_0             conda-forge\nbioimageio.spec             0.5.5.6          pyhd8ed1ab_0             conda-forge\nblosc                       1.21.6           he440d0b_1               conda-forge\nboto3                       1.40.59          pypi_0                   pypi\nbotocore                    1.40.59          pypi_0                   pypi\nbrunsli                     0.1              he3183e4_1               conda-forge\nbzip2                       1.0.8            hda65f42_8               conda-forge\nc-ares                      1.34.5           hb9d3cd8_0               conda-forge\nc-blosc2                    2.21.3           h4cfbee9_0               conda-forge\nca-certificates             2025.10.5        hbd8a1cb_0               conda-forge\ncached-property             1.5.2            hd8ed1ab_1               conda-forge\ncached_property             1.5.2            pyha770c72_1             conda-forge\ncellacdc                    1.6.9            pypi_0                   pypi\ncertifi                     2025.10.5        pyhd8ed1ab_0             conda-forge\ncharls                      2.4.2            h59595ed_0               conda-forge\ncharset-normalizer          3.4.4            pypi_0                   pypi\ncolorama                    0.4.6            pyhd8ed1ab_1             conda-forge\ndav1d                       1.2.1            hd590300_0               conda-forge\ndistro                      1.9.0            pyhd8ed1ab_1             conda-forge\ndnspython                   2.8.0            pyhcf101f3_0             conda-forge\nemail-validator             2.3.0            pyhd8ed1ab_0             conda-forge\nemail_validator             2.3.0            hd8ed1ab_0               conda-forge\nexceptiongroup              1.3.0            pyhd8ed1ab_0             conda-forge\nfilelock                    3.20.0           pyhd8ed1ab_0             conda-forge\nfsspec                      2025.9.0         pypi_0                   pypi\ngenericache                 0.5.2            pyhd8ed1ab_0             conda-forge\ngiflib                      5.2.2            hd590300_0               conda-forge\nh11                         0.16.0           pyhd8ed1ab_0             conda-forge\nh2                          4.3.0            pyhcf101f3_0             conda-forge\nh5py                        3.15.1           nompi_py311h0b2f468_100  conda-forge\nhdf5                        1.14.6           nompi_h6e4c0c1_103       conda-forge\nhpack                       4.1.0            pyhd8ed1ab_0             conda-forge\nhttpcore                    1.0.9            pyh29332c3_0             conda-forge\nhttpx                       0.28.1           pyhd8ed1ab_0             conda-forge\nhyperframe                  6.1.0            pyhd8ed1ab_0             conda-forge\nidna                        3.11             pyhd8ed1ab_0             conda-forge\nimagecodecs                 2025.8.2         py311h5031496_4          conda-forge\nimageio                     2.37.0           pyhfb79c49_0             conda-forge\nimportlib-metadata          8.7.0            pyhe01879c_1             conda-forge\njinja2                      3.1.6            pypi_0                   pypi\njmespath                    1.0.1            pypi_0                   pypi\njoblib                      1.5.2            pypi_0                   pypi\njxrlib                      1.1              hd590300_3               conda-forge\nkeyutils                    1.6.3            hb9d3cd8_0               conda-forge\nkrb5                        1.21.3           h659f571_0               conda-forge\nlazy-loader                 0.4              pypi_0                   pypi\nlcms2                       2.17             h717163a_0               conda-forge\nld_impl_linux-64            2.44             h1aa0949_4               conda-forge\nlerc                        4.0.0            h0aef613_1               conda-forge\nlibaec                      1.1.4            h3f801dc_0               conda-forge\nlibavif16                   1.3.0            h6395336_2               conda-forge\nlibblas                     3.9.0            37_h4a7cf45_openblas     conda-forge\nlibbrotlicommon             1.1.0            hb03c661_4               conda-forge\nlibbrotlidec                1.1.0            hb03c661_4               conda-forge\nlibbrotlienc                1.1.0            hb03c661_4               conda-forge\nlibcblas                    3.9.0            37_h0358290_openblas     conda-forge\nlibcurl                     8.16.0           h4e3cde8_0               conda-forge\nlibdeflate                  1.24             h86f0d12_0               conda-forge\nlibedit                     3.1.20250104     pl5321h7949ede_0         conda-forge\nlibev                       4.33             hd590300_2               conda-forge\nlibexpat                    2.7.1            hecca717_0               conda-forge\nlibffi                      3.5.2            h9ec8514_0               conda-forge\nlibfreetype                 2.14.1           ha770c72_0               conda-forge\nlibfreetype6                2.14.1           h73754d4_0               conda-forge\nlibgcc                      15.2.0           h767d61c_7               conda-forge\nlibgcc-ng                   15.2.0           h69a702a_7               conda-forge\nlibgfortran                 15.2.0           h69a702a_7               conda-forge\nlibgfortran5                15.2.0           hcd61629_7               conda-forge\nlibgomp                     15.2.0           h767d61c_7               conda-forge\nlibhwy                      1.3.0            h4c17acf_1               conda-forge\nlibjpeg-turbo               3.1.0            hb9d3cd8_0               conda-forge\nlibjxl                      0.11.1           h6cb5226_4               conda-forge\nliblapack                   3.9.0            37_h47877c9_openblas     conda-forge\nliblzma                     5.8.1            hb9d3cd8_2               conda-forge\nlibnghttp2                  1.67.0           had1ee68_0               conda-forge\nlibnsl                      2.0.1            hb9d3cd8_1               conda-forge\nlibopenblas                 0.3.30           pthreads_h94d23a6_2      conda-forge\nlibpng                      1.6.50           h421ea60_1               conda-forge\nlibsqlite                   3.50.4           h0c1763c_0               conda-forge\nlibssh2                     1.11.1           hcf80075_0               conda-forge\nlibstdcxx                   15.2.0           h8f9b012_7               conda-forge\nlibstdcxx-ng                15.2.0           h4852527_7               conda-forge\nlibtiff                     4.7.1            h8261f1e_0               conda-forge\nlibuuid                     2.41.2           he9a06e4_0               conda-forge\nlibwebp-base                1.6.0            hd42ef1d_0               conda-forge\nlibxcb                      1.17.0           h8a09558_0               conda-forge\nlibxcrypt                   4.4.36           hd590300_1               conda-forge\nlibzlib                     1.3.1            hb9d3cd8_2               conda-forge\nlibzopfli                   1.0.3            h9c3ff4c_0               conda-forge\nloguru                      0.7.3            pyh707e725_0             conda-forge\nlz4-c                       1.10.0           h5888daf_1               conda-forge\nmarkdown                    3.9              pyhd8ed1ab_0             conda-forge\nmarkdown-it-py              4.0.0            pyhd8ed1ab_0             conda-forge\nmarkupsafe                  3.0.3            pypi_0                   pypi\nmdurl                       0.1.2            pyhd8ed1ab_1             conda-forge\nmpmath                      1.3.0            pypi_0                   pypi\nnatsort                     8.4.0            pypi_0                   pypi\nncurses                     6.5              h2d0b736_3               conda-forge\nnetworkx                    3.5              pypi_0                   pypi\nnumpy                       2.2.6            pypi_0                   pypi\nnvidia-cublas-cu12          12.8.4.1         pypi_0                   pypi\nnvidia-cuda-cupti-cu12      12.8.90          pypi_0                   pypi\nnvidia-cuda-nvrtc-cu12      12.8.93          pypi_0                   pypi\nnvidia-cuda-runtime-cu12    12.8.90          pypi_0                   pypi\nnvidia-cudnn-cu12           9.10.2.21        pypi_0                   pypi\nnvidia-cufft-cu12           11.3.3.83        pypi_0                   pypi\nnvidia-cufile-cu12          1.13.1.3         pypi_0                   pypi\nnvidia-curand-cu12          10.3.9.90        pypi_0                   pypi\nnvidia-cusolver-cu12        11.7.3.90        pypi_0                   pypi\nnvidia-cusparse-cu12        12.5.8.93        pypi_0                   pypi\nnvidia-cusparselt-cu12      0.7.1            pypi_0                   pypi\nnvidia-nccl-cu12            2.27.5           pypi_0                   pypi\nnvidia-nvjitlink-cu12       12.8.93          pypi_0                   pypi\nnvidia-nvshmem-cu12         3.3.20           pypi_0                   pypi\nnvidia-nvtx-cu12            12.8.90          pypi_0                   pypi\nopencv-python-headless      4.12.0.88        pypi_0                   pypi\nopenjpeg                    2.5.4            h55fea9a_0               conda-forge\nopenssl                     3.5.4            h26f9b46_0               conda-forge\npackaging                   25.0             pyh29332c3_1             conda-forge\npandas                      2.3.3            py311hed34c8f_1          conda-forge\npillow                      11.3.0           py311h98278a2_3          conda-forge\npip                         25.2             pyh8b19718_0             conda-forge\nplatformdirs                4.5.0            pyhcf101f3_0             conda-forge\npsutil                      7.1.2            pypi_0                   pypi\npthread-stubs               0.4              hb9d3cd8_1002            conda-forge\npydantic                    2.11.10          pyh3cfb1c2_0             conda-forge\npydantic-core               2.33.2           py311hdae7d1d_0          conda-forge\npydantic-settings           2.11.0           pyh3cfb1c2_0             conda-forge\npygments                    2.19.2           pyhd8ed1ab_0             conda-forge\npython                      3.11.14          hd63d673_2_cpython       conda-forge\npython-dateutil             2.9.0.post0      pyhe01879c_2             conda-forge\npython-dotenv               1.2.1            pyhcf101f3_0             conda-forge\npython-tzdata               2025.2           pyhd8ed1ab_0             conda-forge\npython_abi                  3.11             8_cp311                  conda-forge\npytorch3dunet-spotmax       1.0.0            pypi_0                   pypi\npytz                        2025.2           pyhd8ed1ab_0             conda-forge\npyyaml                      6.0.3            pypi_0                   pypi\nrav1e                       0.7.1            h8fae777_3               conda-forge\nreadline                    8.2              h8c095d6_2               conda-forge\nrequests                    2.32.5           pypi_0                   pypi\nrich                        14.2.0           pyhcf101f3_0             conda-forge\nruyaml                      0.91.0           pyhd8ed1ab_1             conda-forge\ns3transfer                  0.14.0           pypi_0                   pypi\nscikit-image                0.25.2           pypi_0                   pypi\nscikit-learn                1.7.2            pypi_0                   pypi\nscipy                       1.16.2           py311h1e13796_0          conda-forge\nsetuptools                  80.9.0           pyhff2d567_0             conda-forge\nsetuptools-scm              9.2.2            pypi_0                   pypi\nsix                         1.17.0           pyhe01879c_1             conda-forge\nsnappy                      1.2.2            h03e3b7b_0               conda-forge\nsniffio                     1.3.1            pyhd8ed1ab_1             conda-forge\nspotmax                     1.1.9            pypi_0                   pypi\nsvt-av1                     3.1.2            hecca717_0               conda-forge\nsympy                       1.14.0           pypi_0                   pypi\nthreadpoolctl               3.6.0            pypi_0                   pypi\ntifffile                    2025.10.16       pyhd8ed1ab_0             conda-forge\ntk                          8.6.13           noxft_hd72426e_102       conda-forge\ntorch                       2.9.0            pypi_0                   pypi\ntqdm                        4.67.1           pyhd8ed1ab_1             conda-forge\ntriton                      3.5.0            pypi_0                   pypi\ntyping-extensions           4.15.0           h396c80c_0               conda-forge\ntyping-inspection           0.4.2            pyhd8ed1ab_0             conda-forge\ntyping_extensions           4.15.0           pyhcf101f3_0             conda-forge\ntzdata                      2025b            h78e105d_0               conda-forge\nurllib3                     2.5.0            pypi_0                   pypi\nwheel                       0.45.1           pyhd8ed1ab_1             conda-forge\nxarray                      2025.1.2         pyhd8ed1ab_0             conda-forge\nxorg-libxau                 1.0.12           hb9d3cd8_0               conda-forge\nxorg-libxdmcp               1.1.5            hb9d3cd8_0               conda-forge\nzfp                         1.0.1            h909a3a2_3               conda-forge\nzipp                        3.23.0           pyhd8ed1ab_0             conda-forge\nzlib-ng                     2.2.5            hde8ca8f_0               conda-forge\nzstd                        1.5.7            hb8e6e7a_2               conda-forge\n",
                    "source_name": "https://hypha.aicell.io/bioimage-io/artifacts/patient-swan/files/rdf.yaml?version=v0",
                    "status": "failed",
                    "type": "model"
                },
                "error": "EOF when reading a line",
                "links": [],
                "score": 0.0,
                "status": "failed"
            }
        },
        "careamics": {
            "0.0.16": {
                "badge": null,
                "details": "'Model' resource not tagged with 'CAREamics' or 'careamics'.",
                "error": null,
                "links": [],
                "score": 0.0,
                "status": "not-applicable"
            },
            "0.0.17": {
                "badge": null,
                "details": "'Model' resource not tagged with 'CAREamics' or 'careamics'.",
                "error": null,
                "links": [],
                "score": 0.0,
                "status": "not-applicable"
            }
        }
    }
}