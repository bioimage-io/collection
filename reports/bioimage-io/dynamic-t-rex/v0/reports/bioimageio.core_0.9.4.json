{"status": "failed", "score": 0.0, "error": "model.v0_4.ScaleLinearKwargs with axes not implemented, please consider updating the model to v0_5.", "details": {"name": "bioimageio format validation", "source_name": "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/rdf.yaml?version=v0", "id": "dynamic-t-rex", "type": "model", "format_version": "0.4.10", "status": "failed", "metadata_completeness": 0.7272727272727273, "details": [{"name": "Successfully created `ModelDescr` instance.", "status": "passed", "loc": [], "errors": [], "warnings": [], "context": {"file_name": "rdf.yaml", "original_source_name": null, "perform_io_checks": true, "known_files": {"https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/cover.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/per_sample_scale_range.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/scale_linear.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/pix2pix_cho_selectedz_nuclei_ph_contrast_resized1024_18012024_QC_report.pdf?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/pix2pix_cho_selectedz_nuclei_ph_contrast_resized1024_18012024_training_report.pdf?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/README.md?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/sample_input_0.tif?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/sample_output_0.tif?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/test-input.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/test-output.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/latest_net_G_torchscript.pt?version=v0": null, "latest_net_G_torchscript.pt": "3a9c23e2330f0666822903123779f7fcf4e2ceb9a1126bcf5e45c060dd3d6e9e"}, "update_hashes": false, "root": "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files?version=v0"}, "recommended_env": null, "saved_conda_compare": null}, {"name": "bioimageio.spec format validation model 0.4.10", "status": "passed", "loc": [], "errors": [], "warnings": [], "context": {"file_name": "rdf.yaml", "original_source_name": null, "perform_io_checks": true, "known_files": {"https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/cover.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/per_sample_scale_range.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/scale_linear.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/pix2pix_cho_selectedz_nuclei_ph_contrast_resized1024_18012024_QC_report.pdf?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/pix2pix_cho_selectedz_nuclei_ph_contrast_resized1024_18012024_training_report.pdf?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/README.md?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/sample_input_0.tif?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/sample_output_0.tif?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/test-input.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/test-output.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files/latest_net_G_torchscript.pt?version=v0": null, "latest_net_G_torchscript.pt": "3a9c23e2330f0666822903123779f7fcf4e2ceb9a1126bcf5e45c060dd3d6e9e"}, "update_hashes": false, "root": "https://hypha.aicell.io/bioimage-io/artifacts/dynamic-t-rex/files?version=v0"}, "recommended_env": null, "saved_conda_compare": null}, {"name": "Reproduce test outputs from test inputs (torchscript)", "status": "failed", "loc": ["weights", "torchscript"], "errors": [{"loc": ["weights", "torchscript"], "msg": "model.v0_4.ScaleLinearKwargs with axes not implemented, please consider updating the model to v0_5.", "type": "bioimageio.core", "with_traceback": true, "traceback_md": "\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p \u2502\n\u2502                                                                                                  \u2502\n\u2502    774 \u2502   \u2502   test_input = get_test_input_sample(model)                                         \u2502\n\u2502    775 \u2502   \u2502   expected = get_test_output_sample(model)                                          \u2502\n\u2502    776 \u2502   \u2502                                                                                     \u2502\n\u2502 \u2771  777 \u2502   \u2502   with create_prediction_pipeline(                                                  \u2502\n\u2502    778 \u2502   \u2502   \u2502   bioimageio_model=model, devices=devices, weight_format=weight_format          \u2502\n\u2502    779 \u2502   \u2502   ) as prediction_pipeline:                                                         \u2502\n\u2502    780 \u2502   \u2502   \u2502   results = prediction_pipeline.predict_sample_without_blocking(test_input)     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p \u2502\n\u2502                                                                                                  \u2502\n\u2502   384 \u2502   \u2502   \u2502   else:                                                                          \u2502\n\u2502   385 \u2502   \u2502   \u2502   \u2502   yield Sample(members=dict(zip(input_ids, x)), stat=common_stat, id=i)      \u2502\n\u2502   386 \u2502                                                                                          \u2502\n\u2502 \u2771 387 \u2502   preprocessing, postprocessing = setup_pre_and_postprocessing(                          \u2502\n\u2502   388 \u2502   \u2502   bioimageio_model,                                                                  \u2502\n\u2502   389 \u2502   \u2502   dataset(),                                                                         \u2502\n\u2502   390 \u2502   \u2502   keep_updating_initial_dataset_stats=keep_updating_initial_dataset_statistics,      \u2502\n\u2502                                                                                                  \u2502\n\u2502 /usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p \u2502\n\u2502                                                                                                  \u2502\n\u2502    95 \u2502   \"\"\"                                                                                    \u2502\n\u2502    96 \u2502   Get pre- and postprocessing operators for a `model` description.                       \u2502\n\u2502    97 \u2502   Used in `bioimageio.core.create_prediction_pipeline\"\"\"                                 \u2502\n\u2502 \u2771  98 \u2502   prep, post, prep_meas, post_meas = _prepare_setup_pre_and_postprocessing(model)        \u2502\n\u2502    99 \u2502                                                                                          \u2502\n\u2502   100 \u2502   missing_dataset_stats = {                                                              \u2502\n\u2502   101 \u2502   \u2502   m                                                                                  \u2502\n\u2502                                                                                                  \u2502\n\u2502 /usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p \u2502\n\u2502                                                                                                  \u2502\n\u2502   216                                                                                            \u2502\n\u2502   217 def _prepare_setup_pre_and_postprocessing(model: AnyModelDescr) -> _SetupProcessing:       \u2502\n\u2502   218 \u2502   if isinstance(model, v0_4.ModelDescr):                                                 \u2502\n\u2502 \u2771 219 \u2502   \u2502   pre = _prepare_procs(model.inputs)                                                 \u2502\n\u2502   220 \u2502   \u2502   post = _prepare_procs(model.outputs)                                               \u2502\n\u2502   221 \u2502   elif isinstance(model, v0_5.ModelDescr):                                               \u2502\n\u2502   222 \u2502   \u2502   pre = _prepare_procs(model.inputs)                                                 \u2502\n\u2502                                                                                                  \u2502\n\u2502 /usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p \u2502\n\u2502                                                                                                  \u2502\n\u2502   188 \u2502   \u2502                                                                                      \u2502\n\u2502   189 \u2502   \u2502   if isinstance(t_descr, (v0_4.InputTensorDescr, v0_5.InputTensorDescr)):            \u2502\n\u2502   190 \u2502   \u2502   \u2502   for proc_d in t_descr.preprocessing:                                           \u2502\n\u2502 \u2771 191 \u2502   \u2502   \u2502   \u2502   procs.append(get_proc(proc_d, t_descr))                                    \u2502\n\u2502   192 \u2502   \u2502   elif isinstance(t_descr, (v0_4.OutputTensorDescr, v0_5.OutputTensorDescr)):        \u2502\n\u2502   193 \u2502   \u2502   \u2502   for proc_d in t_descr.postprocessing:                                          \u2502\n\u2502   194 \u2502   \u2502   \u2502   \u2502   procs.append(get_proc(proc_d, t_descr))                                    \u2502\n\u2502                                                                                                  \u2502\n\u2502 /usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p \u2502\n\u2502                                                                                                  \u2502\n\u2502   719 \u2502   elif isinstance(proc_descr, v0_5.FixedZeroMeanUnitVarianceDescr):                      \u2502\n\u2502   720 \u2502   \u2502   return FixedZeroMeanUnitVariance.from_proc_descr(proc_descr, member_id)            \u2502\n\u2502   721 \u2502   elif isinstance(proc_descr, (v0_4.ScaleLinearDescr, v0_5.ScaleLinearDescr)):           \u2502\n\u2502 \u2771 722 \u2502   \u2502   return ScaleLinear.from_proc_descr(proc_descr, member_id)                          \u2502\n\u2502   723 \u2502   elif isinstance(                                                                       \u2502\n\u2502   724 \u2502   \u2502   proc_descr, (v0_4.ScaleMeanVarianceDescr, v0_5.ScaleMeanVarianceDescr)             \u2502\n\u2502   725 \u2502   ):                                                                                     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p \u2502\n\u2502                                                                                                  \u2502\n\u2502   310 \u2502   \u2502   \u2502   axis = kwargs.axis                                                             \u2502\n\u2502   311 \u2502   \u2502   elif isinstance(kwargs, v0_4.ScaleLinearKwargs):                                   \u2502\n\u2502   312 \u2502   \u2502   \u2502   if kwargs.axes is not None:                                                    \u2502\n\u2502 \u2771 313 \u2502   \u2502   \u2502   \u2502   raise NotImplementedError(                                                 \u2502\n\u2502   314 \u2502   \u2502   \u2502   \u2502   \u2502   \"model.v0_4.ScaleLinearKwargs with axes not implemented, please consid \u2502\n\u2502   315 \u2502   \u2502   \u2502   \u2502   )                                                                          \u2502\n\u2502   316 \u2502   \u2502   \u2502   axis = None                                                                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nNotImplementedError: model.v0_4.ScaleLinearKwargs with axes not implemented, please consider updating the model to v0_5.\n", "traceback_html": "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<style>\n.r1 {color: #800000; text-decoration-color: #800000}\n.r2 {color: #800000; text-decoration-color: #800000; font-weight: bold}\n.r3 {color: #bf7f7f; text-decoration-color: #bf7f7f; font-weight: bold}\n.r4 {color: #7f7f7f; text-decoration-color: #7f7f7f}\n.r5 {color: #0000ff; text-decoration-color: #0000ff}\n.r6 {color: #00ffff; text-decoration-color: #00ffff}\n.r7 {font-weight: bold; text-decoration: underline}\n.r8 {color: #bfbfbf; text-decoration-color: #bfbfbf}\n.r9 {color: #808000; text-decoration-color: #808000}\n.r10 {color: #bfbf7f; text-decoration-color: #bfbf7f}\n.r11 {color: #808080; text-decoration-color: #808080}\n.r12 {color: #00ff00; text-decoration-color: #00ff00}\n.r13 {color: #ff00ff; text-decoration-color: #ff00ff}\n.r14 {color: #0000ff; text-decoration-color: #0000ff; font-weight: bold; text-decoration: underline}\n.r15 {color: #00ffff; text-decoration-color: #00ffff; font-weight: bold; text-decoration: underline}\n.r16 {color: #808000; text-decoration-color: #808000; font-weight: bold; text-decoration: underline}\n.r17 {color: #ff0000; text-decoration-color: #ff0000; font-weight: bold}\nbody {\n    color: #000000;\n    background-color: #ffffff;\n}\n</style>\n</head>\n<body>\n    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><code style=\"font-family:inherit\"><span class=\"r1\">\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p</span> <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 774 </span><span class=\"r4\">\u2502   \u2502   </span>test_input = get_test_input_sample(model)                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 775 </span><span class=\"r4\">\u2502   \u2502   </span>expected = get_test_output_sample(model)                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 776 </span><span class=\"r4\">\u2502   \u2502   </span>                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 777 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r5\">with</span> create_prediction_pipeline(                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 778 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>bioimageio_model=model, devices=devices, weight_format=weight_format          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 779 </span><span class=\"r4\">\u2502   \u2502   </span>) <span class=\"r5\">as</span> prediction_pipeline:                                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 780 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>results = prediction_pipeline.predict_sample_without_blocking(test_input)     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p</span> <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">384 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r5\">else</span>:                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">385 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r5\">yield</span> Sample(members=<span class=\"r6\">dict</span>(<span class=\"r6\">zip</span>(input_ids, x)), stat=common_stat, <span class=\"r6\">id</span>=i)      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">386 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>387 <span class=\"r4\">\u2502   </span>preprocessing, postprocessing = <span class=\"r7\">setup_pre_and_postprocessing(</span>                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">388 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">bioimageio_model,</span>                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">389 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">dataset(),</span>                                                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">390 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">keep_updating_initial_dataset_stats=keep_updating_initial_dataset_statistics,</span>      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p</span> <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 95 </span><span class=\"r8\">\u2502   </span><span class=\"r9\">&quot;&quot;&quot;</span>                                                                                    <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 96 </span><span class=\"r10\">\u2502   </span><span class=\"r9\">Get pre- and postprocessing operators for a `model` description.</span>                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 97 </span><span class=\"r10\">\u2502   </span><span class=\"r9\">Used in `bioimageio.core.create_prediction_pipeline&quot;&quot;&quot;</span>                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 98 <span class=\"r4\">\u2502   </span>prep, post, prep_meas, post_meas = <span class=\"r7\">_prepare_setup_pre_and_postprocessing(model)</span>        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 99 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">100 </span><span class=\"r4\">\u2502   </span>missing_dataset_stats = {                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">101 </span><span class=\"r4\">\u2502   \u2502   </span>m                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p</span> <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">216 </span>                                                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">217 </span><span class=\"r5\">def</span><span class=\"r11\"> </span><span class=\"r12\">_prepare_setup_pre_and_postprocessing</span>(model: AnyModelDescr) -&gt; _SetupProcessing:       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">218 </span><span class=\"r4\">\u2502   </span><span class=\"r5\">if</span> <span class=\"r6\">isinstance</span>(model, v0_4.ModelDescr):                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>219 <span class=\"r4\">\u2502   \u2502   </span>pre = <span class=\"r7\">_prepare_procs(model.inputs)</span>                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">220 </span><span class=\"r4\">\u2502   \u2502   </span>post = _prepare_procs(model.outputs)                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">221 </span><span class=\"r4\">\u2502   </span><span class=\"r5\">elif</span> <span class=\"r6\">isinstance</span>(model, v0_5.ModelDescr):                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">222 </span><span class=\"r4\">\u2502   \u2502   </span>pre = _prepare_procs(model.inputs)                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p</span> <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">188 </span><span class=\"r4\">\u2502   \u2502   </span>                                                                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">189 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r5\">if</span> <span class=\"r6\">isinstance</span>(t_descr, (v0_4.InputTensorDescr, v0_5.InputTensorDescr)):            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">190 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r5\">for</span> proc_d <span class=\"r13\">in</span> t_descr.preprocessing:                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>191 <span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>procs.append(<span class=\"r7\">get_proc(proc_d, t_descr)</span>)                                    <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">192 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r5\">elif</span> <span class=\"r6\">isinstance</span>(t_descr, (v0_4.OutputTensorDescr, v0_5.OutputTensorDescr)):        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">193 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r5\">for</span> proc_d <span class=\"r13\">in</span> t_descr.postprocessing:                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">194 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>procs.append(get_proc(proc_d, t_descr))                                    <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p</span> <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">719 </span><span class=\"r4\">\u2502   </span><span class=\"r5\">elif</span> <span class=\"r6\">isinstance</span>(proc_descr, v0_5.FixedZeroMeanUnitVarianceDescr):                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">720 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r5\">return</span> FixedZeroMeanUnitVariance.from_proc_descr(proc_descr, member_id)            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">721 </span><span class=\"r4\">\u2502   </span><span class=\"r5\">elif</span> <span class=\"r6\">isinstance</span>(proc_descr, (v0_4.ScaleLinearDescr, v0_5.ScaleLinearDescr)):           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>722 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r5\">return</span> <span class=\"r7\">ScaleLinear.from_proc_descr(proc_descr, member_id)</span>                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">723 </span><span class=\"r4\">\u2502   </span><span class=\"r5\">elif</span> <span class=\"r6\">isinstance</span>(                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">724 </span><span class=\"r4\">\u2502   \u2502   </span>proc_descr, (v0_4.ScaleMeanVarianceDescr, v0_5.ScaleMeanVarianceDescr)             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">725 </span><span class=\"r4\">\u2502   </span>):                                                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a/lib/p</span> <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">310 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>axis = kwargs.axis                                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">311 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r5\">elif</span> <span class=\"r6\">isinstance</span>(kwargs, v0_4.ScaleLinearKwargs):                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">312 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r5\">if</span> kwargs.axes <span class=\"r13\">is</span> <span class=\"r13\">not</span> <span class=\"r5\">None</span>:                                                    <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>313 <span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r14\">raise</span><span class=\"r7\"> </span><span class=\"r15\">NotImplementedError</span><span class=\"r7\">(</span>                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">314 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r16\">&quot;model.v0_4.ScaleLinearKwargs with axes not implemented, please consid</span> <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">315 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r7\">)</span>                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">316 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>axis = <span class=\"r5\">None</span>                                                                    <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f</span>\n<span class=\"r17\">NotImplementedError: </span>model.v0_4.ScaleLinearKwargs with axes not implemented, please consider updating the model to v0_5.\n</code></pre>\n</body>\n</html>\n"}], "warnings": [], "context": null, "recommended_env": {"name": null, "channels": ["pytorch", "conda-forge", "nodefaults"], "dependencies": ["conda-forge::bioimageio.core", "mkl ==2024.0.0", "numpy <2", "pip", "pytorch==2.0.1", "setuptools <70.0.0", "torchaudio==2.0.2", "torchvision==0.15.2"]}, "saved_conda_compare": "Success. All the packages in the specification file are present in the environment with matching version and build string.\n"}], "env": [["bioimageio.core", "0.9.4", "", ""], ["bioimageio.spec", "0.5.5.6", "", ""]], "saved_conda_list": "# packages in environment at /usr/share/miniconda/envs/a4a31363bf54492b4bc7a12b80fb6867d14cd5611cc67e50603b101e7ec0500a:\n#\n# Name                       Version          Build                    Channel\n_openmp_mutex                4.5              5_kmp_llvm               conda-forge\nannotated-types              0.7.0            pyhd8ed1ab_1             conda-forge\nanyio                        4.11.0           pyhcf101f3_0             conda-forge\naom                          3.5.0            h27087fc_0               conda-forge\nbioimageio.core              0.9.4            pyhd8ed1ab_0             conda-forge\nbioimageio.spec              0.5.5.6          pyhd8ed1ab_0             conda-forge\nblas                         2.121            mkl                      conda-forge\nblas-devel                   3.9.0            21_linux64_mkl           conda-forge\nblosc                        1.21.5           h0f2a231_0               conda-forge\nbrotli                       1.0.9            h166bdaf_9               conda-forge\nbrotli-bin                   1.0.9            h166bdaf_9               conda-forge\nbrotli-python                1.0.9            py311ha362b79_9          conda-forge\nbrunsli                      0.1              h9c3ff4c_0               conda-forge\nbzip2                        1.0.8            hda65f42_8               conda-forge\nc-ares                       1.34.5           hb9d3cd8_0               conda-forge\nc-blosc2                     2.12.0           hb4ffafa_0               conda-forge\nca-certificates              2025.10.5        hbd8a1cb_0               conda-forge\ncached-property              1.5.2            hd8ed1ab_1               conda-forge\ncached_property              1.5.2            pyha770c72_1             conda-forge\ncairo                        1.16.0           h35add3b_1015            conda-forge\ncertifi                      2025.10.5        pyhd8ed1ab_0             conda-forge\ncffi                         2.0.0            py311h5b438cf_0          conda-forge\ncfitsio                      4.2.0            hd9d235c_0               conda-forge\ncharls                       2.4.2            h59595ed_0               conda-forge\ncharset-normalizer           3.4.4            pyhd8ed1ab_0             conda-forge\ncolorama                     0.4.6            pyhd8ed1ab_1             conda-forge\ncpython                      3.11.14          py311hd8ed1ab_2          conda-forge\ndav1d                        1.2.1            hd590300_0               conda-forge\ndistro                       1.9.0            pyhd8ed1ab_1             conda-forge\ndnspython                    2.8.0            pyhcf101f3_0             conda-forge\nemail-validator              2.3.0            pyhd8ed1ab_0             conda-forge\nemail_validator              2.3.0            hd8ed1ab_0               conda-forge\nexceptiongroup               1.3.0            pyhd8ed1ab_0             conda-forge\nffmpeg                       6.0.0            gpl_hdbbbd96_103         conda-forge\nfilelock                     3.20.0           pyhd8ed1ab_0             conda-forge\nfont-ttf-dejavu-sans-mono    2.37             hab24e00_0               conda-forge\nfont-ttf-inconsolata         3.000            h77eed37_0               conda-forge\nfont-ttf-source-code-pro     2.038            h77eed37_0               conda-forge\nfont-ttf-ubuntu              0.83             h77eed37_3               conda-forge\nfontconfig                   2.15.0           h7e30c49_1               conda-forge\nfonts-conda-ecosystem        1                0                        conda-forge\nfonts-conda-forge            1                0                        conda-forge\nfreetype                     2.14.1           ha770c72_0               conda-forge\nfribidi                      1.0.16           hb03c661_0               conda-forge\ngenericache                  0.5.2            pyhd8ed1ab_0             conda-forge\ngiflib                       5.2.2            hd590300_0               conda-forge\ngmp                          6.3.0            hac33072_2               conda-forge\ngmpy2                        2.2.1            py311h92a432a_1          conda-forge\ngnutls                       3.7.9            hb077bed_0               conda-forge\ngraphite2                    1.3.14           hecca717_2               conda-forge\nh11                          0.16.0           pyhd8ed1ab_0             conda-forge\nh2                           4.3.0            pyhcf101f3_0             conda-forge\nh5py                         3.15.1           nompi_py311h0b2f468_100  conda-forge\nharfbuzz                     7.3.0            hdb3a94d_0               conda-forge\nhdf5                         1.14.6           nompi_h6e4c0c1_103       conda-forge\nhpack                        4.1.0            pyhd8ed1ab_0             conda-forge\nhttpcore                     1.0.9            pyh29332c3_0             conda-forge\nhttpx                        0.28.1           pyhd8ed1ab_0             conda-forge\nhyperframe                   6.1.0            pyhd8ed1ab_0             conda-forge\nicu                          72.1             hcb278e6_0               conda-forge\nidna                         3.11             pyhd8ed1ab_0             conda-forge\nimagecodecs                  2023.1.23        py311ha5a3c35_0          conda-forge\nimageio                      2.37.0           pyhfb79c49_0             conda-forge\nimportlib-metadata           8.7.0            pyhe01879c_1             conda-forge\njinja2                       3.1.6            pyhd8ed1ab_0             conda-forge\njpeg                         9e               h0b41bf4_3               conda-forge\njxrlib                       1.1              hd590300_3               conda-forge\nkeyutils                     1.6.3            hb9d3cd8_0               conda-forge\nkrb5                         1.21.3           h659f571_0               conda-forge\nlame                         3.100            h166bdaf_1003            conda-forge\nlcms2                        2.15             hfd0df8a_0               conda-forge\nld_impl_linux-64             2.44             ha97dd6f_2               conda-forge\nlerc                         4.0.0            h0aef613_1               conda-forge\nlibaec                       1.1.4            h3f801dc_0               conda-forge\nlibass                       0.17.1           hc9aadba_0               conda-forge\nlibavif                      0.11.1           h8182462_2               conda-forge\nlibblas                      3.9.0            21_linux64_mkl           conda-forge\nlibbrotlicommon              1.0.9            h166bdaf_9               conda-forge\nlibbrotlidec                 1.0.9            h166bdaf_9               conda-forge\nlibbrotlienc                 1.0.9            h166bdaf_9               conda-forge\nlibcblas                     3.9.0            21_linux64_mkl           conda-forge\nlibcurl                      8.16.0           h4e3cde8_0               conda-forge\nlibdeflate                   1.17             h0b41bf4_0               conda-forge\nlibdrm                       2.4.125          hb03c661_1               conda-forge\nlibedit                      3.1.20250104     pl5321h7949ede_0         conda-forge\nlibev                        4.33             hd590300_2               conda-forge\nlibexpat                     2.7.1            hecca717_0               conda-forge\nlibffi                       3.4.6            h2dba641_1               conda-forge\nlibfreetype                  2.14.1           ha770c72_0               conda-forge\nlibfreetype6                 2.14.1           h73754d4_0               conda-forge\nlibgcc                       15.2.0           h767d61c_7               conda-forge\nlibgcc-ng                    15.2.0           h69a702a_7               conda-forge\nlibgfortran                  15.2.0           h69a702a_7               conda-forge\nlibgfortran-ng               15.2.0           h69a702a_7               conda-forge\nlibgfortran5                 15.2.0           hcd61629_7               conda-forge\nlibglib                      2.86.0           h1fed272_0               conda-forge\nlibhwloc                     2.9.3            default_h554bfaf_1009    conda-forge\nlibiconv                     1.18             h3b78370_2               conda-forge\nlibidn2                      2.3.8            hfac485b_1               conda-forge\nliblapack                    3.9.0            21_linux64_mkl           conda-forge\nliblapacke                   3.9.0            21_linux64_mkl           conda-forge\nliblzma                      5.8.1            hb9d3cd8_2               conda-forge\nliblzma-devel                5.8.1            hb9d3cd8_2               conda-forge\nlibnghttp2                   1.67.0           had1ee68_0               conda-forge\nlibnsl                       2.0.1            hb9d3cd8_1               conda-forge\nlibopus                      1.5.2            hd0c01bc_0               conda-forge\nlibpciaccess                 0.18             hb9d3cd8_0               conda-forge\nlibpng                       1.6.50           h421ea60_1               conda-forge\nlibsqlite                    3.50.4           h0c1763c_0               conda-forge\nlibssh2                      1.11.1           hcf80075_0               conda-forge\nlibstdcxx                    15.2.0           h8f9b012_7               conda-forge\nlibstdcxx-ng                 15.2.0           h4852527_7               conda-forge\nlibtasn1                     4.20.0           hb03c661_1               conda-forge\nlibtiff                      4.5.0            h6adf6a1_2               conda-forge\nlibunistring                 0.9.10           h7f98852_0               conda-forge\nlibuuid                      2.41.2           he9a06e4_0               conda-forge\nlibva                        2.18.0           h0b41bf4_0               conda-forge\nlibvpx                       1.13.1           h59595ed_0               conda-forge\nlibwebp-base                 1.6.0            hd42ef1d_0               conda-forge\nlibxcb                       1.13             h7f98852_1004            conda-forge\nlibxcrypt                    4.4.36           hd590300_1               conda-forge\nlibxml2                      2.11.5           h0d562d8_0               conda-forge\nlibzlib                      1.3.1            hb9d3cd8_2               conda-forge\nlibzopfli                    1.0.3            h9c3ff4c_0               conda-forge\nllvm-openmp                  21.1.4           h4922eb0_0               conda-forge\nloguru                       0.7.3            pyh707e725_0             conda-forge\nlz4-c                        1.9.4            hcb278e6_0               conda-forge\nmarkdown                     3.9              pyhd8ed1ab_0             conda-forge\nmarkdown-it-py               4.0.0            pyhd8ed1ab_0             conda-forge\nmarkupsafe                   3.0.3            py311h3778330_0          conda-forge\nmdurl                        0.1.2            pyhd8ed1ab_1             conda-forge\nmkl                          2024.0.0         ha957f24_49657           conda-forge\nmkl-devel                    2024.0.0         ha770c72_49657           conda-forge\nmkl-include                  2024.0.0         ha957f24_49657           conda-forge\nmpc                          1.3.1            h24ddda3_1               conda-forge\nmpfr                         4.2.1            h90cbb55_3               conda-forge\nmpmath                       1.3.0            pyhd8ed1ab_1             conda-forge\nncurses                      6.5              h2d0b736_3               conda-forge\nnettle                       3.9.1            h7ab15ed_0               conda-forge\nnetworkx                     3.5              pyhe01879c_0             conda-forge\nnumpy                        1.26.4           py311h64a7726_0          conda-forge\nopenh264                     2.3.1            hcb278e6_2               conda-forge\nopenjpeg                     2.5.0            hfec8fc6_2               conda-forge\nopenssl                      3.5.4            h26f9b46_0               conda-forge\np11-kit                      0.24.1           hc5aa10d_0               conda-forge\npackaging                    25.0             pyh29332c3_1             conda-forge\npandas                       2.3.3            py311hed34c8f_1          conda-forge\npcre2                        10.46            h1321c63_0               conda-forge\npillow                       9.4.0            py311h50def17_1          conda-forge\npip                          25.2             pyh8b19718_0             conda-forge\npixman                       0.46.4           h54a6638_1               conda-forge\nplatformdirs                 4.5.0            pyhcf101f3_0             conda-forge\npthread-stubs                0.4              hb9d3cd8_1002            conda-forge\npycparser                    2.22             pyh29332c3_1             conda-forge\npydantic                     2.11.10          pyh3cfb1c2_0             conda-forge\npydantic-core                2.33.2           py311hdae7d1d_0          conda-forge\npydantic-settings            2.11.0           pyh3cfb1c2_0             conda-forge\npygments                     2.19.2           pyhd8ed1ab_0             conda-forge\npysocks                      1.7.1            pyha55dd90_7             conda-forge\npython                       3.11.14          hfe2f287_1_cpython       conda-forge\npython-dateutil              2.9.0.post0      pyhe01879c_2             conda-forge\npython-dotenv                1.1.1            pyhe01879c_0             conda-forge\npython-tzdata                2025.2           pyhd8ed1ab_0             conda-forge\npython_abi                   3.11             8_cp311                  conda-forge\npytorch                      2.0.1            py3.11_cpu_0             pytorch\npytorch-mutex                1.0              cpu                      pytorch\npytz                         2025.2           pyhd8ed1ab_0             conda-forge\nreadline                     8.2              h8c095d6_2               conda-forge\nrequests                     2.32.5           pyhd8ed1ab_0             conda-forge\nrich                         14.2.0           pyhcf101f3_0             conda-forge\nruyaml                       0.91.0           pyhd8ed1ab_1             conda-forge\nscipy                        1.16.2           py311h1e13796_0          conda-forge\nsetuptools                   69.5.1           pyhd8ed1ab_0             conda-forge\nsix                          1.17.0           pyhe01879c_1             conda-forge\nsnappy                       1.1.10           hdb0a2a9_1               conda-forge\nsniffio                      1.3.1            pyhd8ed1ab_1             conda-forge\nsvt-av1                      1.6.0            h59595ed_0               conda-forge\nsympy                        1.14.0           pyh2585a3b_105           conda-forge\ntbb                          2021.11.0        h00ab1b0_1               conda-forge\ntifffile                     2023.8.12        pyhd8ed1ab_0             conda-forge\ntk                           8.6.13           noxft_hd72426e_102       conda-forge\ntorchaudio                   2.0.2            py311_cpu                pytorch\ntorchvision                  0.15.2           py311_cpu                pytorch\ntqdm                         4.67.1           pyhd8ed1ab_1             conda-forge\ntyping-extensions            4.15.0           h396c80c_0               conda-forge\ntyping-inspection            0.4.2            pyhd8ed1ab_0             conda-forge\ntyping_extensions            4.15.0           pyhcf101f3_0             conda-forge\ntzdata                       2025b            h78e105d_0               conda-forge\nurllib3                      2.5.0            pyhd8ed1ab_0             conda-forge\nwheel                        0.45.1           pyhd8ed1ab_1             conda-forge\nx264                         1!164.3095       h166bdaf_2               conda-forge\nx265                         3.5              h924138e_3               conda-forge\nxarray                       2025.1.2         pyhd8ed1ab_0             conda-forge\nxorg-fixesproto              5.0              hb9d3cd8_1003            conda-forge\nxorg-kbproto                 1.0.7            hb9d3cd8_1003            conda-forge\nxorg-libice                  1.1.2            hb9d3cd8_0               conda-forge\nxorg-libsm                   1.2.6            he73a12e_0               conda-forge\nxorg-libx11                  1.8.4            h0b41bf4_0               conda-forge\nxorg-libxau                  1.0.12           hb9d3cd8_0               conda-forge\nxorg-libxdmcp                1.1.5            hb9d3cd8_0               conda-forge\nxorg-libxext                 1.3.4            h0b41bf4_2               conda-forge\nxorg-libxfixes               5.0.3            h7f98852_1004            conda-forge\nxorg-libxrender              0.9.10           h7f98852_1003            conda-forge\nxorg-renderproto             0.11.1           hb9d3cd8_1003            conda-forge\nxorg-xextproto               7.3.0            hb9d3cd8_1004            conda-forge\nxorg-xproto                  7.0.31           hb9d3cd8_1008            conda-forge\nxz                           5.8.1            hbcc6ac9_2               conda-forge\nxz-gpl-tools                 5.8.1            hbcc6ac9_2               conda-forge\nxz-tools                     5.8.1            hb9d3cd8_2               conda-forge\nzfp                          1.0.1            h909a3a2_3               conda-forge\nzipp                         3.23.0           pyhd8ed1ab_0             conda-forge\nzlib                         1.3.1            hb9d3cd8_2               conda-forge\nzlib-ng                      2.0.7            h0b41bf4_0               conda-forge\nzstandard                    0.25.0           py311haee01d2_0          conda-forge\nzstd                         1.5.7            hb8e6e7a_2               conda-forge\n"}, "badge": null, "links": []}