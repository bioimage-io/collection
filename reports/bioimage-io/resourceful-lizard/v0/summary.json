{
    "rdf_content": {
        "authors": [
            {
                "affiliation": "Human Technopole",
                "name": "Mehdi Seifi"
            }
        ],
        "cite": [
            {
                "doi": "10.48550/arXiv.2306.14289",
                "text": "Zhang, Chaoning, Dongshen Han, Yu Qiao, Jung Uk Kim, Sung-Ho Bae, Seungkyu Lee, and Choong Seon Hong. \"Faster segment anything: Towards lightweight sam for mobile applications.\" arXiv preprint arXiv:2306.14289 (2023).",
                "url": null
            }
        ],
        "config": {
            "bioimageio": {
                "thumbnails": {
                    "cover.png": "cover.thumbnail.png"
                }
            }
        },
        "covers": [
            "cover.png"
        ],
        "description": "Pre-trained mobile-sam encoder for feature extraction",
        "documentation": "doc.md",
        "format_version": "0.5.0",
        "id": "resourceful-lizard",
        "id_emoji": "🦎",
        "inputs": [
            {
                "axes": [
                    {
                        "id": "y",
                        "size": 668,
                        "type": "space"
                    },
                    {
                        "id": "x",
                        "size": 768,
                        "type": "space"
                    }
                ],
                "data": {
                    "type": "uint8"
                },
                "id": "input",
                "test_tensor": {
                    "sha256": "e6faad2d74dc69026872342374a6a4e88d79f4da2f116d8918776a1f04aed49e",
                    "source": "test_input.npy"
                }
            }
        ],
        "license": "Apache-2.0",
        "links": [
            "https://github.com/ChaoningZhang/MobileSAM"
        ],
        "maintainers": [],
        "name": "Feature extraction - MobileSAM Encoder",
        "outputs": [
            {
                "axes": [
                    {
                        "id": "y",
                        "size": 668,
                        "type": "space"
                    },
                    {
                        "id": "x",
                        "size": 768,
                        "type": "space"
                    },
                    {
                        "channel_names": [
                            "ch_0",
                            "ch_1",
                            "ch_2",
                            "ch_3",
                            "ch_4",
                            "ch_5",
                            "ch_6",
                            "ch_7",
                            "ch_8",
                            "ch_9",
                            "ch_10",
                            "ch_11",
                            "ch_12",
                            "ch_13",
                            "ch_14",
                            "ch_15",
                            "ch_16",
                            "ch_17",
                            "ch_18",
                            "ch_19",
                            "ch_20",
                            "ch_21",
                            "ch_22",
                            "ch_23",
                            "ch_24",
                            "ch_25",
                            "ch_26",
                            "ch_27",
                            "ch_28",
                            "ch_29",
                            "ch_30",
                            "ch_31",
                            "ch_32",
                            "ch_33",
                            "ch_34",
                            "ch_35",
                            "ch_36",
                            "ch_37",
                            "ch_38",
                            "ch_39",
                            "ch_40",
                            "ch_41",
                            "ch_42",
                            "ch_43",
                            "ch_44",
                            "ch_45",
                            "ch_46",
                            "ch_47",
                            "ch_48",
                            "ch_49",
                            "ch_50",
                            "ch_51",
                            "ch_52",
                            "ch_53",
                            "ch_54",
                            "ch_55",
                            "ch_56",
                            "ch_57",
                            "ch_58",
                            "ch_59",
                            "ch_60",
                            "ch_61",
                            "ch_62",
                            "ch_63",
                            "ch_64",
                            "ch_65",
                            "ch_66",
                            "ch_67",
                            "ch_68",
                            "ch_69",
                            "ch_70",
                            "ch_71",
                            "ch_72",
                            "ch_73",
                            "ch_74",
                            "ch_75",
                            "ch_76",
                            "ch_77",
                            "ch_78",
                            "ch_79",
                            "ch_80",
                            "ch_81",
                            "ch_82",
                            "ch_83",
                            "ch_84",
                            "ch_85",
                            "ch_86",
                            "ch_87",
                            "ch_88",
                            "ch_89",
                            "ch_90",
                            "ch_91",
                            "ch_92",
                            "ch_93",
                            "ch_94",
                            "ch_95",
                            "ch_96",
                            "ch_97",
                            "ch_98",
                            "ch_99",
                            "ch_100",
                            "ch_101",
                            "ch_102",
                            "ch_103",
                            "ch_104",
                            "ch_105",
                            "ch_106",
                            "ch_107",
                            "ch_108",
                            "ch_109",
                            "ch_110",
                            "ch_111",
                            "ch_112",
                            "ch_113",
                            "ch_114",
                            "ch_115",
                            "ch_116",
                            "ch_117",
                            "ch_118",
                            "ch_119",
                            "ch_120",
                            "ch_121",
                            "ch_122",
                            "ch_123",
                            "ch_124",
                            "ch_125",
                            "ch_126",
                            "ch_127",
                            "ch_128",
                            "ch_129",
                            "ch_130",
                            "ch_131",
                            "ch_132",
                            "ch_133",
                            "ch_134",
                            "ch_135",
                            "ch_136",
                            "ch_137",
                            "ch_138",
                            "ch_139",
                            "ch_140",
                            "ch_141",
                            "ch_142",
                            "ch_143",
                            "ch_144",
                            "ch_145",
                            "ch_146",
                            "ch_147",
                            "ch_148",
                            "ch_149",
                            "ch_150",
                            "ch_151",
                            "ch_152",
                            "ch_153",
                            "ch_154",
                            "ch_155",
                            "ch_156",
                            "ch_157",
                            "ch_158",
                            "ch_159",
                            "ch_160",
                            "ch_161",
                            "ch_162",
                            "ch_163",
                            "ch_164",
                            "ch_165",
                            "ch_166",
                            "ch_167",
                            "ch_168",
                            "ch_169",
                            "ch_170",
                            "ch_171",
                            "ch_172",
                            "ch_173",
                            "ch_174",
                            "ch_175",
                            "ch_176",
                            "ch_177",
                            "ch_178",
                            "ch_179",
                            "ch_180",
                            "ch_181",
                            "ch_182",
                            "ch_183",
                            "ch_184",
                            "ch_185",
                            "ch_186",
                            "ch_187",
                            "ch_188",
                            "ch_189",
                            "ch_190",
                            "ch_191",
                            "ch_192",
                            "ch_193",
                            "ch_194",
                            "ch_195",
                            "ch_196",
                            "ch_197",
                            "ch_198",
                            "ch_199",
                            "ch_200",
                            "ch_201",
                            "ch_202",
                            "ch_203",
                            "ch_204",
                            "ch_205",
                            "ch_206",
                            "ch_207",
                            "ch_208",
                            "ch_209",
                            "ch_210",
                            "ch_211",
                            "ch_212",
                            "ch_213",
                            "ch_214",
                            "ch_215",
                            "ch_216",
                            "ch_217",
                            "ch_218",
                            "ch_219",
                            "ch_220",
                            "ch_221",
                            "ch_222",
                            "ch_223",
                            "ch_224",
                            "ch_225",
                            "ch_226",
                            "ch_227",
                            "ch_228",
                            "ch_229",
                            "ch_230",
                            "ch_231",
                            "ch_232",
                            "ch_233",
                            "ch_234",
                            "ch_235",
                            "ch_236",
                            "ch_237",
                            "ch_238",
                            "ch_239",
                            "ch_240",
                            "ch_241",
                            "ch_242",
                            "ch_243",
                            "ch_244",
                            "ch_245",
                            "ch_246",
                            "ch_247",
                            "ch_248",
                            "ch_249",
                            "ch_250",
                            "ch_251",
                            "ch_252",
                            "ch_253",
                            "ch_254",
                            "ch_255",
                            "ch_256",
                            "ch_257",
                            "ch_258",
                            "ch_259",
                            "ch_260",
                            "ch_261",
                            "ch_262",
                            "ch_263",
                            "ch_264",
                            "ch_265",
                            "ch_266",
                            "ch_267",
                            "ch_268",
                            "ch_269",
                            "ch_270",
                            "ch_271",
                            "ch_272",
                            "ch_273",
                            "ch_274",
                            "ch_275",
                            "ch_276",
                            "ch_277",
                            "ch_278",
                            "ch_279",
                            "ch_280",
                            "ch_281",
                            "ch_282",
                            "ch_283",
                            "ch_284",
                            "ch_285",
                            "ch_286",
                            "ch_287",
                            "ch_288",
                            "ch_289",
                            "ch_290",
                            "ch_291",
                            "ch_292",
                            "ch_293",
                            "ch_294",
                            "ch_295",
                            "ch_296",
                            "ch_297",
                            "ch_298",
                            "ch_299",
                            "ch_300",
                            "ch_301",
                            "ch_302",
                            "ch_303",
                            "ch_304",
                            "ch_305",
                            "ch_306",
                            "ch_307",
                            "ch_308",
                            "ch_309",
                            "ch_310",
                            "ch_311",
                            "ch_312",
                            "ch_313",
                            "ch_314",
                            "ch_315",
                            "ch_316",
                            "ch_317",
                            "ch_318",
                            "ch_319"
                        ],
                        "type": "channel"
                    }
                ],
                "id": "output",
                "test_tensor": {
                    "sha256": "d7a8c237d609d74738830a4445306eea770f8f7fb5b35c32b2a71398965900f6",
                    "source": "test_output.npy"
                }
            }
        ],
        "tags": [
            "SAM",
            "mobile-sam",
            "feature extraction"
        ],
        "type": "model",
        "uploader": {
            "email": "mehdi.seifi@fht.org",
            "name": "Mehdi"
        },
        "version": "0.1.1",
        "weights": {
            "pytorch_state_dict": {
                "architecture": {
                    "callable": "MobileSAMEncoder",
                    "kwargs": {},
                    "sha256": "d14120ef30dee0f90e937309d31474d04a312ab5172a74b3d15a7c9f30465bcc",
                    "source": "mobilesam_encoder.py"
                },
                "dependencies": {
                    "sha256": "fc7718f12fc9c8d4025a43fec739a8b23a15269a525804930587b00f511846a5",
                    "source": "env.yml"
                },
                "pytorch_version": "2.3.1",
                "sha256": "1e0a33e8d0bf617513d3bf822f8dfbe9c582fee6a1aa14f21b3509a69b1ded97",
                "source": "mobile_sam_encoder.pth"
            }
        }
    },
    "rdf_yaml_sha256": "e828b585a4e627ccc6b2e53762ff544e082e349ee19a13b9eb33e4d657348cdf",
    "scores": {
        "core_compatibility": 0.0,
        "metadata_completeness": 0.0,
        "metadata_format": 0.0,
        "overall_compatibility": 0.0,
        "overall_partner_tool_compatibility": 0.0,
        "tool_compatibility": {},
        "tool_compatibility_version_specific": {}
    },
    "status": "failed",
    "tests": {
        "biapy_3.6.5": {
            "badge": null,
            "details": "[all] pytorch_state_dict not found in model RDF or inputs != 1\n",
            "error": "[all] pytorch_state_dict not found in model RDF or inputs != 1\n",
            "links": [
                "biapy/biapy"
            ],
            "score": 0.0,
            "status": "failed"
        },
        "bioimageio.core_0.9.3": {
            "badge": null,
            "details": {
                "details": [
                    {
                        "context": null,
                        "errors": [
                            {
                                "loc": [],
                                "msg": "test command 'conda run -n a5da52dafabdde7cdd7c07143428e76b22eb95ad536a51113bc0628f90346b5e bioimageio test https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/rdf.yaml?version=v0 --summary-path=/tmp/tmpxkeaxax_/pytorch_state_dict/summary.json --determinism=full --stop-early' did not produce a summary file at /tmp/tmpxkeaxax_/pytorch_state_dict/summary.json",
                                "traceback_html": "",
                                "traceback_md": "",
                                "type": "bioimageio cli",
                                "with_traceback": false
                            }
                        ],
                        "loc": [],
                        "name": "run 'bioimageio test'",
                        "recommended_env": null,
                        "saved_conda_compare": null,
                        "status": "failed",
                        "warnings": []
                    }
                ],
                "env": [],
                "format_version": "unknown",
                "id": null,
                "metadata_completeness": 0.0,
                "name": "calling bioimageio test command",
                "saved_conda_list": "# packages in environment at /usr/share/miniconda/envs/core:\n#\n# Name                     Version          Build                    Channel\n_libgcc_mutex              0.1              conda_forge              conda-forge\n_openmp_mutex              4.5              2_gnu                    conda-forge\nannotated-types            0.7.0            pyhd8ed1ab_1             conda-forge\nanyio                      4.11.0           pyhcf101f3_0             conda-forge\naom                        3.9.1            hac33072_0               conda-forge\nbackoffice                 0.1.0            pypi_0                   pypi\nbioimageio.core            0.9.3            pyhd8ed1ab_0             conda-forge\nbioimageio.spec            0.5.5.5          pyhd8ed1ab_0             conda-forge\nblosc                      1.21.6           he440d0b_1               conda-forge\nbrunsli                    0.1              he3183e4_1               conda-forge\nbzip2                      1.0.8            hda65f42_8               conda-forge\nc-ares                     1.34.5           hb9d3cd8_0               conda-forge\nc-blosc2                   2.21.3           h4cfbee9_0               conda-forge\nca-certificates            2025.10.5        hbd8a1cb_0               conda-forge\ncached-property            1.5.2            hd8ed1ab_1               conda-forge\ncached_property            1.5.2            pyha770c72_1             conda-forge\ncertifi                    2025.10.5        pyhd8ed1ab_0             conda-forge\ncffi                       2.0.0            pypi_0                   pypi\ncharls                     2.4.2            h59595ed_0               conda-forge\ncharset-normalizer         3.4.3            pypi_0                   pypi\ncolorama                   0.4.6            pyhd8ed1ab_1             conda-forge\ncryptography               46.0.2           pypi_0                   pypi\ndav1d                      1.2.1            hd590300_0               conda-forge\ndistro                     1.9.0            pyhd8ed1ab_1             conda-forge\ndnspython                  2.8.0            pyhcf101f3_0             conda-forge\nemail-validator            2.3.0            pyhd8ed1ab_0             conda-forge\nemail_validator            2.3.0            hd8ed1ab_0               conda-forge\nexceptiongroup             1.3.0            pyhd8ed1ab_0             conda-forge\nfilelock                   3.20.0           pyhd8ed1ab_0             conda-forge\ngenericache                0.5.2            pyhd8ed1ab_0             conda-forge\ngiflib                     5.2.2            hd590300_0               conda-forge\nh11                        0.16.0           pyhd8ed1ab_0             conda-forge\nh2                         4.3.0            pyhcf101f3_0             conda-forge\nh5py                       3.14.0           nompi_py313h253c126_101  conda-forge\nhdf5                       1.14.6           nompi_h6e4c0c1_103       conda-forge\nhpack                      4.1.0            pyhd8ed1ab_0             conda-forge\nhttpcore                   1.0.9            pyh29332c3_0             conda-forge\nhttpx                      0.28.1           pyhd8ed1ab_0             conda-forge\nhyperframe                 6.1.0            pyhd8ed1ab_0             conda-forge\nidna                       3.10             pyhd8ed1ab_1             conda-forge\nimagecodecs                2025.8.2         py313h718aa22_4          conda-forge\nimageio                    2.37.0           pyhfb79c49_0             conda-forge\nimportlib-metadata         8.7.0            pyhe01879c_1             conda-forge\njxrlib                     1.1              hd590300_3               conda-forge\nkeyutils                   1.6.3            hb9d3cd8_0               conda-forge\nkrb5                       1.21.3           h659f571_0               conda-forge\nlcms2                      2.17             h717163a_0               conda-forge\nld_impl_linux-64           2.44             ha97dd6f_2               conda-forge\nlerc                       4.0.0            h0aef613_1               conda-forge\nlibaec                     1.1.4            h3f801dc_0               conda-forge\nlibavif16                  1.3.0            h6395336_2               conda-forge\nlibblas                    3.9.0            36_h4a7cf45_openblas     conda-forge\nlibbrotlicommon            1.1.0            hb03c661_4               conda-forge\nlibbrotlidec               1.1.0            hb03c661_4               conda-forge\nlibbrotlienc               1.1.0            hb03c661_4               conda-forge\nlibcblas                   3.9.0            36_h0358290_openblas     conda-forge\nlibcurl                    8.14.1           h332b0f4_0               conda-forge\nlibdeflate                 1.24             h86f0d12_0               conda-forge\nlibedit                    3.1.20250104     pl5321h7949ede_0         conda-forge\nlibev                      4.33             hd590300_2               conda-forge\nlibexpat                   2.7.1            hecca717_0               conda-forge\nlibffi                     3.4.6            h2dba641_1               conda-forge\nlibfreetype                2.14.1           ha770c72_0               conda-forge\nlibfreetype6               2.14.1           h73754d4_0               conda-forge\nlibgcc                     15.2.0           h767d61c_7               conda-forge\nlibgcc-ng                  15.2.0           h69a702a_7               conda-forge\nlibgfortran                15.2.0           h69a702a_7               conda-forge\nlibgfortran5               15.2.0           hcd61629_7               conda-forge\nlibgomp                    15.2.0           h767d61c_7               conda-forge\nlibhwy                     1.3.0            h4c17acf_1               conda-forge\nlibjpeg-turbo              3.1.0            hb9d3cd8_0               conda-forge\nlibjxl                     0.11.1           h6cb5226_4               conda-forge\nliblapack                  3.9.0            36_h47877c9_openblas     conda-forge\nliblzma                    5.8.1            hb9d3cd8_2               conda-forge\nlibmpdec                   4.0.0            hb9d3cd8_0               conda-forge\nlibnghttp2                 1.67.0           had1ee68_0               conda-forge\nlibopenblas                0.3.30           pthreads_h94d23a6_2      conda-forge\nlibpng                     1.6.50           h421ea60_1               conda-forge\nlibsqlite                  3.50.4           h0c1763c_0               conda-forge\nlibssh2                    1.11.1           hcf80075_0               conda-forge\nlibstdcxx                  15.2.0           h8f9b012_7               conda-forge\nlibstdcxx-ng               15.2.0           h4852527_7               conda-forge\nlibtiff                    4.7.1            h8261f1e_0               conda-forge\nlibuuid                    2.41.2           he9a06e4_0               conda-forge\nlibwebp-base               1.6.0            hd42ef1d_0               conda-forge\nlibxcb                     1.17.0           h8a09558_0               conda-forge\nlibzlib                    1.3.1            hb9d3cd8_2               conda-forge\nlibzopfli                  1.0.3            h9c3ff4c_0               conda-forge\nloguru                     0.7.3            pyh707e725_0             conda-forge\nlz4-c                      1.10.0           h5888daf_1               conda-forge\nmarkdown                   3.9              pyhd8ed1ab_0             conda-forge\nmarkdown-it-py             4.0.0            pyhd8ed1ab_0             conda-forge\nmdurl                      0.1.2            pyhd8ed1ab_1             conda-forge\nncurses                    6.5              h2d0b736_3               conda-forge\nnumpy                      2.3.3            py313hf6604e3_0          conda-forge\nopenjpeg                   2.5.4            h55fea9a_0               conda-forge\nopenssl                    3.5.4            h26f9b46_0               conda-forge\npackaging                  25.0             pyh29332c3_1             conda-forge\npandas                     2.3.3            py313h08cd8bf_1          conda-forge\npillow                     11.3.0           py313ha492abd_3          conda-forge\npip                        25.2             pyh145f28c_0             conda-forge\nplatformdirs               4.5.0            pyhcf101f3_0             conda-forge\npthread-stubs              0.4              hb9d3cd8_1002            conda-forge\npycparser                  2.23             pypi_0                   pypi\npydantic                   2.11.10          pyh3cfb1c2_0             conda-forge\npydantic-core              2.33.2           py313h4b2b08d_0          conda-forge\npydantic-settings          2.11.0           pyh3cfb1c2_0             conda-forge\npygithub                   2.8.1            pypi_0                   pypi\npygments                   2.19.2           pyhd8ed1ab_0             conda-forge\npyjwt                      2.10.1           pypi_0                   pypi\npynacl                     1.6.0            pypi_0                   pypi\npython                     3.13.7           h2b335a9_100_cp313       conda-forge\npython-dateutil            2.9.0.post0      pyhe01879c_2             conda-forge\npython-dotenv              1.1.1            pyhe01879c_0             conda-forge\npython-tzdata              2025.2           pyhd8ed1ab_0             conda-forge\npython_abi                 3.13             8_cp313                  conda-forge\npytz                       2025.2           pyhd8ed1ab_0             conda-forge\nrav1e                      0.7.1            h8fae777_3               conda-forge\nreadline                   8.2              h8c095d6_2               conda-forge\nrequests                   2.32.5           pypi_0                   pypi\nrich                       14.1.0           pyhe01879c_0             conda-forge\nruyaml                     0.91.0           pyhd8ed1ab_1             conda-forge\nscipy                      1.16.2           py313h11c21cd_0          conda-forge\nsetuptools                 80.9.0           pyhff2d567_0             conda-forge\nsix                        1.17.0           pyhe01879c_1             conda-forge\nsnappy                     1.2.2            h03e3b7b_0               conda-forge\nsniffio                    1.3.1            pyhd8ed1ab_1             conda-forge\nsvt-av1                    3.1.2            hecca717_0               conda-forge\ntifffile                   2025.10.4        pyhd8ed1ab_0             conda-forge\ntk                         8.6.13           noxft_hd72426e_102       conda-forge\ntqdm                       4.67.1           pyhd8ed1ab_1             conda-forge\ntyping-extensions          4.15.0           h396c80c_0               conda-forge\ntyping-inspection          0.4.2            pyhd8ed1ab_0             conda-forge\ntyping_extensions          4.15.0           pyhcf101f3_0             conda-forge\ntzdata                     2025b            h78e105d_0               conda-forge\nurllib3                    2.5.0            pypi_0                   pypi\nxarray                     2025.1.2         pyhd8ed1ab_0             conda-forge\nxorg-libxau                1.0.12           hb9d3cd8_0               conda-forge\nxorg-libxdmcp              1.1.5            hb9d3cd8_0               conda-forge\nzfp                        1.0.1            h909a3a2_3               conda-forge\nzipp                       3.23.0           pyhd8ed1ab_0             conda-forge\nzlib-ng                    2.2.5            hde8ca8f_0               conda-forge\nzstd                       1.5.7            hb8e6e7a_2               conda-forge\n",
                "source_name": "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/rdf.yaml?version=v0",
                "status": "failed",
                "type": "unknown"
            },
            "error": "test command 'conda run -n a5da52dafabdde7cdd7c07143428e76b22eb95ad536a51113bc0628f90346b5e bioimageio test https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/rdf.yaml?version=v0 --summary-path=/tmp/tmpxkeaxax_/pytorch_state_dict/summary.json --determinism=full --stop-early' did not produce a summary file at /tmp/tmpxkeaxax_/pytorch_state_dict/summary.json",
            "links": [],
            "score": 0.0,
            "status": "failed"
        },
        "bioimageio.core_0.9.4": {
            "badge": null,
            "details": {
                "details": [
                    {
                        "context": {
                            "file_name": "rdf.yaml",
                            "known_files": {
                                "env.yml": "fc7718f12fc9c8d4025a43fec739a8b23a15269a525804930587b00f511846a5",
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/cover.png?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/doc.md?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/env.yml?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/mobile_sam_encoder.pth?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/mobilesam_encoder.py?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/test_input.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/test_output.npy?version=v0": null,
                                "mobile_sam_encoder.pth": "1e0a33e8d0bf617513d3bf822f8dfbe9c582fee6a1aa14f21b3509a69b1ded97",
                                "mobilesam_encoder.py": "d14120ef30dee0f90e937309d31474d04a312ab5172a74b3d15a7c9f30465bcc",
                                "test_input.npy": "e6faad2d74dc69026872342374a6a4e88d79f4da2f116d8918776a1f04aed49e",
                                "test_output.npy": "d7a8c237d609d74738830a4445306eea770f8f7fb5b35c32b2a71398965900f6"
                            },
                            "original_source_name": null,
                            "perform_io_checks": true,
                            "root": "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files?version=v0",
                            "update_hashes": false
                        },
                        "errors": [],
                        "loc": [],
                        "name": "Successfully created `ModelDescr` instance.",
                        "recommended_env": null,
                        "saved_conda_compare": null,
                        "status": "passed",
                        "warnings": []
                    },
                    {
                        "context": {
                            "file_name": "rdf.yaml",
                            "known_files": {
                                "env.yml": "fc7718f12fc9c8d4025a43fec739a8b23a15269a525804930587b00f511846a5",
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/cover.png?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/doc.md?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/env.yml?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/mobile_sam_encoder.pth?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/mobilesam_encoder.py?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/test_input.npy?version=v0": null,
                                "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/test_output.npy?version=v0": null,
                                "mobile_sam_encoder.pth": "1e0a33e8d0bf617513d3bf822f8dfbe9c582fee6a1aa14f21b3509a69b1ded97",
                                "mobilesam_encoder.py": "d14120ef30dee0f90e937309d31474d04a312ab5172a74b3d15a7c9f30465bcc",
                                "test_input.npy": "e6faad2d74dc69026872342374a6a4e88d79f4da2f116d8918776a1f04aed49e",
                                "test_output.npy": "d7a8c237d609d74738830a4445306eea770f8f7fb5b35c32b2a71398965900f6"
                            },
                            "original_source_name": null,
                            "perform_io_checks": true,
                            "root": "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files?version=v0",
                            "update_hashes": false
                        },
                        "errors": [],
                        "loc": [],
                        "name": "bioimageio.spec format validation model 0.5.5",
                        "recommended_env": null,
                        "saved_conda_compare": null,
                        "status": "passed",
                        "warnings": [
                            {
                                "loc": [
                                    "documentation"
                                ],
                                "msg": "No '# Validation' (sub)section found in doc.md.",
                                "severity": 30,
                                "type": "warning"
                            },
                            {
                                "loc": [
                                    "inputs",
                                    0,
                                    "sample_tensor"
                                ],
                                "msg": "Needs to be filled for FAIR compliance",
                                "severity": 35,
                                "type": "warning"
                            },
                            {
                                "loc": [
                                    "outputs",
                                    0,
                                    "sample_tensor"
                                ],
                                "msg": "Needs to be filled for FAIR compliance",
                                "severity": 35,
                                "type": "warning"
                            }
                        ]
                    },
                    {
                        "context": null,
                        "errors": [
                            {
                                "loc": [
                                    "weights",
                                    "pytorch_state_dict"
                                ],
                                "msg": "Command '['conda', 'env', 'create', '--yes', '--file=/tmp/tmprijmvbfx/pytorch_state_dict/env.yaml', '--name=a5da52dafabdde7cdd7c07143428e76b22eb95ad536a51113bc0628f90346b5e', '--quiet']' returned non-zero exit status 1.",
                                "traceback_html": "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<style>\n.r1 {color: #800000; text-decoration-color: #800000}\n.r2 {color: #800000; text-decoration-color: #800000; font-weight: bold}\n.r3 {color: #bf7f7f; text-decoration-color: #bf7f7f; font-weight: bold}\n.r4 {color: #bfbf7f; text-decoration-color: #bfbf7f}\n.r5 {color: #808000; text-decoration-color: #808000; font-weight: bold}\n.r6 {color: #0000ff; text-decoration-color: #0000ff}\n.r7 {color: #00ff00; text-decoration-color: #00ff00}\n.r8 {color: #7f7f7f; text-decoration-color: #7f7f7f}\n.r9 {color: #00ffff; text-decoration-color: #00ffff}\n.r10 {color: #808000; text-decoration-color: #808000}\n.r11 {color: #00ffff; text-decoration-color: #00ffff; text-decoration: underline}\n.r12 {color: #ff00ff; text-decoration-color: #ff00ff}\n.r13 {color: #ff0000; text-decoration-color: #ff0000; font-weight: bold}\n.r14 {color: #008000; text-decoration-color: #008000}\n.r15 {font-weight: bold}\n.r16 {color: #008080; text-decoration-color: #008080; font-weight: bold}\n.r17 {font-style: italic}\nbody {\n    color: #000000;\n    background-color: #ffffff;\n}\n</style>\n</head>\n<body>\n    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><code style=\"font-family:inherit\"><span class=\"r1\">╭─────────────────────────────── </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> ────────────────────────────────╮</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:<span class=\"r6\">399</span> in <span class=\"r7\">_test</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 396 </span><span class=\"r8\">│   │   </span><span class=\"r6\">raise</span> <span class=\"r9\">RuntimeError</span>(<span class=\"r10\">&quot;Conda not available&quot;</span>) <span class=\"r6\">from</span> <span class=\"r11\">e</span>                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 397 </span><span class=\"r8\">│   </span>                                                                                      <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 398 </span><span class=\"r8\">│   </span><span class=\"r6\">try</span>:                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span> 399 <span class=\"r8\">│   │   </span>run_command([CONDA_CMD, <span class=\"r10\">&quot;run&quot;</span>, <span class=\"r10\">&quot;-n&quot;</span>, env_name, <span class=\"r10\">&quot;python&quot;</span>, <span class=\"r10\">&quot;--version&quot;</span>])            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 400 </span><span class=\"r8\">│   </span><span class=\"r6\">except</span> <span class=\"r9\">Exception</span> <span class=\"r6\">as</span> e:                                                                <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 401 </span><span class=\"r8\">│   │   </span>working_dir.mkdir(parents=<span class=\"r6\">True</span>, exist_ok=<span class=\"r6\">True</span>)                                    <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 402 </span><span class=\"r8\">│   │   </span>path = working_dir / <span class=\"r10\">&quot;env.yaml&quot;</span>                                                   <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:<span class=\"r6\">197</span> in <span class=\"r7\">defau</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 194 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 195 </span><span class=\"r6\">def</span> <span class=\"r7\">default_run_command</span>(args: Sequence[<span class=\"r9\">str</span>]):                                             <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 196 </span><span class=\"r8\">│   </span>logger.info(<span class=\"r10\">&quot;running &#x27;{}&#x27;...&quot;</span>, <span class=\"r10\">&quot; &quot;</span>.join(args))                                        <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span> 197 <span class=\"r8\">│   </span>_ = subprocess.check_call(args)                                                       <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 198 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 199 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 200 </span><span class=\"r6\">def</span> <span class=\"r7\">test_description</span>(                                                                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/lib/python3.12/</span><span class=\"r5\">subprocess.py</span>:<span class=\"r6\">413</span> in <span class=\"r7\">check_call</span>                                              <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 410 </span><span class=\"r8\">│   │   </span>cmd = kwargs.get(<span class=\"r10\">&quot;args&quot;</span>)                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 411 </span><span class=\"r8\">│   │   </span><span class=\"r6\">if</span> cmd <span class=\"r12\">is</span> <span class=\"r6\">None</span>:                                                                   <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 412 </span><span class=\"r8\">│   │   │   </span>cmd = popenargs[<span class=\"r6\">0</span>]                                                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span> 413 <span class=\"r8\">│   │   </span><span class=\"r6\">raise</span> CalledProcessError(retcode, cmd)                                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 414 </span><span class=\"r8\">│   </span><span class=\"r6\">return</span> <span class=\"r6\">0</span>                                                                              <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 415 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 416 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">╰──────────────────────────────────────────────────────────────────────────────────────────────────╯</span>\n<span class=\"r13\">CalledProcessError: </span>Command <span class=\"r14\">&#x27;[&#x27;</span>conda&#x27;, <span class=\"r14\">&#x27;run&#x27;</span>, <span class=\"r14\">&#x27;-n&#x27;</span>, <span class=\"r14\">&#x27;a5da52dafabdde7cdd7c07143428e76b22eb95ad536a51113bc0628f90346b5e&#x27;</span>, <span class=\"r14\">&#x27;python&#x27;</span>, <span class=\"r14\">&#x27;--version&#x27;</span><span class=\"r15\">]</span>&#x27; returned non-zero exit status <span class=\"r16\">1</span>.\n\n<span class=\"r17\">During handling of the above exception, another exception occurred:</span>\n\n<span class=\"r1\">╭─────────────────────────────── </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> ────────────────────────────────╮</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:<span class=\"r6\">406</span> in <span class=\"r7\">_test</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 403 </span><span class=\"r8\">│   │   </span><span class=\"r6\">try</span>:                                                                              <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 404 </span><span class=\"r8\">│   │   │   </span>_ = path.write_bytes(encoded_env)                                             <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 405 </span><span class=\"r8\">│   │   │   </span>logger.debug(<span class=\"r10\">&quot;written conda env to {}&quot;</span>, path)                                 <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span> 406 <span class=\"r8\">│   │   │   </span>run_command(                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 407 </span><span class=\"r8\">│   │   │   │   </span>[                                                                         <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 408 </span><span class=\"r8\">│   │   │   │   │   </span>CONDA_CMD,                                                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 409 </span><span class=\"r8\">│   │   │   │   │   </span><span class=\"r10\">&quot;env&quot;</span>,                                                                <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:<span class=\"r6\">197</span> in <span class=\"r7\">defau</span> <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 194 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 195 </span><span class=\"r6\">def</span> <span class=\"r7\">default_run_command</span>(args: Sequence[<span class=\"r9\">str</span>]):                                             <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 196 </span><span class=\"r8\">│   </span>logger.info(<span class=\"r10\">&quot;running &#x27;{}&#x27;...&quot;</span>, <span class=\"r10\">&quot; &quot;</span>.join(args))                                        <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span> 197 <span class=\"r8\">│   </span>_ = subprocess.check_call(args)                                                       <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 198 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 199 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 200 </span><span class=\"r6\">def</span> <span class=\"r7\">test_description</span>(                                                                     <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r4\">/usr/lib/python3.12/</span><span class=\"r5\">subprocess.py</span>:<span class=\"r6\">413</span> in <span class=\"r7\">check_call</span>                                              <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>                                                                                                  <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 410 </span><span class=\"r8\">│   │   </span>cmd = kwargs.get(<span class=\"r10\">&quot;args&quot;</span>)                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 411 </span><span class=\"r8\">│   │   </span><span class=\"r6\">if</span> cmd <span class=\"r12\">is</span> <span class=\"r6\">None</span>:                                                                   <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 412 </span><span class=\"r8\">│   │   │   </span>cmd = popenargs[<span class=\"r6\">0</span>]                                                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span> <span class=\"r1\">❱ </span> 413 <span class=\"r8\">│   │   </span><span class=\"r6\">raise</span> CalledProcessError(retcode, cmd)                                            <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 414 </span><span class=\"r8\">│   </span><span class=\"r6\">return</span> <span class=\"r6\">0</span>                                                                              <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 415 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">│</span>   <span class=\"r8\"> 416 </span>                                                                                          <span class=\"r1\">│</span>\n<span class=\"r1\">╰──────────────────────────────────────────────────────────────────────────────────────────────────╯</span>\n<span class=\"r13\">CalledProcessError: </span>Command <span class=\"r14\">&#x27;[&#x27;</span>conda&#x27;, <span class=\"r14\">&#x27;env&#x27;</span>, <span class=\"r14\">&#x27;create&#x27;</span>, <span class=\"r14\">&#x27;--yes&#x27;</span>, <span class=\"r14\">&#x27;--file=/tmp/tmprijmvbfx/pytorch_state_dict/env.yaml&#x27;</span>, <span class=\"r14\">&#x27;--name=a5da52dafabdde7cdd7c07143428e76b22eb95ad536a51113bc0628f90346b5e&#x27;</span>, <span class=\"r14\">&#x27;--quiet&#x27;</span><span class=\"r15\">]</span>&#x27; returned non-zero exit status <span class=\"r16\">1</span>.\n</code></pre>\n</body>\n</html>\n",
                                "traceback_md": "╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮\n│ /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:399 in _test │\n│                                                                                                  │\n│    396 │   │   raise RuntimeError(\"Conda not available\") from e                                  │\n│    397 │                                                                                         │\n│    398 │   try:                                                                                  │\n│ ❱  399 │   │   run_command([CONDA_CMD, \"run\", \"-n\", env_name, \"python\", \"--version\"])            │\n│    400 │   except Exception as e:                                                                │\n│    401 │   │   working_dir.mkdir(parents=True, exist_ok=True)                                    │\n│    402 │   │   path = working_dir / \"env.yaml\"                                                   │\n│                                                                                                  │\n│ /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:197 in defau │\n│                                                                                                  │\n│    194                                                                                           │\n│    195 def default_run_command(args: Sequence[str]):                                             │\n│    196 │   logger.info(\"running '{}'...\", \" \".join(args))                                        │\n│ ❱  197 │   _ = subprocess.check_call(args)                                                       │\n│    198                                                                                           │\n│    199                                                                                           │\n│    200 def test_description(                                                                     │\n│                                                                                                  │\n│ /usr/lib/python3.12/subprocess.py:413 in check_call                                              │\n│                                                                                                  │\n│    410 │   │   cmd = kwargs.get(\"args\")                                                          │\n│    411 │   │   if cmd is None:                                                                   │\n│    412 │   │   │   cmd = popenargs[0]                                                            │\n│ ❱  413 │   │   raise CalledProcessError(retcode, cmd)                                            │\n│    414 │   return 0                                                                              │\n│    415                                                                                           │\n│    416                                                                                           │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────╯\nCalledProcessError: Command '['conda', 'run', '-n', 'a5da52dafabdde7cdd7c07143428e76b22eb95ad536a51113bc0628f90346b5e', 'python', '--version']' returned non-zero exit status 1.\n\nDuring handling of the above exception, another exception occurred:\n\n╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮\n│ /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:406 in _test │\n│                                                                                                  │\n│    403 │   │   try:                                                                              │\n│    404 │   │   │   _ = path.write_bytes(encoded_env)                                             │\n│    405 │   │   │   logger.debug(\"written conda env to {}\", path)                                 │\n│ ❱  406 │   │   │   run_command(                                                                  │\n│    407 │   │   │   │   [                                                                         │\n│    408 │   │   │   │   │   CONDA_CMD,                                                            │\n│    409 │   │   │   │   │   \"env\",                                                                │\n│                                                                                                  │\n│ /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:197 in defau │\n│                                                                                                  │\n│    194                                                                                           │\n│    195 def default_run_command(args: Sequence[str]):                                             │\n│    196 │   logger.info(\"running '{}'...\", \" \".join(args))                                        │\n│ ❱  197 │   _ = subprocess.check_call(args)                                                       │\n│    198                                                                                           │\n│    199                                                                                           │\n│    200 def test_description(                                                                     │\n│                                                                                                  │\n│ /usr/lib/python3.12/subprocess.py:413 in check_call                                              │\n│                                                                                                  │\n│    410 │   │   cmd = kwargs.get(\"args\")                                                          │\n│    411 │   │   if cmd is None:                                                                   │\n│    412 │   │   │   cmd = popenargs[0]                                                            │\n│ ❱  413 │   │   raise CalledProcessError(retcode, cmd)                                            │\n│    414 │   return 0                                                                              │\n│    415                                                                                           │\n│    416                                                                                           │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────╯\nCalledProcessError: Command '['conda', 'env', 'create', '--yes', '--file=/tmp/tmprijmvbfx/pytorch_state_dict/env.yaml', '--name=a5da52dafabdde7cdd7c07143428e76b22eb95ad536a51113bc0628f90346b5e', '--quiet']' returned non-zero exit status 1.\n",
                                "type": "conda",
                                "with_traceback": true
                            }
                        ],
                        "loc": [
                            "weights",
                            "pytorch_state_dict"
                        ],
                        "name": "Conda environment creation",
                        "recommended_env": {
                            "channels": [
                                "pytorch",
                                "nvidia",
                                "anaconda",
                                "conda-forge",
                                "nodefaults"
                            ],
                            "dependencies": [
                                "bioimageio.core",
                                "cuda=11.8",
                                "pip",
                                "python=3.10",
                                "pytorch",
                                "setuptools",
                                "torchvision",
                                {
                                    "pip": [
                                        "fsspec",
                                        "git+https://github.com/facebookresearch/segment-anything.git",
                                        "huggingface-hub",
                                        "matplotlib",
                                        "packaging",
                                        "safetensors",
                                        "timm",
                                        "tqdm"
                                    ]
                                }
                            ],
                            "name": null
                        },
                        "saved_conda_compare": "bioimageio.core not found\ncuda not found\npip not found\npython not found\npytorch not found\nsetuptools not found\ntorchvision not found\nfsspec not found\n//github.com/facebookresearch/segment-anything.git not found\nhuggingface-hub not found\nmatplotlib not found\npackaging not found\nsafetensors not found\ntimm not found\ntqdm not found\n",
                        "status": "failed",
                        "warnings": []
                    }
                ],
                "env": [
                    [
                        "bioimageio.spec",
                        "0.5.5.6",
                        "",
                        ""
                    ]
                ],
                "format_version": "0.5.5",
                "id": "resourceful-lizard",
                "metadata_completeness": 0.6727272727272727,
                "name": "bioimageio format validation",
                "saved_conda_list": "# packages in environment at /usr/share/miniconda/envs/core:\n#\n# Name                     Version          Build            Channel\n",
                "source_name": "https://hypha.aicell.io/bioimage-io/artifacts/resourceful-lizard/files/rdf.yaml?version=v0",
                "status": "failed",
                "type": "model"
            },
            "error": "Command '['conda', 'env', 'create', '--yes', '--file=/tmp/tmprijmvbfx/pytorch_state_dict/env.yaml', '--name=a5da52dafabdde7cdd7c07143428e76b22eb95ad536a51113bc0628f90346b5e', '--quiet']' returned non-zero exit status 1.",
            "links": [],
            "score": 0.0,
            "status": "failed"
        },
        "careamics_0.0.16": {
            "badge": null,
            "details": "'Model' resource not tagged with 'CAREamics' or 'careamics'.",
            "error": null,
            "links": [],
            "score": 0.0,
            "status": "not-applicable"
        },
        "careamics_0.0.17": {
            "badge": null,
            "details": "'Model' resource not tagged with 'CAREamics' or 'careamics'.",
            "error": null,
            "links": [],
            "score": 0.0,
            "status": "not-applicable"
        }
    }
}