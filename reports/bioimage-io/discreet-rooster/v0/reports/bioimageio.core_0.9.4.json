{"status": "failed", "score": 0.0, "error": "Error when deserializing class 'Conv2D' using config={'name': 'conv2d_105', 'trainable': True, 'dtype': 'float32', 'filters': 16, 'kernel_size': [3, 3], 'strides': [1, 1], 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': [1, 1], 'activation': 'elu', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {'dtype': 'float32'}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}.\n\nException encountered: <class 'keras.src.initializers.random_initializers.VarianceScaling'> could not be deserialized properly. Please ensure that components that are Python object instances (layers, models, etc.) returned by `get_config()` are explicitly deserialized in the model's `from_config()` method.\n\nconfig={'module': 'keras.initializers', 'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}, 'registered_name': None}.\n\nException encountered: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'\n\nError when deserializing class 'Conv2D' using config={'name': 'conv2d_105', 'trainable': True, 'dtype': 'float32', 'filters': 16, 'kernel_size': [3, 3], 'strides': [1, 1], 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': [1, 1], 'activation': 'elu', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {'dtype': 'float32'}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}.\n\nException encountered: <class 'keras.src.initializers.random_initializers.VarianceScaling'> could not be deserialized properly. Please ensure that components that are Python object instances (layers, models, etc.) returned by `get_config()` are explicitly deserialized in the model's `from_config()` method.\n\nconfig={'module': 'keras.initializers', 'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}, 'registered_name': None}.\n\nException encountered: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'", "details": {"name": "bioimageio format validation", "source_name": "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/rdf.yaml?version=v0", "id": "10.5281/zenodo.5914248/8186255", "type": "model", "format_version": "0.4.10", "status": "failed", "metadata_completeness": 0.7307692307692307, "details": [{"name": "Successfully created `ModelDescr` instance.", "status": "passed", "loc": [], "errors": [], "warnings": [], "context": {"file_name": "rdf.yaml", "original_source_name": null, "perform_io_checks": true, "known_files": {"https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/U_Net_PhC_C2DL_PSC_segmentation.ipynb?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.tiff?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.tiff?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/binarize.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/per_sample_scale_range.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/README.md?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/keras_model.h5?version=v0": null, "keras_model.h5": "4f9f5dd9bbb0eb71eae15928abe24dcbba951c525373f862d19f33ce52d035e4", "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/tensorflow_saved_model_bundle.zip?version=v0": null, "tensorflow_saved_model_bundle.zip": "9edc07090be3522a6c9f169f5509e33ad036889093b37505885e1913862a0a38"}, "update_hashes": false, "root": "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files?version=v0"}, "recommended_env": null, "saved_conda_compare": null}, {"name": "bioimageio.spec format validation model 0.4.10", "status": "passed", "loc": [], "errors": [], "warnings": [], "context": {"file_name": "rdf.yaml", "original_source_name": null, "perform_io_checks": true, "known_files": {"https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/U_Net_PhC_C2DL_PSC_segmentation.ipynb?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.tiff?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.tiff?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/binarize.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/per_sample_scale_range.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/README.md?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/keras_model.h5?version=v0": null, "keras_model.h5": "4f9f5dd9bbb0eb71eae15928abe24dcbba951c525373f862d19f33ce52d035e4", "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/tensorflow_saved_model_bundle.zip?version=v0": null, "tensorflow_saved_model_bundle.zip": "9edc07090be3522a6c9f169f5509e33ad036889093b37505885e1913862a0a38"}, "update_hashes": false, "root": "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files?version=v0"}, "recommended_env": null, "saved_conda_compare": null}, {"name": "Reproduce test outputs from test inputs (keras_hdf5)", "status": "failed", "loc": ["weights", "keras_hdf5"], "errors": [{"loc": ["weights", "keras_hdf5"], "msg": "Error when deserializing class 'Conv2D' using config={'name': 'conv2d_105', 'trainable': True, 'dtype': 'float32', 'filters': 16, 'kernel_size': [3, 3], 'strides': [1, 1], 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': [1, 1], 'activation': 'elu', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {'dtype': 'float32'}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}.\n\nException encountered: <class 'keras.src.initializers.random_initializers.VarianceScaling'> could not be deserialized properly. Please ensure that components that are Python object instances (layers, models, etc.) returned by `get_config()` are explicitly deserialized in the model's `from_config()` method.\n\nconfig={'module': 'keras.initializers', 'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}, 'registered_name': None}.\n\nException encountered: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'", "type": "bioimageio.core", "with_traceback": true, "traceback_md": "\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/saving/serialization_lib.py:733 in de \u2502\n\u2502                                                                                                  \u2502\n\u2502   730 \u2502   safe_mode_scope = SafeModeScope(safe_mode)                                             \u2502\n\u2502   731 \u2502   with custom_obj_scope, safe_mode_scope:                                                \u2502\n\u2502   732 \u2502   \u2502   try:                                                                               \u2502\n\u2502 \u2771 733 \u2502   \u2502   \u2502   instance = cls.from_config(inner_config)                                       \u2502\n\u2502   734 \u2502   \u2502   except TypeError as e:                                                             \u2502\n\u2502   735 \u2502   \u2502   \u2502   raise TypeError(                                                               \u2502\n\u2502   736 \u2502   \u2502   \u2502   \u2502   f\"{cls} could not be deserialized properly. Please\"                        \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/initializer.py:81 in fro \u2502\n\u2502                                                                                                  \u2502\n\u2502   78 \u2502   \u2502   Returns:                                                                            \u2502\n\u2502   79 \u2502   \u2502   \u2502   An `Initializer` instance.                                                      \u2502\n\u2502   80 \u2502   \u2502   \"\"\"                                                                                 \u2502\n\u2502 \u2771 81 \u2502   \u2502   return cls(**config)                                                                \u2502\n\u2502   82 \u2502                                                                                           \u2502\n\u2502   83 \u2502   def clone(self):                                                                        \u2502\n\u2502   84 \u2502   \u2502   return self.__class__.from_config(self.get_config())                                \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nTypeError: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'\n\nDuring handling of the above exception, another exception occurred:\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/ops/operation.py:255 in from_config   \u2502\n\u2502                                                                                                  \u2502\n\u2502   252 \u2502   \u2502   \u2502   \u2502   policy = policy.name                                                       \u2502\n\u2502   253 \u2502   \u2502   \u2502   config[\"dtype\"] = policy                                                       \u2502\n\u2502   254 \u2502   \u2502   try:                                                                               \u2502\n\u2502 \u2771 255 \u2502   \u2502   \u2502   return cls(**config)                                                           \u2502\n\u2502   256 \u2502   \u2502   except Exception as e:                                                             \u2502\n\u2502   257 \u2502   \u2502   \u2502   raise TypeError(                                                               \u2502\n\u2502   258 \u2502   \u2502   \u2502   \u2502   f\"Error when deserializing class '{cls.__name__}' using \"                  \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/layers/convolutional/conv2d.py:118 in \u2502\n\u2502                                                                                                  \u2502\n\u2502   115 \u2502   \u2502   bias_constraint=None,                                                              \u2502\n\u2502   116 \u2502   \u2502   **kwargs,                                                                          \u2502\n\u2502   117 \u2502   ):                                                                                     \u2502\n\u2502 \u2771 118 \u2502   \u2502   super().__init__(                                                                  \u2502\n\u2502   119 \u2502   \u2502   \u2502   rank=2,                                                                        \u2502\n\u2502   120 \u2502   \u2502   \u2502   filters=filters,                                                               \u2502\n\u2502   121 \u2502   \u2502   \u2502   kernel_size=kernel_size,                                                       \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/layers/convolutional/base_conv.py:126 \u2502\n\u2502                                                                                                  \u2502\n\u2502   123 \u2502   \u2502   self.data_format = standardize_data_format(data_format)                            \u2502\n\u2502   124 \u2502   \u2502   self.activation = activations.get(activation)                                      \u2502\n\u2502   125 \u2502   \u2502   self.use_bias = use_bias                                                           \u2502\n\u2502 \u2771 126 \u2502   \u2502   self.kernel_initializer = initializers.get(kernel_initializer)                     \u2502\n\u2502   127 \u2502   \u2502   self.bias_initializer = initializers.get(bias_initializer)                         \u2502\n\u2502   128 \u2502   \u2502   self.kernel_regularizer = regularizers.get(kernel_regularizer)                     \u2502\n\u2502   129 \u2502   \u2502   self.bias_regularizer = regularizers.get(bias_regularizer)                         \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/__init__.py:133 in get   \u2502\n\u2502                                                                                                  \u2502\n\u2502   130 \u2502   if identifier is None:                                                                 \u2502\n\u2502   131 \u2502   \u2502   return None                                                                        \u2502\n\u2502   132 \u2502   if isinstance(identifier, dict):                                                       \u2502\n\u2502 \u2771 133 \u2502   \u2502   obj = deserialize(identifier)                                                      \u2502\n\u2502   134 \u2502   elif isinstance(identifier, str):                                                      \u2502\n\u2502   135 \u2502   \u2502   config = {\"class_name\": str(identifier), \"config\": {}}                             \u2502\n\u2502   136 \u2502   \u2502   obj = deserialize(config)                                                          \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/__init__.py:75 in deseri \u2502\n\u2502                                                                                                  \u2502\n\u2502    72 @keras_export(\"keras.initializers.deserialize\")                                            \u2502\n\u2502    73 def deserialize(config, custom_objects=None):                                              \u2502\n\u2502    74 \u2502   \"\"\"Returns a Keras initializer object via its configuration.\"\"\"                        \u2502\n\u2502 \u2771  75 \u2502   return serialization_lib.deserialize_keras_object(                                     \u2502\n\u2502    76 \u2502   \u2502   config,                                                                            \u2502\n\u2502    77 \u2502   \u2502   module_objects=ALL_OBJECTS_DICT,                                                   \u2502\n\u2502    78 \u2502   \u2502   custom_objects=custom_objects,                                                     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/saving/serialization_lib.py:596 in de \u2502\n\u2502                                                                                                  \u2502\n\u2502   593 \u2502   \u2502   \u2502   \u2502   \u2502   ),                                                                     \u2502\n\u2502   594 \u2502   \u2502   \u2502   \u2502   \u2502   custom_objects=custom_objects,                                         \u2502\n\u2502   595 \u2502   \u2502   \u2502   \u2502   )                                                                          \u2502\n\u2502 \u2771 596 \u2502   \u2502   \u2502   return deserialize_keras_object(                                               \u2502\n\u2502   597 \u2502   \u2502   \u2502   \u2502   serialize_with_public_class(                                               \u2502\n\u2502   598 \u2502   \u2502   \u2502   \u2502   \u2502   module_objects[config], inner_config=inner_config                      \u2502\n\u2502   599 \u2502   \u2502   \u2502   \u2502   ),                                                                         \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/saving/serialization_lib.py:735 in de \u2502\n\u2502                                                                                                  \u2502\n\u2502   732 \u2502   \u2502   try:                                                                               \u2502\n\u2502   733 \u2502   \u2502   \u2502   instance = cls.from_config(inner_config)                                       \u2502\n\u2502   734 \u2502   \u2502   except TypeError as e:                                                             \u2502\n\u2502 \u2771 735 \u2502   \u2502   \u2502   raise TypeError(                                                               \u2502\n\u2502   736 \u2502   \u2502   \u2502   \u2502   f\"{cls} could not be deserialized properly. Please\"                        \u2502\n\u2502   737 \u2502   \u2502   \u2502   \u2502   \" ensure that components that are Python object\"                           \u2502\n\u2502   738 \u2502   \u2502   \u2502   \u2502   \" instances (layers, models, etc.) returned by\"                            \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nTypeError: <class 'keras.src.initializers.random_initializers.VarianceScaling'> could not be deserialized properly. Please ensure that components that are Python object instances (layers, models, etc.) returned by `get_config()` are explicitly deserialized in the model's `from_config()` method.\n\nconfig={'module': 'keras.initializers', 'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}, 'registered_name': None}.\n\nException encountered: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'\n\nDuring handling of the above exception, another exception occurred:\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:777 in _test \u2502\n\u2502                                                                                                  \u2502\n\u2502    774 \u2502   \u2502   test_input = get_test_input_sample(model)                                         \u2502\n\u2502    775 \u2502   \u2502   expected = get_test_output_sample(model)                                          \u2502\n\u2502    776 \u2502   \u2502                                                                                     \u2502\n\u2502 \u2771  777 \u2502   \u2502   with create_prediction_pipeline(                                                  \u2502\n\u2502    778 \u2502   \u2502   \u2502   bioimageio_model=model, devices=devices, weight_format=weight_format          \u2502\n\u2502    779 \u2502   \u2502   ) as prediction_pipeline:                                                         \u2502\n\u2502    780 \u2502   \u2502   \u2502   results = prediction_pipeline.predict_sample_without_blocking(test_input)     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_prediction_pipeline.py:371 in  \u2502\n\u2502                                                                                                  \u2502\n\u2502   368 \u2502   \u2502   \u2502   f\"deprecated create_prediction_pipeline kwargs: {set(deprecated_kwargs)}\"      \u2502\n\u2502   369 \u2502   \u2502   )                                                                                  \u2502\n\u2502   370 \u2502                                                                                          \u2502\n\u2502 \u2771 371 \u2502   model_adapter = model_adapter or create_model_adapter(                                 \u2502\n\u2502   372 \u2502   \u2502   model_description=bioimageio_model,                                                \u2502\n\u2502   373 \u2502   \u2502   devices=devices,                                                                   \u2502\n\u2502   374 \u2502   \u2502   weight_format_priority_order=weights_format and (weights_format,),                 \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/_model_adapter.py:169  \u2502\n\u2502                                                                                                  \u2502\n\u2502   166 \u2502   \u2502   assert errors                                                                      \u2502\n\u2502   167 \u2502   \u2502   if len(weight_format_priority_order) == 1:                                         \u2502\n\u2502   168 \u2502   \u2502   \u2502   assert len(errors) == 1                                                        \u2502\n\u2502 \u2771 169 \u2502   \u2502   \u2502   raise errors[0]                                                                \u2502\n\u2502   170 \u2502   \u2502                                                                                      \u2502\n\u2502   171 \u2502   \u2502   else:                                                                              \u2502\n\u2502   172 \u2502   \u2502   \u2502   msg = (                                                                        \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/_model_adapter.py:158  \u2502\n\u2502                                                                                                  \u2502\n\u2502   155 \u2502   \u2502   \u2502   \u2502   \u2502   except Exception:                                                      \u2502\n\u2502   156 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   from .tensorflow_backend import KerasModelAdapter                  \u2502\n\u2502   157 \u2502   \u2502   \u2502   \u2502   \u2502                                                                          \u2502\n\u2502 \u2771 158 \u2502   \u2502   \u2502   \u2502   \u2502   return KerasModelAdapter(                                              \u2502\n\u2502   159 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   model_description=model_description, devices=devices               \u2502\n\u2502   160 \u2502   \u2502   \u2502   \u2502   \u2502   )                                                                      \u2502\n\u2502   161 \u2502   \u2502   \u2502   \u2502   except Exception as e:                                                     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/keras_backend.py:80 in \u2502\n\u2502                                                                                                  \u2502\n\u2502    77 \u2502   \u2502   weight_reader = model_description.weights.keras_hdf5.get_reader()                  \u2502\n\u2502    78 \u2502   \u2502   if weight_reader.suffix in (\".h5\", \"hdf5\"):                                        \u2502\n\u2502    79 \u2502   \u2502   \u2502   h5_file = h5py.File(weight_reader, mode=\"r\")                                   \u2502\n\u2502 \u2771  80 \u2502   \u2502   \u2502   self._network = legacy_h5_format.load_model_from_hdf5(h5_file)                 \u2502\n\u2502    81 \u2502   \u2502   else:                                                                              \u2502\n\u2502    82 \u2502   \u2502   \u2502   with TemporaryDirectory() as temp_dir:                                         \u2502\n\u2502    83 \u2502   \u2502   \u2502   \u2502   temp_path = Path(temp_dir) / weight_reader.original_file_name              \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/legacy_h5_format.py:137 \u2502\n\u2502                                                                                                  \u2502\n\u2502   134 \u2502   \u2502   legacy_scope = saving_options.keras_option_scope(use_legacy_config=True)           \u2502\n\u2502   135 \u2502   \u2502   safe_mode_scope = serialization_lib.SafeModeScope(safe_mode)                       \u2502\n\u2502   136 \u2502   \u2502   with legacy_scope, safe_mode_scope:                                                \u2502\n\u2502 \u2771 137 \u2502   \u2502   \u2502   model = saving_utils.model_from_config(                                        \u2502\n\u2502   138 \u2502   \u2502   \u2502   \u2502   model_config, custom_objects=custom_objects                                \u2502\n\u2502   139 \u2502   \u2502   \u2502   )                                                                              \u2502\n\u2502   140                                                                                            \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/saving_utils.py:83 in m \u2502\n\u2502                                                                                                  \u2502\n\u2502    80 \u2502   \u2502   \u2502   function_dict[\"config\"][\"closure\"] = function_config[2]                        \u2502\n\u2502    81 \u2502   \u2502   \u2502   config[\"config\"][\"function\"] = function_dict                                   \u2502\n\u2502    82 \u2502                                                                                          \u2502\n\u2502 \u2771  83 \u2502   return serialization.deserialize_keras_object(                                         \u2502\n\u2502    84 \u2502   \u2502   config,                                                                            \u2502\n\u2502    85 \u2502   \u2502   module_objects=MODULE_OBJECTS.ALL_OBJECTS,                                         \u2502\n\u2502    86 \u2502   \u2502   custom_objects=custom_objects,                                                     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/serialization.py:488 in \u2502\n\u2502                                                                                                  \u2502\n\u2502   485 \u2502   \u2502   \u2502   custom_objects = custom_objects or {}                                          \u2502\n\u2502   486 \u2502   \u2502   \u2502                                                                                  \u2502\n\u2502   487 \u2502   \u2502   \u2502   if \"custom_objects\" in arg_spec.args:                                          \u2502\n\u2502 \u2771 488 \u2502   \u2502   \u2502   \u2502   deserialized_obj = cls.from_config(                                        \u2502\n\u2502   489 \u2502   \u2502   \u2502   \u2502   \u2502   cls_config,                                                            \u2502\n\u2502   490 \u2502   \u2502   \u2502   \u2502   \u2502   custom_objects={                                                       \u2502\n\u2502   491 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   **object_registration.GLOBAL_CUSTOM_OBJECTS,                       \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/models/model.py:660 in from_config    \u2502\n\u2502                                                                                                  \u2502\n\u2502   657 \u2502   \u2502   \u2502   # (but not Functional subclasses with a custom __init__)                       \u2502\n\u2502   658 \u2502   \u2502   \u2502   from keras.src.models.functional import functional_from_config                 \u2502\n\u2502   659 \u2502   \u2502   \u2502                                                                                  \u2502\n\u2502 \u2771 660 \u2502   \u2502   \u2502   return functional_from_config(                                                 \u2502\n\u2502   661 \u2502   \u2502   \u2502   \u2502   cls, config, custom_objects=custom_objects                                 \u2502\n\u2502   662 \u2502   \u2502   \u2502   )                                                                              \u2502\n\u2502   663                                                                                            \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/models/functional.py:558 in functiona \u2502\n\u2502                                                                                                  \u2502\n\u2502   555 \u2502                                                                                          \u2502\n\u2502   556 \u2502   # First, we create all layers and enqueue nodes to be processed                        \u2502\n\u2502   557 \u2502   for layer_data in functional_config[\"layers\"]:                                         \u2502\n\u2502 \u2771 558 \u2502   \u2502   process_layer(layer_data)                                                          \u2502\n\u2502   559 \u2502                                                                                          \u2502\n\u2502   560 \u2502   # Then we process nodes in order of layer depth.                                       \u2502\n\u2502   561 \u2502   # Nodes that cannot yet be processed (if the inbound node                              \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/models/functional.py:521 in process_l \u2502\n\u2502                                                                                                  \u2502\n\u2502   518 \u2502   \u2502   if \"module\" not in layer_data:                                                     \u2502\n\u2502   519 \u2502   \u2502   \u2502   # Legacy format deserialization (no \"module\" key)                              \u2502\n\u2502   520 \u2502   \u2502   \u2502   # used for H5 and SavedModel formats                                           \u2502\n\u2502 \u2771 521 \u2502   \u2502   \u2502   layer = saving_utils.model_from_config(                                        \u2502\n\u2502   522 \u2502   \u2502   \u2502   \u2502   layer_data, custom_objects=custom_objects                                  \u2502\n\u2502   523 \u2502   \u2502   \u2502   )                                                                              \u2502\n\u2502   524 \u2502   \u2502   else:                                                                              \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/saving_utils.py:83 in m \u2502\n\u2502                                                                                                  \u2502\n\u2502    80 \u2502   \u2502   \u2502   function_dict[\"config\"][\"closure\"] = function_config[2]                        \u2502\n\u2502    81 \u2502   \u2502   \u2502   config[\"config\"][\"function\"] = function_dict                                   \u2502\n\u2502    82 \u2502                                                                                          \u2502\n\u2502 \u2771  83 \u2502   return serialization.deserialize_keras_object(                                         \u2502\n\u2502    84 \u2502   \u2502   config,                                                                            \u2502\n\u2502    85 \u2502   \u2502   module_objects=MODULE_OBJECTS.ALL_OBJECTS,                                         \u2502\n\u2502    86 \u2502   \u2502   custom_objects=custom_objects,                                                     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/serialization.py:497 in \u2502\n\u2502                                                                                                  \u2502\n\u2502   494 \u2502   \u2502   \u2502   \u2502   )                                                                          \u2502\n\u2502   495 \u2502   \u2502   \u2502   else:                                                                          \u2502\n\u2502   496 \u2502   \u2502   \u2502   \u2502   with object_registration.CustomObjectScope(custom_objects):                \u2502\n\u2502 \u2771 497 \u2502   \u2502   \u2502   \u2502   \u2502   deserialized_obj = cls.from_config(cls_config)                         \u2502\n\u2502   498 \u2502   \u2502   else:                                                                              \u2502\n\u2502   499 \u2502   \u2502   \u2502   # Then `cls` may be a function returning a class.                              \u2502\n\u2502   500 \u2502   \u2502   \u2502   # in this case by convention `config` holds                                    \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/ops/operation.py:257 in from_config   \u2502\n\u2502                                                                                                  \u2502\n\u2502   254 \u2502   \u2502   try:                                                                               \u2502\n\u2502   255 \u2502   \u2502   \u2502   return cls(**config)                                                           \u2502\n\u2502   256 \u2502   \u2502   except Exception as e:                                                             \u2502\n\u2502 \u2771 257 \u2502   \u2502   \u2502   raise TypeError(                                                               \u2502\n\u2502   258 \u2502   \u2502   \u2502   \u2502   f\"Error when deserializing class '{cls.__name__}' using \"                  \u2502\n\u2502   259 \u2502   \u2502   \u2502   \u2502   f\"config={config}.\\n\\nException encountered: {e}\"                          \u2502\n\u2502   260 \u2502   \u2502   \u2502   )                                                                              \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nTypeError: Error when deserializing class 'Conv2D' using config={'name': 'conv2d_105', 'trainable': True, 'dtype': 'float32', 'filters': 16, 'kernel_size': [3, 3], 'strides': [1, 1], 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': [1, 1], 'activation': 'elu', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {'dtype': 'float32'}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}.\n\nException encountered: <class 'keras.src.initializers.random_initializers.VarianceScaling'> could not be deserialized properly. Please ensure that components that are Python object instances (layers, models, etc.) returned by `get_config()` are explicitly deserialized in the model's `from_config()` method.\n\nconfig={'module': 'keras.initializers', 'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}, 'registered_name': None}.\n\nException encountered: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'\n", "traceback_html": "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<style>\n.r1 {color: #800000; text-decoration-color: #800000}\n.r2 {color: #800000; text-decoration-color: #800000; font-weight: bold}\n.r3 {color: #bf7f7f; text-decoration-color: #bf7f7f; font-weight: bold}\n.r4 {color: #7f7f7f; text-decoration-color: #7f7f7f}\n.r5 {font-weight: bold}\n.r6 {color: #0000ff; text-decoration-color: #0000ff}\n.r7 {color: #00ffff; text-decoration-color: #00ffff}\n.r8 {color: #0000ff; text-decoration-color: #0000ff; font-weight: bold; text-decoration: underline}\n.r9 {font-weight: bold; text-decoration: underline}\n.r10 {color: #00ffff; text-decoration-color: #00ffff; font-weight: bold; text-decoration: underline}\n.r11 {color: #808000; text-decoration-color: #808000; font-weight: bold; text-decoration: underline}\n.r12 {color: #bfbf7f; text-decoration-color: #bfbf7f}\n.r13 {color: #808000; text-decoration-color: #808000}\n.r14 {color: #808080; text-decoration-color: #808080}\n.r15 {color: #00ff00; text-decoration-color: #00ff00}\n.r16 {color: #ff0000; text-decoration-color: #ff0000}\n.r17 {color: #ff0000; text-decoration-color: #ff0000; font-weight: bold}\n.r18 {color: #800080; text-decoration-color: #800080; font-weight: bold}\n.r19 {color: #008000; text-decoration-color: #008000}\n.r20 {font-style: italic}\n.r21 {color: #ff0000; text-decoration-color: #ff0000; font-weight: bold; text-decoration: underline}\n.r22 {color: #00ff00; text-decoration-color: #00ff00; font-weight: bold; text-decoration: underline}\n.r23 {color: #ff00ff; text-decoration-color: #ff00ff}\n.r24 {color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold}\n.r25 {color: #bfbfbf; text-decoration-color: #bfbfbf}\n.r26 {color: #000000; text-decoration-color: #000000}\n.r27 {color: #008080; text-decoration-color: #008080; font-weight: bold}\n.r28 {color: #800080; text-decoration-color: #800080; font-style: italic}\n.r29 {color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold; text-decoration: underline}\n.r30 {color: #00ffff; text-decoration-color: #00ffff; text-decoration: underline}\n.r31 {color: #00ff00; text-decoration-color: #00ff00; font-style: italic}\nbody {\n    color: #000000;\n    background-color: #ffffff;\n}\n</style>\n</head>\n<body>\n    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><code style=\"font-family:inherit\"><span class=\"r1\">\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/saving/</span><span class=\"r5\">serialization_lib.py</span>:733 in de <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">730 </span><span class=\"r4\">\u2502   </span>safe_mode_scope = SafeModeScope(safe_mode)                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">731 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">with</span> custom_obj_scope, safe_mode_scope:                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">732 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">try</span>:                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>733 <span class=\"r4\">\u2502   \u2502   \u2502   </span>instance = <span class=\"r7\">cls</span>.from_config(inner_config)                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">734 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">TypeError</span> <span class=\"r6\">as</span> e:                                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">735 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> </span><span class=\"r10\">TypeError</span><span class=\"r9\">(</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">736 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;{</span><span class=\"r10\">cls</span><span class=\"r11\">} could not be deserialized properly. Please&quot;</span>                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/</span><span class=\"r5\">initializer.py</span>:81 in fro <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">78 </span><span class=\"r12\">\u2502   \u2502   </span><span class=\"r13\">Returns:</span>                                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">79 </span><span class=\"r12\">\u2502   \u2502   \u2502   </span><span class=\"r13\">An `Initializer` instance.</span>                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">80 </span><span class=\"r12\">\u2502   \u2502   </span><span class=\"r13\">&quot;&quot;&quot;</span>                                                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>81 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r10\">cls</span><span class=\"r9\">(**config)</span>                                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">82 </span><span class=\"r4\">\u2502   </span>                                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">83 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">def</span><span class=\"r14\"> </span><span class=\"r15\">clone</span>(<span class=\"r7\">self</span>):                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">84 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r7\">self</span>.<span class=\"r16\">__class__</span>.from_config(<span class=\"r7\">self</span>.get_config())                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f</span>\n<span class=\"r17\">TypeError: </span><span class=\"r18\">VarianceScaling.__init__</span><span class=\"r5\">()</span> got an unexpected keyword argument <span class=\"r19\">&#x27;dtype&#x27;</span>\n\n<span class=\"r20\">During handling of the above exception, another exception occurred:</span>\n\n<span class=\"r1\">\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/ops/</span><span class=\"r5\">operation.py</span>:255 in from_config   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">252 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>policy = policy.name                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">253 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>config[<span class=\"r13\">&quot;dtype&quot;</span>] = policy                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">254 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">try</span>:                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>255 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r7\">cls</span>(**config)                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">256 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">Exception</span> <span class=\"r6\">as</span> e:                                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">257 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> </span><span class=\"r10\">TypeError</span><span class=\"r9\">(</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">258 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;Error when deserializing class &#x27;{</span><span class=\"r10\">cls</span><span class=\"r9\">.</span><span class=\"r21\">__name__</span><span class=\"r11\">}&#x27; using &quot;</span>                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/layers/convolutional/</span><span class=\"r5\">conv2d.py</span>:118 in <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">115 </span><span class=\"r4\">\u2502   \u2502   </span>bias_constraint=<span class=\"r6\">None</span>,                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">116 </span><span class=\"r4\">\u2502   \u2502   </span>**kwargs,                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">117 </span><span class=\"r4\">\u2502   </span>):                                                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>118 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r10\">super</span><span class=\"r9\">().</span><span class=\"r22\">__init__</span><span class=\"r9\">(</span>                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">119 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">rank=</span><span class=\"r8\">2</span><span class=\"r9\">,</span>                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">120 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">filters=filters,</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">121 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">kernel_size=kernel_size,</span>                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/layers/convolutional/</span><span class=\"r5\">base_conv.py</span>:126 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">123 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.data_format = standardize_data_format(data_format)                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">124 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.activation = activations.get(activation)                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">125 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.use_bias = use_bias                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>126 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.kernel_initializer = <span class=\"r9\">initializers.get(kernel_initializer)</span>                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">127 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.bias_initializer = initializers.get(bias_initializer)                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">128 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.kernel_regularizer = regularizers.get(kernel_regularizer)                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">129 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.bias_regularizer = regularizers.get(bias_regularizer)                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/</span><span class=\"r5\">__init__.py</span>:133 in get   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">130 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">if</span> identifier <span class=\"r23\">is</span> <span class=\"r6\">None</span>:                                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">131 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r6\">None</span>                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">132 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">if</span> <span class=\"r7\">isinstance</span>(identifier, <span class=\"r7\">dict</span>):                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>133 <span class=\"r4\">\u2502   \u2502   </span>obj = <span class=\"r9\">deserialize(identifier)</span>                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">134 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">elif</span> <span class=\"r7\">isinstance</span>(identifier, <span class=\"r7\">str</span>):                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">135 </span><span class=\"r4\">\u2502   \u2502   </span>config = {<span class=\"r13\">&quot;class_name&quot;</span>: <span class=\"r7\">str</span>(identifier), <span class=\"r13\">&quot;config&quot;</span>: {}}                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">136 </span><span class=\"r4\">\u2502   \u2502   </span>obj = deserialize(config)                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/</span><span class=\"r5\">__init__.py</span>:75 in deseri <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 72 </span><span class=\"r24\">@keras_export</span>(<span class=\"r13\">&quot;keras.initializers.deserialize&quot;</span>)                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 73 </span><span class=\"r6\">def</span><span class=\"r14\"> </span><span class=\"r15\">deserialize</span>(config, custom_objects=<span class=\"r6\">None</span>):                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 74 </span><span class=\"r25\">\u2502   </span><span class=\"r13\">&quot;&quot;&quot;Returns a Keras initializer object via its configuration.&quot;&quot;&quot;</span>                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 75 <span class=\"r4\">\u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">serialization_lib.deserialize_keras_object(</span>                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 76 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">config,</span>                                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 77 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">module_objects=ALL_OBJECTS_DICT,</span>                                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 78 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">custom_objects=custom_objects,</span>                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/saving/</span><span class=\"r5\">serialization_lib.py</span>:596 in de <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">593 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>),                                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">594 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>custom_objects=custom_objects,                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">595 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>)                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>596 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">deserialize_keras_object(</span>                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">597 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">serialize_with_public_class(</span>                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">598 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">module_objects[config], inner_config=inner_config</span>                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">599 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">),</span>                                                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/saving/</span><span class=\"r5\">serialization_lib.py</span>:735 in de <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">732 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">try</span>:                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">733 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>instance = <span class=\"r7\">cls</span>.from_config(inner_config)                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">734 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">TypeError</span> <span class=\"r6\">as</span> e:                                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>735 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> </span><span class=\"r10\">TypeError</span><span class=\"r9\">(</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">736 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;{</span><span class=\"r10\">cls</span><span class=\"r11\">} could not be deserialized properly. Please&quot;</span>                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">737 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">&quot; ensure that components that are Python object&quot;</span>                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">738 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">&quot; instances (layers, models, etc.) returned by&quot;</span>                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f</span>\n<span class=\"r17\">TypeError: </span><span class=\"r5\">&lt;</span><span class=\"r24\">class</span><span class=\"r26\"> </span><span class=\"r19\">&#x27;keras.src.initializers.random_initializers.VarianceScaling&#x27;</span><span class=\"r5\">&gt;</span> could not be deserialized properly. Please ensure that components that are Python object instances <span class=\"r5\">(</span>layers, models, etc.<span class=\"r5\">)</span> returned by `<span class=\"r18\">get_config</span><span class=\"r5\">()</span>` are explicitly deserialized in the model&#x27;s `<span class=\"r18\">from_config</span><span class=\"r5\">()</span>` method.\n\n<span class=\"r13\">config</span>=<span class=\"r5\">{</span><span class=\"r19\">&#x27;module&#x27;</span>: <span class=\"r19\">&#x27;keras.initializers&#x27;</span>, <span class=\"r19\">&#x27;class_name&#x27;</span>: <span class=\"r19\">&#x27;VarianceScaling&#x27;</span>, <span class=\"r19\">&#x27;config&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;scale&#x27;</span>: <span class=\"r27\">2.0</span>, <span class=\"r19\">&#x27;mode&#x27;</span>: <span class=\"r19\">&#x27;fan_in&#x27;</span>, <span class=\"r19\">&#x27;distribution&#x27;</span>: <span class=\"r19\">&#x27;truncated_normal&#x27;</span>, <span class=\"r19\">&#x27;seed&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span><span class=\"r5\">}</span>, <span class=\"r19\">&#x27;registered_name&#x27;</span>: <span class=\"r28\">None</span><span class=\"r5\">}</span>.\n\nException encountered: <span class=\"r18\">VarianceScaling.__init__</span><span class=\"r5\">()</span> got an unexpected keyword argument <span class=\"r19\">&#x27;dtype&#x27;</span>\n\n<span class=\"r20\">During handling of the above exception, another exception occurred:</span>\n\n<span class=\"r1\">\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:777 in _test <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 774 </span><span class=\"r4\">\u2502   \u2502   </span>test_input = get_test_input_sample(model)                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 775 </span><span class=\"r4\">\u2502   \u2502   </span>expected = get_test_output_sample(model)                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 776 </span><span class=\"r4\">\u2502   \u2502   </span>                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 777 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">with</span> create_prediction_pipeline(                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 778 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>bioimageio_model=model, devices=devices, weight_format=weight_format          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 779 </span><span class=\"r4\">\u2502   \u2502   </span>) <span class=\"r6\">as</span> prediction_pipeline:                                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 780 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>results = prediction_pipeline.predict_sample_without_blocking(test_input)     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_prediction_pipeline.py</span>:371 in  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">368 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r13\">f&quot;deprecated create_prediction_pipeline kwargs: {</span><span class=\"r7\">set</span>(deprecated_kwargs)<span class=\"r13\">}&quot;</span>      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">369 </span><span class=\"r4\">\u2502   \u2502   </span>)                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">370 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>371 <span class=\"r4\">\u2502   </span>model_adapter = model_adapter <span class=\"r23\">or</span> <span class=\"r9\">create_model_adapter(</span>                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">372 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">model_description=bioimageio_model,</span>                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">373 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">devices=devices,</span>                                                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">374 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">weight_format_priority_order=weights_format </span><span class=\"r29\">and</span><span class=\"r9\"> (weights_format,),</span>                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/</span><span class=\"r5\">_model_adapter.py</span>:169  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">166 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">assert</span> errors                                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">167 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">if</span> <span class=\"r7\">len</span>(weight_format_priority_order) == <span class=\"r6\">1</span>:                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">168 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">assert</span> <span class=\"r7\">len</span>(errors) == <span class=\"r6\">1</span>                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>169 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> errors[</span><span class=\"r8\">0</span><span class=\"r9\">]</span>                                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">170 </span><span class=\"r4\">\u2502   \u2502   </span>                                                                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">171 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">172 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>msg = (                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/</span><span class=\"r5\">_model_adapter.py</span>:158  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">155 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">Exception</span>:                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">156 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">from</span><span class=\"r14\"> </span><span class=\"r30\">.tensorflow_backend</span><span class=\"r14\"> </span><span class=\"r6\">import</span> KerasModelAdapter                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">157 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>158 <span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> KerasModelAdapter(                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">159 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span>model_description=model_description, devices=devices               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">160 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>)                                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">161 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">Exception</span> <span class=\"r6\">as</span> e:                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/</span><span class=\"r5\">keras_backend.py</span>:80 in <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 77 </span><span class=\"r4\">\u2502   \u2502   </span>weight_reader = model_description.weights.keras_hdf5.get_reader()                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 78 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">if</span> weight_reader.suffix <span class=\"r23\">in</span> (<span class=\"r13\">&quot;.h5&quot;</span>, <span class=\"r13\">&quot;hdf5&quot;</span>):                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 79 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>h5_file = h5py.File(weight_reader, mode=<span class=\"r13\">&quot;r&quot;</span>)                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 80 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r7\">self</span>._network = <span class=\"r9\">legacy_h5_format.load_model_from_hdf5(h5_file)</span>                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 81 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 82 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">with</span> TemporaryDirectory() <span class=\"r6\">as</span> temp_dir:                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 83 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>temp_path = Path(temp_dir) / weight_reader.original_file_name              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">legacy_h5_format.py</span>:137 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">134 </span><span class=\"r4\">\u2502   \u2502   </span>legacy_scope = saving_options.keras_option_scope(use_legacy_config=<span class=\"r6\">True</span>)           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">135 </span><span class=\"r4\">\u2502   \u2502   </span>safe_mode_scope = serialization_lib.SafeModeScope(safe_mode)                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">136 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">with</span> legacy_scope, safe_mode_scope:                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>137 <span class=\"r4\">\u2502   \u2502   \u2502   </span>model = saving_utils.model_from_config(                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">138 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>model_config, custom_objects=custom_objects                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">139 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>)                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">140 </span>                                                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">saving_utils.py</span>:83 in m <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 80 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>function_dict[<span class=\"r13\">&quot;config&quot;</span>][<span class=\"r13\">&quot;closure&quot;</span>] = function_config[<span class=\"r6\">2</span>]                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 81 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>config[<span class=\"r13\">&quot;config&quot;</span>][<span class=\"r13\">&quot;function&quot;</span>] = function_dict                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 82 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 83 <span class=\"r4\">\u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">serialization.deserialize_keras_object(</span>                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 84 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">config,</span>                                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 85 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">module_objects=MODULE_OBJECTS.ALL_OBJECTS,</span>                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 86 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">custom_objects=custom_objects,</span>                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">serialization.py</span>:488 in <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">485 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>custom_objects = custom_objects <span class=\"r23\">or</span> {}                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">486 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">487 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">if</span> <span class=\"r13\">&quot;custom_objects&quot;</span> <span class=\"r23\">in</span> arg_spec.args:                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>488 <span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>deserialized_obj = <span class=\"r10\">cls</span><span class=\"r9\">.from_config(</span>                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">489 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">cls_config,</span>                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">490 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">custom_objects={</span>                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">491 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">**object_registration.GLOBAL_CUSTOM_OBJECTS,</span>                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/models/</span><span class=\"r5\">model.py</span>:660 in from_config    <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">657 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># (but not Functional subclasses with a custom __init__)</span>                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">658 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">from</span><span class=\"r14\"> </span><span class=\"r30\">keras.src.models.functional</span><span class=\"r14\"> </span><span class=\"r6\">import</span> functional_from_config                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">659 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>660 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">functional_from_config(</span>                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">661 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r10\">cls</span><span class=\"r9\">, config, custom_objects=custom_objects</span>                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">662 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">)</span>                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">663 </span>                                                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/models/</span><span class=\"r5\">functional.py</span>:558 in functiona <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">555 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">556 </span><span class=\"r4\">\u2502   </span><span class=\"r4\"># First, we create all layers and enqueue nodes to be processed</span>                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">557 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">for</span> layer_data <span class=\"r23\">in</span> functional_config[<span class=\"r13\">&quot;layers&quot;</span>]:                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>558 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">process_layer(layer_data)</span>                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">559 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">560 </span><span class=\"r4\">\u2502   </span><span class=\"r4\"># Then we process nodes in order of layer depth.</span>                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">561 </span><span class=\"r4\">\u2502   </span><span class=\"r4\"># Nodes that cannot yet be processed (if the inbound node</span>                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/models/</span><span class=\"r5\">functional.py</span>:521 in process_l <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">518 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">if</span> <span class=\"r13\">&quot;module&quot;</span> <span class=\"r23\">not</span> <span class=\"r23\">in</span> layer_data:                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">519 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># Legacy format deserialization (no &quot;module&quot; key)</span>                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">520 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># used for H5 and SavedModel formats</span>                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>521 <span class=\"r4\">\u2502   \u2502   \u2502   </span>layer = <span class=\"r9\">saving_utils.model_from_config(</span>                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">522 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">layer_data, custom_objects=custom_objects</span>                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">523 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">)</span>                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">524 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">saving_utils.py</span>:83 in m <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 80 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>function_dict[<span class=\"r13\">&quot;config&quot;</span>][<span class=\"r13\">&quot;closure&quot;</span>] = function_config[<span class=\"r6\">2</span>]                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 81 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>config[<span class=\"r13\">&quot;config&quot;</span>][<span class=\"r13\">&quot;function&quot;</span>] = function_dict                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 82 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 83 <span class=\"r4\">\u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">serialization.deserialize_keras_object(</span>                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 84 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">config,</span>                                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 85 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">module_objects=MODULE_OBJECTS.ALL_OBJECTS,</span>                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 86 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">custom_objects=custom_objects,</span>                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">serialization.py</span>:497 in <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">494 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>)                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">495 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">496 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">with</span> object_registration.CustomObjectScope(custom_objects):                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>497 <span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>deserialized_obj = <span class=\"r10\">cls</span><span class=\"r9\">.from_config(cls_config)</span>                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">498 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">499 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># Then `cls` may be a function returning a class.</span>                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">500 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># in this case by convention `config` holds</span>                                    <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/ops/</span><span class=\"r5\">operation.py</span>:257 in from_config   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">254 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">try</span>:                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">255 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r7\">cls</span>(**config)                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">256 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">Exception</span> <span class=\"r6\">as</span> e:                                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>257 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> </span><span class=\"r10\">TypeError</span><span class=\"r9\">(</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">258 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;Error when deserializing class &#x27;{</span><span class=\"r10\">cls</span><span class=\"r9\">.</span><span class=\"r21\">__name__</span><span class=\"r11\">}&#x27; using &quot;</span>                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">259 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;config={</span><span class=\"r9\">config</span><span class=\"r11\">}.\\n\\nException encountered: {</span><span class=\"r9\">e</span><span class=\"r11\">}&quot;</span>                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">260 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">)</span>                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f</span>\n<span class=\"r17\">TypeError: </span>Error when deserializing class <span class=\"r19\">&#x27;Conv2D&#x27;</span> using <span class=\"r13\">config</span>=<span class=\"r5\">{</span><span class=\"r19\">&#x27;name&#x27;</span>: <span class=\"r19\">&#x27;conv2d_105&#x27;</span>, <span class=\"r19\">&#x27;trainable&#x27;</span>: <span class=\"r31\">True</span>, <span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span>, <span class=\"r19\">&#x27;filters&#x27;</span>: <span class=\"r27\">16</span>, <span class=\"r19\">&#x27;kernel_size&#x27;</span>: <span class=\"r5\">[</span><span class=\"r27\">3</span>, <span class=\"r27\">3</span><span class=\"r5\">]</span>, <span class=\"r19\">&#x27;strides&#x27;</span>: <span class=\"r5\">[</span><span class=\"r27\">1</span>, <span class=\"r27\">1</span><span class=\"r5\">]</span>, <span class=\"r19\">&#x27;padding&#x27;</span>: <span class=\"r19\">&#x27;same&#x27;</span>, <span class=\"r19\">&#x27;data_format&#x27;</span>: <span class=\"r19\">&#x27;channels_last&#x27;</span>, <span class=\"r19\">&#x27;dilation_rate&#x27;</span>: <span class=\"r5\">[</span><span class=\"r27\">1</span>, <span class=\"r27\">1</span><span class=\"r5\">]</span>, <span class=\"r19\">&#x27;activation&#x27;</span>: <span class=\"r19\">&#x27;elu&#x27;</span>, <span class=\"r19\">&#x27;use_bias&#x27;</span>: <span class=\"r31\">True</span>, <span class=\"r19\">&#x27;kernel_initializer&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;class_name&#x27;</span>: <span class=\"r19\">&#x27;VarianceScaling&#x27;</span>, <span class=\"r19\">&#x27;config&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;scale&#x27;</span>: <span class=\"r27\">2.0</span>, <span class=\"r19\">&#x27;mode&#x27;</span>: <span class=\"r19\">&#x27;fan_in&#x27;</span>, <span class=\"r19\">&#x27;distribution&#x27;</span>: <span class=\"r19\">&#x27;truncated_normal&#x27;</span>, <span class=\"r19\">&#x27;seed&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span><span class=\"r5\">}}</span>, <span class=\"r19\">&#x27;bias_initializer&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;class_name&#x27;</span>: <span class=\"r19\">&#x27;Zeros&#x27;</span>, <span class=\"r19\">&#x27;config&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span><span class=\"r5\">}}</span>, <span class=\"r19\">&#x27;kernel_regularizer&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;bias_regularizer&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;activity_regularizer&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;kernel_constraint&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;bias_constraint&#x27;</span>: <span class=\"r28\">None</span><span class=\"r5\">}</span>.\n\nException encountered: <span class=\"r5\">&lt;</span><span class=\"r24\">class</span><span class=\"r26\"> </span><span class=\"r19\">&#x27;keras.src.initializers.random_initializers.VarianceScaling&#x27;</span><span class=\"r5\">&gt;</span> could not be deserialized properly. Please ensure that components that are Python object instances <span class=\"r5\">(</span>layers, models, etc.<span class=\"r5\">)</span> returned by `<span class=\"r18\">get_config</span><span class=\"r5\">()</span>` are explicitly deserialized in the model&#x27;s `<span class=\"r18\">from_config</span><span class=\"r5\">()</span>` method.\n\n<span class=\"r13\">config</span>=<span class=\"r5\">{</span><span class=\"r19\">&#x27;module&#x27;</span>: <span class=\"r19\">&#x27;keras.initializers&#x27;</span>, <span class=\"r19\">&#x27;class_name&#x27;</span>: <span class=\"r19\">&#x27;VarianceScaling&#x27;</span>, <span class=\"r19\">&#x27;config&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;scale&#x27;</span>: <span class=\"r27\">2.0</span>, <span class=\"r19\">&#x27;mode&#x27;</span>: <span class=\"r19\">&#x27;fan_in&#x27;</span>, <span class=\"r19\">&#x27;distribution&#x27;</span>: <span class=\"r19\">&#x27;truncated_normal&#x27;</span>, <span class=\"r19\">&#x27;seed&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span><span class=\"r5\">}</span>, <span class=\"r19\">&#x27;registered_name&#x27;</span>: <span class=\"r28\">None</span><span class=\"r5\">}</span>.\n\nException encountered: <span class=\"r18\">VarianceScaling.__init__</span><span class=\"r5\">()</span> got an unexpected keyword argument <span class=\"r19\">&#x27;dtype&#x27;</span>\n</code></pre>\n</body>\n</html>\n"}], "warnings": [], "context": null, "recommended_env": {"name": null, "channels": ["conda-forge", "nodefaults"], "dependencies": ["bioimageio.core", "pip", "tensorflow ==2.17"]}, "saved_conda_compare": "Success. All the packages in the specification file are present in the environment with matching version and build string.\n"}, {"name": "Successfully created `ModelDescr` instance.", "status": "passed", "loc": [], "errors": [], "warnings": [], "context": {"file_name": "rdf.yaml", "original_source_name": null, "perform_io_checks": true, "known_files": {"https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/U_Net_PhC_C2DL_PSC_segmentation.ipynb?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.tiff?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.tiff?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/binarize.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/per_sample_scale_range.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/README.md?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/keras_model.h5?version=v0": null, "keras_model.h5": "4f9f5dd9bbb0eb71eae15928abe24dcbba951c525373f862d19f33ce52d035e4", "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/tensorflow_saved_model_bundle.zip?version=v0": null, "tensorflow_saved_model_bundle.zip": "9edc07090be3522a6c9f169f5509e33ad036889093b37505885e1913862a0a38"}, "update_hashes": false, "root": "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files?version=v0"}, "recommended_env": null, "saved_conda_compare": null}, {"name": "bioimageio.spec format validation model 0.4.10", "status": "passed", "loc": [], "errors": [], "warnings": [], "context": {"file_name": "rdf.yaml", "original_source_name": null, "perform_io_checks": true, "known_files": {"https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.png?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/U_Net_PhC_C2DL_PSC_segmentation.ipynb?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.tiff?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.tiff?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/binarize.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/per_sample_scale_range.ijm?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/README.md?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/exampleImage.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/resultImage.npy?version=v0": null, "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/keras_model.h5?version=v0": null, "keras_model.h5": "4f9f5dd9bbb0eb71eae15928abe24dcbba951c525373f862d19f33ce52d035e4", "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files/tensorflow_saved_model_bundle.zip?version=v0": null, "tensorflow_saved_model_bundle.zip": "9edc07090be3522a6c9f169f5509e33ad036889093b37505885e1913862a0a38"}, "update_hashes": false, "root": "https://hypha.aicell.io/bioimage-io/artifacts/discreet-rooster/files?version=v0"}, "recommended_env": null, "saved_conda_compare": null}, {"name": "Reproduce test outputs from test inputs (keras_hdf5)", "status": "failed", "loc": ["weights", "keras_hdf5"], "errors": [{"loc": ["weights", "keras_hdf5"], "msg": "Error when deserializing class 'Conv2D' using config={'name': 'conv2d_105', 'trainable': True, 'dtype': 'float32', 'filters': 16, 'kernel_size': [3, 3], 'strides': [1, 1], 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': [1, 1], 'activation': 'elu', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {'dtype': 'float32'}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}.\n\nException encountered: <class 'keras.src.initializers.random_initializers.VarianceScaling'> could not be deserialized properly. Please ensure that components that are Python object instances (layers, models, etc.) returned by `get_config()` are explicitly deserialized in the model's `from_config()` method.\n\nconfig={'module': 'keras.initializers', 'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}, 'registered_name': None}.\n\nException encountered: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'", "type": "bioimageio.core", "with_traceback": true, "traceback_md": "\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/saving/serialization_lib.py:733 in de \u2502\n\u2502                                                                                                  \u2502\n\u2502   730 \u2502   safe_mode_scope = SafeModeScope(safe_mode)                                             \u2502\n\u2502   731 \u2502   with custom_obj_scope, safe_mode_scope:                                                \u2502\n\u2502   732 \u2502   \u2502   try:                                                                               \u2502\n\u2502 \u2771 733 \u2502   \u2502   \u2502   instance = cls.from_config(inner_config)                                       \u2502\n\u2502   734 \u2502   \u2502   except TypeError as e:                                                             \u2502\n\u2502   735 \u2502   \u2502   \u2502   raise TypeError(                                                               \u2502\n\u2502   736 \u2502   \u2502   \u2502   \u2502   f\"{cls} could not be deserialized properly. Please\"                        \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/initializer.py:81 in fro \u2502\n\u2502                                                                                                  \u2502\n\u2502   78 \u2502   \u2502   Returns:                                                                            \u2502\n\u2502   79 \u2502   \u2502   \u2502   An `Initializer` instance.                                                      \u2502\n\u2502   80 \u2502   \u2502   \"\"\"                                                                                 \u2502\n\u2502 \u2771 81 \u2502   \u2502   return cls(**config)                                                                \u2502\n\u2502   82 \u2502                                                                                           \u2502\n\u2502   83 \u2502   def clone(self):                                                                        \u2502\n\u2502   84 \u2502   \u2502   return self.__class__.from_config(self.get_config())                                \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nTypeError: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'\n\nDuring handling of the above exception, another exception occurred:\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/ops/operation.py:255 in from_config   \u2502\n\u2502                                                                                                  \u2502\n\u2502   252 \u2502   \u2502   \u2502   \u2502   policy = policy.name                                                       \u2502\n\u2502   253 \u2502   \u2502   \u2502   config[\"dtype\"] = policy                                                       \u2502\n\u2502   254 \u2502   \u2502   try:                                                                               \u2502\n\u2502 \u2771 255 \u2502   \u2502   \u2502   return cls(**config)                                                           \u2502\n\u2502   256 \u2502   \u2502   except Exception as e:                                                             \u2502\n\u2502   257 \u2502   \u2502   \u2502   raise TypeError(                                                               \u2502\n\u2502   258 \u2502   \u2502   \u2502   \u2502   f\"Error when deserializing class '{cls.__name__}' using \"                  \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/layers/convolutional/conv2d.py:118 in \u2502\n\u2502                                                                                                  \u2502\n\u2502   115 \u2502   \u2502   bias_constraint=None,                                                              \u2502\n\u2502   116 \u2502   \u2502   **kwargs,                                                                          \u2502\n\u2502   117 \u2502   ):                                                                                     \u2502\n\u2502 \u2771 118 \u2502   \u2502   super().__init__(                                                                  \u2502\n\u2502   119 \u2502   \u2502   \u2502   rank=2,                                                                        \u2502\n\u2502   120 \u2502   \u2502   \u2502   filters=filters,                                                               \u2502\n\u2502   121 \u2502   \u2502   \u2502   kernel_size=kernel_size,                                                       \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/layers/convolutional/base_conv.py:126 \u2502\n\u2502                                                                                                  \u2502\n\u2502   123 \u2502   \u2502   self.data_format = standardize_data_format(data_format)                            \u2502\n\u2502   124 \u2502   \u2502   self.activation = activations.get(activation)                                      \u2502\n\u2502   125 \u2502   \u2502   self.use_bias = use_bias                                                           \u2502\n\u2502 \u2771 126 \u2502   \u2502   self.kernel_initializer = initializers.get(kernel_initializer)                     \u2502\n\u2502   127 \u2502   \u2502   self.bias_initializer = initializers.get(bias_initializer)                         \u2502\n\u2502   128 \u2502   \u2502   self.kernel_regularizer = regularizers.get(kernel_regularizer)                     \u2502\n\u2502   129 \u2502   \u2502   self.bias_regularizer = regularizers.get(bias_regularizer)                         \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/__init__.py:133 in get   \u2502\n\u2502                                                                                                  \u2502\n\u2502   130 \u2502   if identifier is None:                                                                 \u2502\n\u2502   131 \u2502   \u2502   return None                                                                        \u2502\n\u2502   132 \u2502   if isinstance(identifier, dict):                                                       \u2502\n\u2502 \u2771 133 \u2502   \u2502   obj = deserialize(identifier)                                                      \u2502\n\u2502   134 \u2502   elif isinstance(identifier, str):                                                      \u2502\n\u2502   135 \u2502   \u2502   config = {\"class_name\": str(identifier), \"config\": {}}                             \u2502\n\u2502   136 \u2502   \u2502   obj = deserialize(config)                                                          \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/__init__.py:75 in deseri \u2502\n\u2502                                                                                                  \u2502\n\u2502    72 @keras_export(\"keras.initializers.deserialize\")                                            \u2502\n\u2502    73 def deserialize(config, custom_objects=None):                                              \u2502\n\u2502    74 \u2502   \"\"\"Returns a Keras initializer object via its configuration.\"\"\"                        \u2502\n\u2502 \u2771  75 \u2502   return serialization_lib.deserialize_keras_object(                                     \u2502\n\u2502    76 \u2502   \u2502   config,                                                                            \u2502\n\u2502    77 \u2502   \u2502   module_objects=ALL_OBJECTS_DICT,                                                   \u2502\n\u2502    78 \u2502   \u2502   custom_objects=custom_objects,                                                     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/saving/serialization_lib.py:596 in de \u2502\n\u2502                                                                                                  \u2502\n\u2502   593 \u2502   \u2502   \u2502   \u2502   \u2502   ),                                                                     \u2502\n\u2502   594 \u2502   \u2502   \u2502   \u2502   \u2502   custom_objects=custom_objects,                                         \u2502\n\u2502   595 \u2502   \u2502   \u2502   \u2502   )                                                                          \u2502\n\u2502 \u2771 596 \u2502   \u2502   \u2502   return deserialize_keras_object(                                               \u2502\n\u2502   597 \u2502   \u2502   \u2502   \u2502   serialize_with_public_class(                                               \u2502\n\u2502   598 \u2502   \u2502   \u2502   \u2502   \u2502   module_objects[config], inner_config=inner_config                      \u2502\n\u2502   599 \u2502   \u2502   \u2502   \u2502   ),                                                                         \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/saving/serialization_lib.py:735 in de \u2502\n\u2502                                                                                                  \u2502\n\u2502   732 \u2502   \u2502   try:                                                                               \u2502\n\u2502   733 \u2502   \u2502   \u2502   instance = cls.from_config(inner_config)                                       \u2502\n\u2502   734 \u2502   \u2502   except TypeError as e:                                                             \u2502\n\u2502 \u2771 735 \u2502   \u2502   \u2502   raise TypeError(                                                               \u2502\n\u2502   736 \u2502   \u2502   \u2502   \u2502   f\"{cls} could not be deserialized properly. Please\"                        \u2502\n\u2502   737 \u2502   \u2502   \u2502   \u2502   \" ensure that components that are Python object\"                           \u2502\n\u2502   738 \u2502   \u2502   \u2502   \u2502   \" instances (layers, models, etc.) returned by\"                            \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nTypeError: <class 'keras.src.initializers.random_initializers.VarianceScaling'> could not be deserialized properly. Please ensure that components that are Python object instances (layers, models, etc.) returned by `get_config()` are explicitly deserialized in the model's `from_config()` method.\n\nconfig={'module': 'keras.initializers', 'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}, 'registered_name': None}.\n\nException encountered: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'\n\nDuring handling of the above exception, another exception occurred:\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:777 in _test \u2502\n\u2502                                                                                                  \u2502\n\u2502    774 \u2502   \u2502   test_input = get_test_input_sample(model)                                         \u2502\n\u2502    775 \u2502   \u2502   expected = get_test_output_sample(model)                                          \u2502\n\u2502    776 \u2502   \u2502                                                                                     \u2502\n\u2502 \u2771  777 \u2502   \u2502   with create_prediction_pipeline(                                                  \u2502\n\u2502    778 \u2502   \u2502   \u2502   bioimageio_model=model, devices=devices, weight_format=weight_format          \u2502\n\u2502    779 \u2502   \u2502   ) as prediction_pipeline:                                                         \u2502\n\u2502    780 \u2502   \u2502   \u2502   results = prediction_pipeline.predict_sample_without_blocking(test_input)     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_prediction_pipeline.py:371 in  \u2502\n\u2502                                                                                                  \u2502\n\u2502   368 \u2502   \u2502   \u2502   f\"deprecated create_prediction_pipeline kwargs: {set(deprecated_kwargs)}\"      \u2502\n\u2502   369 \u2502   \u2502   )                                                                                  \u2502\n\u2502   370 \u2502                                                                                          \u2502\n\u2502 \u2771 371 \u2502   model_adapter = model_adapter or create_model_adapter(                                 \u2502\n\u2502   372 \u2502   \u2502   model_description=bioimageio_model,                                                \u2502\n\u2502   373 \u2502   \u2502   devices=devices,                                                                   \u2502\n\u2502   374 \u2502   \u2502   weight_format_priority_order=weights_format and (weights_format,),                 \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/_model_adapter.py:169  \u2502\n\u2502                                                                                                  \u2502\n\u2502   166 \u2502   \u2502   assert errors                                                                      \u2502\n\u2502   167 \u2502   \u2502   if len(weight_format_priority_order) == 1:                                         \u2502\n\u2502   168 \u2502   \u2502   \u2502   assert len(errors) == 1                                                        \u2502\n\u2502 \u2771 169 \u2502   \u2502   \u2502   raise errors[0]                                                                \u2502\n\u2502   170 \u2502   \u2502                                                                                      \u2502\n\u2502   171 \u2502   \u2502   else:                                                                              \u2502\n\u2502   172 \u2502   \u2502   \u2502   msg = (                                                                        \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/_model_adapter.py:158  \u2502\n\u2502                                                                                                  \u2502\n\u2502   155 \u2502   \u2502   \u2502   \u2502   \u2502   except Exception:                                                      \u2502\n\u2502   156 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   from .tensorflow_backend import KerasModelAdapter                  \u2502\n\u2502   157 \u2502   \u2502   \u2502   \u2502   \u2502                                                                          \u2502\n\u2502 \u2771 158 \u2502   \u2502   \u2502   \u2502   \u2502   return KerasModelAdapter(                                              \u2502\n\u2502   159 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   model_description=model_description, devices=devices               \u2502\n\u2502   160 \u2502   \u2502   \u2502   \u2502   \u2502   )                                                                      \u2502\n\u2502   161 \u2502   \u2502   \u2502   \u2502   except Exception as e:                                                     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/keras_backend.py:80 in \u2502\n\u2502                                                                                                  \u2502\n\u2502    77 \u2502   \u2502   weight_reader = model_description.weights.keras_hdf5.get_reader()                  \u2502\n\u2502    78 \u2502   \u2502   if weight_reader.suffix in (\".h5\", \"hdf5\"):                                        \u2502\n\u2502    79 \u2502   \u2502   \u2502   h5_file = h5py.File(weight_reader, mode=\"r\")                                   \u2502\n\u2502 \u2771  80 \u2502   \u2502   \u2502   self._network = legacy_h5_format.load_model_from_hdf5(h5_file)                 \u2502\n\u2502    81 \u2502   \u2502   else:                                                                              \u2502\n\u2502    82 \u2502   \u2502   \u2502   with TemporaryDirectory() as temp_dir:                                         \u2502\n\u2502    83 \u2502   \u2502   \u2502   \u2502   temp_path = Path(temp_dir) / weight_reader.original_file_name              \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/legacy_h5_format.py:137 \u2502\n\u2502                                                                                                  \u2502\n\u2502   134 \u2502   \u2502   legacy_scope = saving_options.keras_option_scope(use_legacy_config=True)           \u2502\n\u2502   135 \u2502   \u2502   safe_mode_scope = serialization_lib.SafeModeScope(safe_mode)                       \u2502\n\u2502   136 \u2502   \u2502   with legacy_scope, safe_mode_scope:                                                \u2502\n\u2502 \u2771 137 \u2502   \u2502   \u2502   model = saving_utils.model_from_config(                                        \u2502\n\u2502   138 \u2502   \u2502   \u2502   \u2502   model_config, custom_objects=custom_objects                                \u2502\n\u2502   139 \u2502   \u2502   \u2502   )                                                                              \u2502\n\u2502   140                                                                                            \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/saving_utils.py:83 in m \u2502\n\u2502                                                                                                  \u2502\n\u2502    80 \u2502   \u2502   \u2502   function_dict[\"config\"][\"closure\"] = function_config[2]                        \u2502\n\u2502    81 \u2502   \u2502   \u2502   config[\"config\"][\"function\"] = function_dict                                   \u2502\n\u2502    82 \u2502                                                                                          \u2502\n\u2502 \u2771  83 \u2502   return serialization.deserialize_keras_object(                                         \u2502\n\u2502    84 \u2502   \u2502   config,                                                                            \u2502\n\u2502    85 \u2502   \u2502   module_objects=MODULE_OBJECTS.ALL_OBJECTS,                                         \u2502\n\u2502    86 \u2502   \u2502   custom_objects=custom_objects,                                                     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/serialization.py:488 in \u2502\n\u2502                                                                                                  \u2502\n\u2502   485 \u2502   \u2502   \u2502   custom_objects = custom_objects or {}                                          \u2502\n\u2502   486 \u2502   \u2502   \u2502                                                                                  \u2502\n\u2502   487 \u2502   \u2502   \u2502   if \"custom_objects\" in arg_spec.args:                                          \u2502\n\u2502 \u2771 488 \u2502   \u2502   \u2502   \u2502   deserialized_obj = cls.from_config(                                        \u2502\n\u2502   489 \u2502   \u2502   \u2502   \u2502   \u2502   cls_config,                                                            \u2502\n\u2502   490 \u2502   \u2502   \u2502   \u2502   \u2502   custom_objects={                                                       \u2502\n\u2502   491 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   **object_registration.GLOBAL_CUSTOM_OBJECTS,                       \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/models/model.py:660 in from_config    \u2502\n\u2502                                                                                                  \u2502\n\u2502   657 \u2502   \u2502   \u2502   # (but not Functional subclasses with a custom __init__)                       \u2502\n\u2502   658 \u2502   \u2502   \u2502   from keras.src.models.functional import functional_from_config                 \u2502\n\u2502   659 \u2502   \u2502   \u2502                                                                                  \u2502\n\u2502 \u2771 660 \u2502   \u2502   \u2502   return functional_from_config(                                                 \u2502\n\u2502   661 \u2502   \u2502   \u2502   \u2502   cls, config, custom_objects=custom_objects                                 \u2502\n\u2502   662 \u2502   \u2502   \u2502   )                                                                              \u2502\n\u2502   663                                                                                            \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/models/functional.py:558 in functiona \u2502\n\u2502                                                                                                  \u2502\n\u2502   555 \u2502                                                                                          \u2502\n\u2502   556 \u2502   # First, we create all layers and enqueue nodes to be processed                        \u2502\n\u2502   557 \u2502   for layer_data in functional_config[\"layers\"]:                                         \u2502\n\u2502 \u2771 558 \u2502   \u2502   process_layer(layer_data)                                                          \u2502\n\u2502   559 \u2502                                                                                          \u2502\n\u2502   560 \u2502   # Then we process nodes in order of layer depth.                                       \u2502\n\u2502   561 \u2502   # Nodes that cannot yet be processed (if the inbound node                              \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/models/functional.py:521 in process_l \u2502\n\u2502                                                                                                  \u2502\n\u2502   518 \u2502   \u2502   if \"module\" not in layer_data:                                                     \u2502\n\u2502   519 \u2502   \u2502   \u2502   # Legacy format deserialization (no \"module\" key)                              \u2502\n\u2502   520 \u2502   \u2502   \u2502   # used for H5 and SavedModel formats                                           \u2502\n\u2502 \u2771 521 \u2502   \u2502   \u2502   layer = saving_utils.model_from_config(                                        \u2502\n\u2502   522 \u2502   \u2502   \u2502   \u2502   layer_data, custom_objects=custom_objects                                  \u2502\n\u2502   523 \u2502   \u2502   \u2502   )                                                                              \u2502\n\u2502   524 \u2502   \u2502   else:                                                                              \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/saving_utils.py:83 in m \u2502\n\u2502                                                                                                  \u2502\n\u2502    80 \u2502   \u2502   \u2502   function_dict[\"config\"][\"closure\"] = function_config[2]                        \u2502\n\u2502    81 \u2502   \u2502   \u2502   config[\"config\"][\"function\"] = function_dict                                   \u2502\n\u2502    82 \u2502                                                                                          \u2502\n\u2502 \u2771  83 \u2502   return serialization.deserialize_keras_object(                                         \u2502\n\u2502    84 \u2502   \u2502   config,                                                                            \u2502\n\u2502    85 \u2502   \u2502   module_objects=MODULE_OBJECTS.ALL_OBJECTS,                                         \u2502\n\u2502    86 \u2502   \u2502   custom_objects=custom_objects,                                                     \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/serialization.py:497 in \u2502\n\u2502                                                                                                  \u2502\n\u2502   494 \u2502   \u2502   \u2502   \u2502   )                                                                          \u2502\n\u2502   495 \u2502   \u2502   \u2502   else:                                                                          \u2502\n\u2502   496 \u2502   \u2502   \u2502   \u2502   with object_registration.CustomObjectScope(custom_objects):                \u2502\n\u2502 \u2771 497 \u2502   \u2502   \u2502   \u2502   \u2502   deserialized_obj = cls.from_config(cls_config)                         \u2502\n\u2502   498 \u2502   \u2502   else:                                                                              \u2502\n\u2502   499 \u2502   \u2502   \u2502   # Then `cls` may be a function returning a class.                              \u2502\n\u2502   500 \u2502   \u2502   \u2502   # in this case by convention `config` holds                                    \u2502\n\u2502                                                                                                  \u2502\n\u2502 /home/runner/.local/lib/python3.12/site-packages/keras/src/ops/operation.py:257 in from_config   \u2502\n\u2502                                                                                                  \u2502\n\u2502   254 \u2502   \u2502   try:                                                                               \u2502\n\u2502   255 \u2502   \u2502   \u2502   return cls(**config)                                                           \u2502\n\u2502   256 \u2502   \u2502   except Exception as e:                                                             \u2502\n\u2502 \u2771 257 \u2502   \u2502   \u2502   raise TypeError(                                                               \u2502\n\u2502   258 \u2502   \u2502   \u2502   \u2502   f\"Error when deserializing class '{cls.__name__}' using \"                  \u2502\n\u2502   259 \u2502   \u2502   \u2502   \u2502   f\"config={config}.\\n\\nException encountered: {e}\"                          \u2502\n\u2502   260 \u2502   \u2502   \u2502   )                                                                              \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nTypeError: Error when deserializing class 'Conv2D' using config={'name': 'conv2d_105', 'trainable': True, 'dtype': 'float32', 'filters': 16, 'kernel_size': [3, 3], 'strides': [1, 1], 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': [1, 1], 'activation': 'elu', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {'dtype': 'float32'}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}.\n\nException encountered: <class 'keras.src.initializers.random_initializers.VarianceScaling'> could not be deserialized properly. Please ensure that components that are Python object instances (layers, models, etc.) returned by `get_config()` are explicitly deserialized in the model's `from_config()` method.\n\nconfig={'module': 'keras.initializers', 'class_name': 'VarianceScaling', 'config': {'scale': 2.0, 'mode': 'fan_in', 'distribution': 'truncated_normal', 'seed': None, 'dtype': 'float32'}, 'registered_name': None}.\n\nException encountered: VarianceScaling.__init__() got an unexpected keyword argument 'dtype'\n", "traceback_html": "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<style>\n.r1 {color: #800000; text-decoration-color: #800000}\n.r2 {color: #800000; text-decoration-color: #800000; font-weight: bold}\n.r3 {color: #bf7f7f; text-decoration-color: #bf7f7f; font-weight: bold}\n.r4 {color: #7f7f7f; text-decoration-color: #7f7f7f}\n.r5 {font-weight: bold}\n.r6 {color: #0000ff; text-decoration-color: #0000ff}\n.r7 {color: #00ffff; text-decoration-color: #00ffff}\n.r8 {color: #0000ff; text-decoration-color: #0000ff; font-weight: bold; text-decoration: underline}\n.r9 {font-weight: bold; text-decoration: underline}\n.r10 {color: #00ffff; text-decoration-color: #00ffff; font-weight: bold; text-decoration: underline}\n.r11 {color: #808000; text-decoration-color: #808000; font-weight: bold; text-decoration: underline}\n.r12 {color: #bfbf7f; text-decoration-color: #bfbf7f}\n.r13 {color: #808000; text-decoration-color: #808000}\n.r14 {color: #808080; text-decoration-color: #808080}\n.r15 {color: #00ff00; text-decoration-color: #00ff00}\n.r16 {color: #ff0000; text-decoration-color: #ff0000}\n.r17 {color: #ff0000; text-decoration-color: #ff0000; font-weight: bold}\n.r18 {color: #800080; text-decoration-color: #800080; font-weight: bold}\n.r19 {color: #008000; text-decoration-color: #008000}\n.r20 {font-style: italic}\n.r21 {color: #ff0000; text-decoration-color: #ff0000; font-weight: bold; text-decoration: underline}\n.r22 {color: #00ff00; text-decoration-color: #00ff00; font-weight: bold; text-decoration: underline}\n.r23 {color: #ff00ff; text-decoration-color: #ff00ff}\n.r24 {color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold}\n.r25 {color: #bfbfbf; text-decoration-color: #bfbfbf}\n.r26 {color: #000000; text-decoration-color: #000000}\n.r27 {color: #008080; text-decoration-color: #008080; font-weight: bold}\n.r28 {color: #800080; text-decoration-color: #800080; font-style: italic}\n.r29 {color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold; text-decoration: underline}\n.r30 {color: #00ffff; text-decoration-color: #00ffff; text-decoration: underline}\n.r31 {color: #00ff00; text-decoration-color: #00ff00; font-style: italic}\nbody {\n    color: #000000;\n    background-color: #ffffff;\n}\n</style>\n</head>\n<body>\n    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><code style=\"font-family:inherit\"><span class=\"r1\">\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/saving/</span><span class=\"r5\">serialization_lib.py</span>:733 in de <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">730 </span><span class=\"r4\">\u2502   </span>safe_mode_scope = SafeModeScope(safe_mode)                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">731 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">with</span> custom_obj_scope, safe_mode_scope:                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">732 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">try</span>:                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>733 <span class=\"r4\">\u2502   \u2502   \u2502   </span>instance = <span class=\"r7\">cls</span>.from_config(inner_config)                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">734 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">TypeError</span> <span class=\"r6\">as</span> e:                                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">735 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> </span><span class=\"r10\">TypeError</span><span class=\"r9\">(</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">736 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;{</span><span class=\"r10\">cls</span><span class=\"r11\">} could not be deserialized properly. Please&quot;</span>                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/</span><span class=\"r5\">initializer.py</span>:81 in fro <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">78 </span><span class=\"r12\">\u2502   \u2502   </span><span class=\"r13\">Returns:</span>                                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">79 </span><span class=\"r12\">\u2502   \u2502   \u2502   </span><span class=\"r13\">An `Initializer` instance.</span>                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">80 </span><span class=\"r12\">\u2502   \u2502   </span><span class=\"r13\">&quot;&quot;&quot;</span>                                                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>81 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r10\">cls</span><span class=\"r9\">(**config)</span>                                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">82 </span><span class=\"r4\">\u2502   </span>                                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">83 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">def</span><span class=\"r14\"> </span><span class=\"r15\">clone</span>(<span class=\"r7\">self</span>):                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">84 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r7\">self</span>.<span class=\"r16\">__class__</span>.from_config(<span class=\"r7\">self</span>.get_config())                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f</span>\n<span class=\"r17\">TypeError: </span><span class=\"r18\">VarianceScaling.__init__</span><span class=\"r5\">()</span> got an unexpected keyword argument <span class=\"r19\">&#x27;dtype&#x27;</span>\n\n<span class=\"r20\">During handling of the above exception, another exception occurred:</span>\n\n<span class=\"r1\">\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/ops/</span><span class=\"r5\">operation.py</span>:255 in from_config   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">252 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>policy = policy.name                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">253 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>config[<span class=\"r13\">&quot;dtype&quot;</span>] = policy                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">254 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">try</span>:                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>255 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r7\">cls</span>(**config)                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">256 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">Exception</span> <span class=\"r6\">as</span> e:                                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">257 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> </span><span class=\"r10\">TypeError</span><span class=\"r9\">(</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">258 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;Error when deserializing class &#x27;{</span><span class=\"r10\">cls</span><span class=\"r9\">.</span><span class=\"r21\">__name__</span><span class=\"r11\">}&#x27; using &quot;</span>                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/layers/convolutional/</span><span class=\"r5\">conv2d.py</span>:118 in <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">115 </span><span class=\"r4\">\u2502   \u2502   </span>bias_constraint=<span class=\"r6\">None</span>,                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">116 </span><span class=\"r4\">\u2502   \u2502   </span>**kwargs,                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">117 </span><span class=\"r4\">\u2502   </span>):                                                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>118 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r10\">super</span><span class=\"r9\">().</span><span class=\"r22\">__init__</span><span class=\"r9\">(</span>                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">119 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">rank=</span><span class=\"r8\">2</span><span class=\"r9\">,</span>                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">120 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">filters=filters,</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">121 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">kernel_size=kernel_size,</span>                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/layers/convolutional/</span><span class=\"r5\">base_conv.py</span>:126 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">123 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.data_format = standardize_data_format(data_format)                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">124 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.activation = activations.get(activation)                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">125 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.use_bias = use_bias                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>126 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.kernel_initializer = <span class=\"r9\">initializers.get(kernel_initializer)</span>                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">127 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.bias_initializer = initializers.get(bias_initializer)                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">128 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.kernel_regularizer = regularizers.get(kernel_regularizer)                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">129 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r7\">self</span>.bias_regularizer = regularizers.get(bias_regularizer)                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/</span><span class=\"r5\">__init__.py</span>:133 in get   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">130 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">if</span> identifier <span class=\"r23\">is</span> <span class=\"r6\">None</span>:                                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">131 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r6\">None</span>                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">132 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">if</span> <span class=\"r7\">isinstance</span>(identifier, <span class=\"r7\">dict</span>):                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>133 <span class=\"r4\">\u2502   \u2502   </span>obj = <span class=\"r9\">deserialize(identifier)</span>                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">134 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">elif</span> <span class=\"r7\">isinstance</span>(identifier, <span class=\"r7\">str</span>):                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">135 </span><span class=\"r4\">\u2502   \u2502   </span>config = {<span class=\"r13\">&quot;class_name&quot;</span>: <span class=\"r7\">str</span>(identifier), <span class=\"r13\">&quot;config&quot;</span>: {}}                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">136 </span><span class=\"r4\">\u2502   \u2502   </span>obj = deserialize(config)                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/initializers/</span><span class=\"r5\">__init__.py</span>:75 in deseri <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 72 </span><span class=\"r24\">@keras_export</span>(<span class=\"r13\">&quot;keras.initializers.deserialize&quot;</span>)                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 73 </span><span class=\"r6\">def</span><span class=\"r14\"> </span><span class=\"r15\">deserialize</span>(config, custom_objects=<span class=\"r6\">None</span>):                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 74 </span><span class=\"r25\">\u2502   </span><span class=\"r13\">&quot;&quot;&quot;Returns a Keras initializer object via its configuration.&quot;&quot;&quot;</span>                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 75 <span class=\"r4\">\u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">serialization_lib.deserialize_keras_object(</span>                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 76 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">config,</span>                                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 77 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">module_objects=ALL_OBJECTS_DICT,</span>                                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 78 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">custom_objects=custom_objects,</span>                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/saving/</span><span class=\"r5\">serialization_lib.py</span>:596 in de <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">593 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>),                                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">594 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>custom_objects=custom_objects,                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">595 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>)                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>596 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">deserialize_keras_object(</span>                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">597 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">serialize_with_public_class(</span>                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">598 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">module_objects[config], inner_config=inner_config</span>                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">599 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">),</span>                                                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/saving/</span><span class=\"r5\">serialization_lib.py</span>:735 in de <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">732 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">try</span>:                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">733 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>instance = <span class=\"r7\">cls</span>.from_config(inner_config)                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">734 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">TypeError</span> <span class=\"r6\">as</span> e:                                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>735 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> </span><span class=\"r10\">TypeError</span><span class=\"r9\">(</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">736 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;{</span><span class=\"r10\">cls</span><span class=\"r11\">} could not be deserialized properly. Please&quot;</span>                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">737 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">&quot; ensure that components that are Python object&quot;</span>                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">738 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">&quot; instances (layers, models, etc.) returned by&quot;</span>                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f</span>\n<span class=\"r17\">TypeError: </span><span class=\"r5\">&lt;</span><span class=\"r24\">class</span><span class=\"r26\"> </span><span class=\"r19\">&#x27;keras.src.initializers.random_initializers.VarianceScaling&#x27;</span><span class=\"r5\">&gt;</span> could not be deserialized properly. Please ensure that components that are Python object instances <span class=\"r5\">(</span>layers, models, etc.<span class=\"r5\">)</span> returned by `<span class=\"r18\">get_config</span><span class=\"r5\">()</span>` are explicitly deserialized in the model&#x27;s `<span class=\"r18\">from_config</span><span class=\"r5\">()</span>` method.\n\n<span class=\"r13\">config</span>=<span class=\"r5\">{</span><span class=\"r19\">&#x27;module&#x27;</span>: <span class=\"r19\">&#x27;keras.initializers&#x27;</span>, <span class=\"r19\">&#x27;class_name&#x27;</span>: <span class=\"r19\">&#x27;VarianceScaling&#x27;</span>, <span class=\"r19\">&#x27;config&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;scale&#x27;</span>: <span class=\"r27\">2.0</span>, <span class=\"r19\">&#x27;mode&#x27;</span>: <span class=\"r19\">&#x27;fan_in&#x27;</span>, <span class=\"r19\">&#x27;distribution&#x27;</span>: <span class=\"r19\">&#x27;truncated_normal&#x27;</span>, <span class=\"r19\">&#x27;seed&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span><span class=\"r5\">}</span>, <span class=\"r19\">&#x27;registered_name&#x27;</span>: <span class=\"r28\">None</span><span class=\"r5\">}</span>.\n\nException encountered: <span class=\"r18\">VarianceScaling.__init__</span><span class=\"r5\">()</span> got an unexpected keyword argument <span class=\"r19\">&#x27;dtype&#x27;</span>\n\n<span class=\"r20\">During handling of the above exception, another exception occurred:</span>\n\n<span class=\"r1\">\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:777 in _test <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 774 </span><span class=\"r4\">\u2502   \u2502   </span>test_input = get_test_input_sample(model)                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 775 </span><span class=\"r4\">\u2502   \u2502   </span>expected = get_test_output_sample(model)                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 776 </span><span class=\"r4\">\u2502   \u2502   </span>                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 777 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">with</span> create_prediction_pipeline(                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 778 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>bioimageio_model=model, devices=devices, weight_format=weight_format          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 779 </span><span class=\"r4\">\u2502   \u2502   </span>) <span class=\"r6\">as</span> prediction_pipeline:                                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 780 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>results = prediction_pipeline.predict_sample_without_blocking(test_input)     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_prediction_pipeline.py</span>:371 in  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">368 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r13\">f&quot;deprecated create_prediction_pipeline kwargs: {</span><span class=\"r7\">set</span>(deprecated_kwargs)<span class=\"r13\">}&quot;</span>      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">369 </span><span class=\"r4\">\u2502   \u2502   </span>)                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">370 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>371 <span class=\"r4\">\u2502   </span>model_adapter = model_adapter <span class=\"r23\">or</span> <span class=\"r9\">create_model_adapter(</span>                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">372 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">model_description=bioimageio_model,</span>                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">373 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">devices=devices,</span>                                                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">374 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">weight_format_priority_order=weights_format </span><span class=\"r29\">and</span><span class=\"r9\"> (weights_format,),</span>                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/</span><span class=\"r5\">_model_adapter.py</span>:169  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">166 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">assert</span> errors                                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">167 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">if</span> <span class=\"r7\">len</span>(weight_format_priority_order) == <span class=\"r6\">1</span>:                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">168 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">assert</span> <span class=\"r7\">len</span>(errors) == <span class=\"r6\">1</span>                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>169 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> errors[</span><span class=\"r8\">0</span><span class=\"r9\">]</span>                                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">170 </span><span class=\"r4\">\u2502   \u2502   </span>                                                                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">171 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">172 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>msg = (                                                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/</span><span class=\"r5\">_model_adapter.py</span>:158  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">155 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">Exception</span>:                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">156 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">from</span><span class=\"r14\"> </span><span class=\"r30\">.tensorflow_backend</span><span class=\"r14\"> </span><span class=\"r6\">import</span> KerasModelAdapter                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">157 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>158 <span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> KerasModelAdapter(                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">159 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span>model_description=model_description, devices=devices               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">160 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>)                                                                      <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">161 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">Exception</span> <span class=\"r6\">as</span> e:                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/backends/</span><span class=\"r5\">keras_backend.py</span>:80 in <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 77 </span><span class=\"r4\">\u2502   \u2502   </span>weight_reader = model_description.weights.keras_hdf5.get_reader()                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 78 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">if</span> weight_reader.suffix <span class=\"r23\">in</span> (<span class=\"r13\">&quot;.h5&quot;</span>, <span class=\"r13\">&quot;hdf5&quot;</span>):                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 79 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>h5_file = h5py.File(weight_reader, mode=<span class=\"r13\">&quot;r&quot;</span>)                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 80 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r7\">self</span>._network = <span class=\"r9\">legacy_h5_format.load_model_from_hdf5(h5_file)</span>                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 81 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 82 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">with</span> TemporaryDirectory() <span class=\"r6\">as</span> temp_dir:                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 83 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>temp_path = Path(temp_dir) / weight_reader.original_file_name              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">legacy_h5_format.py</span>:137 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">134 </span><span class=\"r4\">\u2502   \u2502   </span>legacy_scope = saving_options.keras_option_scope(use_legacy_config=<span class=\"r6\">True</span>)           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">135 </span><span class=\"r4\">\u2502   \u2502   </span>safe_mode_scope = serialization_lib.SafeModeScope(safe_mode)                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">136 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">with</span> legacy_scope, safe_mode_scope:                                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>137 <span class=\"r4\">\u2502   \u2502   \u2502   </span>model = saving_utils.model_from_config(                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">138 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>model_config, custom_objects=custom_objects                                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">139 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>)                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">140 </span>                                                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">saving_utils.py</span>:83 in m <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 80 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>function_dict[<span class=\"r13\">&quot;config&quot;</span>][<span class=\"r13\">&quot;closure&quot;</span>] = function_config[<span class=\"r6\">2</span>]                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 81 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>config[<span class=\"r13\">&quot;config&quot;</span>][<span class=\"r13\">&quot;function&quot;</span>] = function_dict                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 82 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 83 <span class=\"r4\">\u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">serialization.deserialize_keras_object(</span>                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 84 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">config,</span>                                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 85 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">module_objects=MODULE_OBJECTS.ALL_OBJECTS,</span>                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 86 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">custom_objects=custom_objects,</span>                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">serialization.py</span>:488 in <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">485 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>custom_objects = custom_objects <span class=\"r23\">or</span> {}                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">486 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">487 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">if</span> <span class=\"r13\">&quot;custom_objects&quot;</span> <span class=\"r23\">in</span> arg_spec.args:                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>488 <span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>deserialized_obj = <span class=\"r10\">cls</span><span class=\"r9\">.from_config(</span>                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">489 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">cls_config,</span>                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">490 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">custom_objects={</span>                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">491 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">**object_registration.GLOBAL_CUSTOM_OBJECTS,</span>                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/models/</span><span class=\"r5\">model.py</span>:660 in from_config    <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">657 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># (but not Functional subclasses with a custom __init__)</span>                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">658 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">from</span><span class=\"r14\"> </span><span class=\"r30\">keras.src.models.functional</span><span class=\"r14\"> </span><span class=\"r6\">import</span> functional_from_config                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">659 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>660 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">functional_from_config(</span>                                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">661 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r10\">cls</span><span class=\"r9\">, config, custom_objects=custom_objects</span>                                 <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">662 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">)</span>                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">663 </span>                                                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/models/</span><span class=\"r5\">functional.py</span>:558 in functiona <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">555 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">556 </span><span class=\"r4\">\u2502   </span><span class=\"r4\"># First, we create all layers and enqueue nodes to be processed</span>                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">557 </span><span class=\"r4\">\u2502   </span><span class=\"r6\">for</span> layer_data <span class=\"r23\">in</span> functional_config[<span class=\"r13\">&quot;layers&quot;</span>]:                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>558 <span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">process_layer(layer_data)</span>                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">559 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">560 </span><span class=\"r4\">\u2502   </span><span class=\"r4\"># Then we process nodes in order of layer depth.</span>                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">561 </span><span class=\"r4\">\u2502   </span><span class=\"r4\"># Nodes that cannot yet be processed (if the inbound node</span>                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/models/</span><span class=\"r5\">functional.py</span>:521 in process_l <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">518 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">if</span> <span class=\"r13\">&quot;module&quot;</span> <span class=\"r23\">not</span> <span class=\"r23\">in</span> layer_data:                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">519 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># Legacy format deserialization (no &quot;module&quot; key)</span>                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">520 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># used for H5 and SavedModel formats</span>                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>521 <span class=\"r4\">\u2502   \u2502   \u2502   </span>layer = <span class=\"r9\">saving_utils.model_from_config(</span>                                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">522 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r9\">layer_data, custom_objects=custom_objects</span>                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">523 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">)</span>                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">524 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">saving_utils.py</span>:83 in m <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 80 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>function_dict[<span class=\"r13\">&quot;config&quot;</span>][<span class=\"r13\">&quot;closure&quot;</span>] = function_config[<span class=\"r6\">2</span>]                        <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 81 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span>config[<span class=\"r13\">&quot;config&quot;</span>][<span class=\"r13\">&quot;function&quot;</span>] = function_dict                                   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 82 </span><span class=\"r4\">\u2502   </span>                                                                                       <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span> 83 <span class=\"r4\">\u2502   </span><span class=\"r6\">return</span> <span class=\"r9\">serialization.deserialize_keras_object(</span>                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 84 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">config,</span>                                                                            <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 85 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">module_objects=MODULE_OBJECTS.ALL_OBJECTS,</span>                                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\"> 86 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r9\">custom_objects=custom_objects,</span>                                                     <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/legacy/saving/</span><span class=\"r5\">serialization.py</span>:497 in <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">494 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span>)                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">495 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">496 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r6\">with</span> object_registration.CustomObjectScope(custom_objects):                <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>497 <span class=\"r4\">\u2502   \u2502   \u2502   \u2502   \u2502   </span>deserialized_obj = <span class=\"r10\">cls</span><span class=\"r9\">.from_config(cls_config)</span>                         <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">498 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">else</span>:                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">499 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># Then `cls` may be a function returning a class.</span>                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">500 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r4\"># in this case by convention `config` holds</span>                                    <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/keras/src/ops/</span><span class=\"r5\">operation.py</span>:257 in from_config   <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>                                                                                                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">254 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">try</span>:                                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">255 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r6\">return</span> <span class=\"r7\">cls</span>(**config)                                                           <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">256 </span><span class=\"r4\">\u2502   \u2502   </span><span class=\"r6\">except</span> <span class=\"r7\">Exception</span> <span class=\"r6\">as</span> e:                                                             <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span> <span class=\"r1\">\u2771 </span>257 <span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r8\">raise</span><span class=\"r9\"> </span><span class=\"r10\">TypeError</span><span class=\"r9\">(</span>                                                               <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">258 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;Error when deserializing class &#x27;{</span><span class=\"r10\">cls</span><span class=\"r9\">.</span><span class=\"r21\">__name__</span><span class=\"r11\">}&#x27; using &quot;</span>                  <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">259 </span><span class=\"r4\">\u2502   \u2502   \u2502   \u2502   </span><span class=\"r11\">f&quot;config={</span><span class=\"r9\">config</span><span class=\"r11\">}.\\n\\nException encountered: {</span><span class=\"r9\">e</span><span class=\"r11\">}&quot;</span>                          <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2502</span>   <span class=\"r4\">260 </span><span class=\"r4\">\u2502   \u2502   \u2502   </span><span class=\"r9\">)</span>                                                                              <span class=\"r1\">\u2502</span>\n<span class=\"r1\">\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f</span>\n<span class=\"r17\">TypeError: </span>Error when deserializing class <span class=\"r19\">&#x27;Conv2D&#x27;</span> using <span class=\"r13\">config</span>=<span class=\"r5\">{</span><span class=\"r19\">&#x27;name&#x27;</span>: <span class=\"r19\">&#x27;conv2d_105&#x27;</span>, <span class=\"r19\">&#x27;trainable&#x27;</span>: <span class=\"r31\">True</span>, <span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span>, <span class=\"r19\">&#x27;filters&#x27;</span>: <span class=\"r27\">16</span>, <span class=\"r19\">&#x27;kernel_size&#x27;</span>: <span class=\"r5\">[</span><span class=\"r27\">3</span>, <span class=\"r27\">3</span><span class=\"r5\">]</span>, <span class=\"r19\">&#x27;strides&#x27;</span>: <span class=\"r5\">[</span><span class=\"r27\">1</span>, <span class=\"r27\">1</span><span class=\"r5\">]</span>, <span class=\"r19\">&#x27;padding&#x27;</span>: <span class=\"r19\">&#x27;same&#x27;</span>, <span class=\"r19\">&#x27;data_format&#x27;</span>: <span class=\"r19\">&#x27;channels_last&#x27;</span>, <span class=\"r19\">&#x27;dilation_rate&#x27;</span>: <span class=\"r5\">[</span><span class=\"r27\">1</span>, <span class=\"r27\">1</span><span class=\"r5\">]</span>, <span class=\"r19\">&#x27;activation&#x27;</span>: <span class=\"r19\">&#x27;elu&#x27;</span>, <span class=\"r19\">&#x27;use_bias&#x27;</span>: <span class=\"r31\">True</span>, <span class=\"r19\">&#x27;kernel_initializer&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;class_name&#x27;</span>: <span class=\"r19\">&#x27;VarianceScaling&#x27;</span>, <span class=\"r19\">&#x27;config&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;scale&#x27;</span>: <span class=\"r27\">2.0</span>, <span class=\"r19\">&#x27;mode&#x27;</span>: <span class=\"r19\">&#x27;fan_in&#x27;</span>, <span class=\"r19\">&#x27;distribution&#x27;</span>: <span class=\"r19\">&#x27;truncated_normal&#x27;</span>, <span class=\"r19\">&#x27;seed&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span><span class=\"r5\">}}</span>, <span class=\"r19\">&#x27;bias_initializer&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;class_name&#x27;</span>: <span class=\"r19\">&#x27;Zeros&#x27;</span>, <span class=\"r19\">&#x27;config&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span><span class=\"r5\">}}</span>, <span class=\"r19\">&#x27;kernel_regularizer&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;bias_regularizer&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;activity_regularizer&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;kernel_constraint&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;bias_constraint&#x27;</span>: <span class=\"r28\">None</span><span class=\"r5\">}</span>.\n\nException encountered: <span class=\"r5\">&lt;</span><span class=\"r24\">class</span><span class=\"r26\"> </span><span class=\"r19\">&#x27;keras.src.initializers.random_initializers.VarianceScaling&#x27;</span><span class=\"r5\">&gt;</span> could not be deserialized properly. Please ensure that components that are Python object instances <span class=\"r5\">(</span>layers, models, etc.<span class=\"r5\">)</span> returned by `<span class=\"r18\">get_config</span><span class=\"r5\">()</span>` are explicitly deserialized in the model&#x27;s `<span class=\"r18\">from_config</span><span class=\"r5\">()</span>` method.\n\n<span class=\"r13\">config</span>=<span class=\"r5\">{</span><span class=\"r19\">&#x27;module&#x27;</span>: <span class=\"r19\">&#x27;keras.initializers&#x27;</span>, <span class=\"r19\">&#x27;class_name&#x27;</span>: <span class=\"r19\">&#x27;VarianceScaling&#x27;</span>, <span class=\"r19\">&#x27;config&#x27;</span>: <span class=\"r5\">{</span><span class=\"r19\">&#x27;scale&#x27;</span>: <span class=\"r27\">2.0</span>, <span class=\"r19\">&#x27;mode&#x27;</span>: <span class=\"r19\">&#x27;fan_in&#x27;</span>, <span class=\"r19\">&#x27;distribution&#x27;</span>: <span class=\"r19\">&#x27;truncated_normal&#x27;</span>, <span class=\"r19\">&#x27;seed&#x27;</span>: <span class=\"r28\">None</span>, <span class=\"r19\">&#x27;dtype&#x27;</span>: <span class=\"r19\">&#x27;float32&#x27;</span><span class=\"r5\">}</span>, <span class=\"r19\">&#x27;registered_name&#x27;</span>: <span class=\"r28\">None</span><span class=\"r5\">}</span>.\n\nException encountered: <span class=\"r18\">VarianceScaling.__init__</span><span class=\"r5\">()</span> got an unexpected keyword argument <span class=\"r19\">&#x27;dtype&#x27;</span>\n</code></pre>\n</body>\n</html>\n"}], "warnings": [], "context": null, "recommended_env": {"name": null, "channels": ["conda-forge", "nodefaults"], "dependencies": ["bioimageio.core", "pip", "tensorflow ==2.17"]}, "saved_conda_compare": "Success. All the packages in the specification file are present in the environment with matching version and build string.\n"}], "env": [["bioimageio.core", "0.9.4", "", ""], ["bioimageio.spec", "0.5.5.6", "", ""]], "saved_conda_list": "# packages in environment at /usr/share/miniconda/envs/c8bb86af54e77fc7965370c8849001b8881db5512ae992f910d65a8e7af7fb65:\n#\n# Name                     Version          Build                    Channel\n_libgcc_mutex              0.1              conda_forge              conda-forge\n_openmp_mutex              4.5              2_gnu                    conda-forge\nabsl-py                    2.3.1            pyhd8ed1ab_0             conda-forge\nannotated-types            0.7.0            pyhd8ed1ab_1             conda-forge\nanyio                      4.11.0           pyhcf101f3_0             conda-forge\naom                        3.9.1            hac33072_0               conda-forge\nastunparse                 1.6.3            pyhd8ed1ab_3             conda-forge\nbioimageio.core            0.9.4            pyhd8ed1ab_0             conda-forge\nbioimageio.spec            0.5.5.6          pyhd8ed1ab_0             conda-forge\nblosc                      1.21.6           he440d0b_1               conda-forge\nbrotli-python              1.1.0            py312h1289d80_4          conda-forge\nbrunsli                    0.1              he3183e4_1               conda-forge\nbzip2                      1.0.8            hda65f42_8               conda-forge\nc-ares                     1.34.5           hb9d3cd8_0               conda-forge\nc-blosc2                   2.21.3           h4cfbee9_0               conda-forge\nca-certificates            2025.10.5        hbd8a1cb_0               conda-forge\ncached-property            1.5.2            hd8ed1ab_1               conda-forge\ncached_property            1.5.2            pyha770c72_1             conda-forge\ncertifi                    2025.10.5        pyhd8ed1ab_0             conda-forge\ncffi                       2.0.0            py312h35888ee_0          conda-forge\ncharls                     2.4.2            h59595ed_0               conda-forge\ncharset-normalizer         3.4.4            pyhd8ed1ab_0             conda-forge\ncolorama                   0.4.6            pyhd8ed1ab_1             conda-forge\ndav1d                      1.2.1            hd590300_0               conda-forge\ndistro                     1.9.0            pyhd8ed1ab_1             conda-forge\ndnspython                  2.8.0            pyhcf101f3_0             conda-forge\nemail-validator            2.3.0            pyhd8ed1ab_0             conda-forge\nemail_validator            2.3.0            hd8ed1ab_0               conda-forge\nexceptiongroup             1.3.0            pyhd8ed1ab_0             conda-forge\nfilelock                   3.20.0           pyhd8ed1ab_0             conda-forge\nflatbuffers                24.3.25          h59595ed_0               conda-forge\ngast                       0.6.0            pyhd8ed1ab_0             conda-forge\ngenericache                0.5.2            pyhd8ed1ab_0             conda-forge\ngiflib                     5.2.2            hd590300_0               conda-forge\ngoogle-pasta               0.2.0            pyhd8ed1ab_2             conda-forge\ngrpcio                     1.65.5           py312h374181b_0          conda-forge\nh11                        0.16.0           pyhd8ed1ab_0             conda-forge\nh2                         4.3.0            pyhcf101f3_0             conda-forge\nh5py                       3.15.1           nompi_py312ha4f8f14_100  conda-forge\nhdf5                       1.14.6           nompi_h6e4c0c1_103       conda-forge\nhpack                      4.1.0            pyhd8ed1ab_0             conda-forge\nhttpcore                   1.0.9            pyh29332c3_0             conda-forge\nhttpx                      0.28.1           pyhd8ed1ab_0             conda-forge\nhyperframe                 6.1.0            pyhd8ed1ab_0             conda-forge\nicu                        75.1             he02047a_0               conda-forge\nidna                       3.11             pyhd8ed1ab_0             conda-forge\nimagecodecs                2025.8.2         py312h4ecb025_4          conda-forge\nimageio                    2.37.0           pyhfb79c49_0             conda-forge\nimportlib-metadata         8.7.0            pyhe01879c_1             conda-forge\njxrlib                     1.1              hd590300_3               conda-forge\nkeras                      3.11.2           pyh753f3f9_0             conda-forge\nkeyutils                   1.6.3            hb9d3cd8_0               conda-forge\nkrb5                       1.21.3           h659f571_0               conda-forge\nlcms2                      2.17             h717163a_0               conda-forge\nld_impl_linux-64           2.44             ha97dd6f_2               conda-forge\nlerc                       4.0.0            h0aef613_1               conda-forge\nlibabseil                  20240722.0       cxx17_hbbce691_4         conda-forge\nlibaec                     1.1.4            h3f801dc_0               conda-forge\nlibavif16                  1.3.0            h6395336_2               conda-forge\nlibblas                    3.9.0            37_h4a7cf45_openblas     conda-forge\nlibbrotlicommon            1.1.0            hb03c661_4               conda-forge\nlibbrotlidec               1.1.0            hb03c661_4               conda-forge\nlibbrotlienc               1.1.0            hb03c661_4               conda-forge\nlibcblas                   3.9.0            37_h0358290_openblas     conda-forge\nlibcurl                    8.14.1           h332b0f4_0               conda-forge\nlibdeflate                 1.24             h86f0d12_0               conda-forge\nlibedit                    3.1.20250104     pl5321h7949ede_0         conda-forge\nlibev                      4.33             hd590300_2               conda-forge\nlibexpat                   2.7.1            hecca717_0               conda-forge\nlibffi                     3.4.6            h2dba641_1               conda-forge\nlibfreetype                2.14.1           ha770c72_0               conda-forge\nlibfreetype6               2.14.1           h73754d4_0               conda-forge\nlibgcc                     15.2.0           h767d61c_7               conda-forge\nlibgcc-ng                  15.2.0           h69a702a_7               conda-forge\nlibgfortran                15.2.0           h69a702a_7               conda-forge\nlibgfortran5               15.2.0           hcd61629_7               conda-forge\nlibgomp                    15.2.0           h767d61c_7               conda-forge\nlibgrpc                    1.65.5           hf5c653b_0               conda-forge\nlibhwy                     1.3.0            h4c17acf_1               conda-forge\nlibjpeg-turbo              3.1.0            hb9d3cd8_0               conda-forge\nlibjxl                     0.11.1           h6cb5226_4               conda-forge\nliblapack                  3.9.0            37_h47877c9_openblas     conda-forge\nliblzma                    5.8.1            hb9d3cd8_2               conda-forge\nlibnghttp2                 1.67.0           had1ee68_0               conda-forge\nlibnsl                     2.0.1            hb9d3cd8_1               conda-forge\nlibopenblas                0.3.30           pthreads_h94d23a6_2      conda-forge\nlibpng                     1.6.50           h421ea60_1               conda-forge\nlibprotobuf                5.27.5           h5b01275_2               conda-forge\nlibre2-11                  2024.07.02       hbbce691_2               conda-forge\nlibsqlite                  3.50.4           h0c1763c_0               conda-forge\nlibssh2                    1.11.1           hcf80075_0               conda-forge\nlibstdcxx                  15.2.0           h8f9b012_7               conda-forge\nlibstdcxx-ng               15.2.0           h4852527_7               conda-forge\nlibtiff                    4.7.1            h8261f1e_0               conda-forge\nlibuuid                    2.41.2           he9a06e4_0               conda-forge\nlibwebp-base               1.6.0            hd42ef1d_0               conda-forge\nlibxcb                     1.17.0           h8a09558_0               conda-forge\nlibxcrypt                  4.4.36           hd590300_1               conda-forge\nlibzlib                    1.3.1            hb9d3cd8_2               conda-forge\nlibzopfli                  1.0.3            h9c3ff4c_0               conda-forge\nloguru                     0.7.3            pyh707e725_0             conda-forge\nlz4-c                      1.10.0           h5888daf_1               conda-forge\nmarkdown                   3.9              pyhd8ed1ab_0             conda-forge\nmarkdown-it-py             4.0.0            pyhd8ed1ab_0             conda-forge\nmarkupsafe                 3.0.3            py312h8a5da7c_0          conda-forge\nmdurl                      0.1.2            pyhd8ed1ab_1             conda-forge\nml_dtypes                  0.4.0            py312hf9745cd_2          conda-forge\nnamex                      0.1.0            pyhd8ed1ab_0             conda-forge\nncurses                    6.5              h2d0b736_3               conda-forge\nnumpy                      1.26.4           py312heda63a1_0          conda-forge\nopenjpeg                   2.5.4            h55fea9a_0               conda-forge\nopenssl                    3.5.4            h26f9b46_0               conda-forge\nopt_einsum                 3.4.0            pyhd8ed1ab_1             conda-forge\noptree                     0.17.0           py312hd9148b4_1          conda-forge\npackaging                  25.0             pyh29332c3_1             conda-forge\npandas                     2.3.3            py312hf79963d_1          conda-forge\npillow                     11.3.0           py312h7b42cdd_3          conda-forge\npip                        25.2             pyh8b19718_0             conda-forge\nplatformdirs               4.5.0            pyhcf101f3_0             conda-forge\nprotobuf                   5.27.5           py312h2ec8cdc_0          conda-forge\npthread-stubs              0.4              hb9d3cd8_1002            conda-forge\npycparser                  2.22             pyh29332c3_1             conda-forge\npydantic                   2.11.10          pyh3cfb1c2_0             conda-forge\npydantic-core              2.33.2           py312h680f630_0          conda-forge\npydantic-settings          2.11.0           pyh3cfb1c2_0             conda-forge\npygments                   2.19.2           pyhd8ed1ab_0             conda-forge\npysocks                    1.7.1            pyha55dd90_7             conda-forge\npython                     3.12.12          hfe2f287_0_cpython       conda-forge\npython-dateutil            2.9.0.post0      pyhe01879c_2             conda-forge\npython-dotenv              1.1.1            pyhe01879c_0             conda-forge\npython-flatbuffers         25.9.23          pyh1e1bc0e_0             conda-forge\npython-tzdata              2025.2           pyhd8ed1ab_0             conda-forge\npython_abi                 3.12             8_cp312                  conda-forge\npytz                       2025.2           pyhd8ed1ab_0             conda-forge\nrav1e                      0.7.1            h8fae777_3               conda-forge\nre2                        2024.07.02       h9925aae_2               conda-forge\nreadline                   8.2              h8c095d6_2               conda-forge\nrequests                   2.32.5           pyhd8ed1ab_0             conda-forge\nrich                       14.2.0           pyhcf101f3_0             conda-forge\nruyaml                     0.91.0           pyhd8ed1ab_1             conda-forge\nscipy                      1.16.2           py312h7a1785b_0          conda-forge\nsetuptools                 80.9.0           pyhff2d567_0             conda-forge\nsix                        1.17.0           pyhe01879c_1             conda-forge\nsnappy                     1.2.2            h03e3b7b_0               conda-forge\nsniffio                    1.3.1            pyhd8ed1ab_1             conda-forge\nsvt-av1                    3.1.2            hecca717_0               conda-forge\ntensorboard                2.17.1           pyhd8ed1ab_0             conda-forge\ntensorboard-data-server    0.7.0            py312hee9fe19_3          conda-forge\ntensorflow                 2.17.0           cpu_py312h69ecde4_3      conda-forge\ntensorflow-base            2.17.0           cpu_py312h4c54302_3      conda-forge\ntensorflow-estimator       2.17.0           cpu_py312h4f468f2_3      conda-forge\ntermcolor                  3.1.0            pyhd8ed1ab_0             conda-forge\ntifffile                   2025.10.4        pyhd8ed1ab_0             conda-forge\ntk                         8.6.13           noxft_hd72426e_102       conda-forge\ntqdm                       4.67.1           pyhd8ed1ab_1             conda-forge\ntyping-extensions          4.15.0           h396c80c_0               conda-forge\ntyping-inspection          0.4.2            pyhd8ed1ab_0             conda-forge\ntyping_extensions          4.15.0           pyhcf101f3_0             conda-forge\ntzdata                     2025b            h78e105d_0               conda-forge\nurllib3                    2.5.0            pyhd8ed1ab_0             conda-forge\nwerkzeug                   3.1.3            pyhd8ed1ab_1             conda-forge\nwheel                      0.45.1           pyhd8ed1ab_1             conda-forge\nwrapt                      1.17.3           py312h4c3975b_1          conda-forge\nxarray                     2025.1.2         pyhd8ed1ab_0             conda-forge\nxorg-libxau                1.0.12           hb9d3cd8_0               conda-forge\nxorg-libxdmcp              1.1.5            hb9d3cd8_0               conda-forge\nzfp                        1.0.1            h909a3a2_3               conda-forge\nzipp                       3.23.0           pyhd8ed1ab_0             conda-forge\nzlib-ng                    2.2.5            hde8ca8f_0               conda-forge\nzstandard                  0.25.0           py312h5253ce2_0          conda-forge\nzstd                       1.5.7            hb8e6e7a_2               conda-forge\n"}, "badge": null, "links": []}