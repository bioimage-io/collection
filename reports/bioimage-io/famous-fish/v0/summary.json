{
    "rdf_content": {
        "authors": [
            {
                "affiliation": "Human Technopole",
                "email": "mehdi.seifi@fht.org",
                "github_user": "mese79",
                "name": "Mehdi Seifi",
                "orcid": null
            }
        ],
        "cite": [
            {
                "doi": "10.1038/s41592-020-01018-x",
                "text": "Stringer, C., Wang, T., Michaelos, M., & Pachitariu, M. (2021). Cellpose: a generalist algorithm for cellular segmentation. Nature methods, 18(1), 100-106."
            }
        ],
        "config": {
            "bioimageio": {
                "thumbnails": {
                    "cover.png": "cover.thumbnail.png"
                }
            }
        },
        "covers": [
            "cover.png"
        ],
        "description": "CellPose 'cyto3' model",
        "documentation": "doc.md",
        "format_version": "0.5.3",
        "git_repo": "https://github.com/juglab/cellpose-bmz-wrapper",
        "id": "famous-fish",
        "id_emoji": "üêü",
        "inputs": [
            {
                "axes": [
                    {
                        "type": "batch"
                    },
                    {
                        "id": "y",
                        "size": 565,
                        "type": "space"
                    },
                    {
                        "id": "x",
                        "size": 807,
                        "type": "space"
                    },
                    {
                        "channel_names": [
                            "channel"
                        ],
                        "type": "channel"
                    }
                ],
                "id": "input",
                "test_tensor": {
                    "sha256": "f765246489a2b9913c7726a5706e535543e3ed42dac07ee21a8ffd2e6c129bed",
                    "source": "input_sample.npy"
                }
            }
        ],
        "license": "BSD-3-Clause",
        "links": [
            "https://github.com/mouseland/cellpose"
        ],
        "name": "CellPose(cyto3)",
        "outputs": [
            {
                "axes": [
                    {
                        "type": "batch"
                    },
                    {
                        "id": "y",
                        "size": 807,
                        "type": "space"
                    },
                    {
                        "id": "x",
                        "size": 565,
                        "type": "space"
                    }
                ],
                "id": "masks",
                "test_tensor": {
                    "sha256": "6bc2bd4c4b98a41cddbf7446c4500235a57c149710280e620565eb112c5251f2",
                    "source": "output1_sample_masks.npy"
                }
            },
            {
                "axes": [
                    {
                        "type": "batch"
                    },
                    {
                        "channel_names": [
                            "ch_0",
                            "ch_1",
                            "ch_2",
                            "ch_3",
                            "ch_4",
                            "ch_5",
                            "ch_6",
                            "ch_7"
                        ],
                        "type": "channel"
                    },
                    {
                        "id": "y",
                        "size": 807,
                        "type": "space"
                    },
                    {
                        "id": "x",
                        "size": 565,
                        "type": "space"
                    }
                ],
                "id": "flows",
                "test_tensor": {
                    "sha256": "112c5afd9e12c690d2cbbcf0a7b0fd673ce753c29f2e3bccbc15d927bf205d24",
                    "source": "output2_sample_flows.npy"
                }
            },
            {
                "axes": [
                    {
                        "type": "batch"
                    },
                    {
                        "id": "y",
                        "size": 256,
                        "type": "space"
                    }
                ],
                "id": "styles",
                "test_tensor": {
                    "sha256": "877ea628fdc2bc2aa94603049970da8597dda2c612944b20633ebea9dfac0776",
                    "source": "output3_sample_styles.npy"
                }
            },
            {
                "axes": [
                    {
                        "type": "batch"
                    }
                ],
                "id": "diams",
                "test_tensor": {
                    "sha256": "3b9360ded86c2a4d3e2592bfcce5cf42eefc96026661d5e1acadbb052d1f16b9",
                    "source": "output4_sample_diams.npy"
                }
            }
        ],
        "tags": [
            "Cellpose",
            "Cell Segmentation",
            "Segmentation"
        ],
        "type": "model",
        "uploader": {
            "email": "mehdi.seifi@fht.org",
            "name": "Mehdi Seifi"
        },
        "version": "0.1.0",
        "weights": {
            "pytorch_state_dict": {
                "architecture": {
                    "callable": "CellPoseWrapper",
                    "kwargs": {
                        "cellprob_threshold": 0.0,
                        "channels": [
                            0,
                            0
                        ],
                        "cp_batch_size": 8,
                        "diam_mean": 30.0,
                        "do_3D": false,
                        "estimate_diam": true,
                        "flow_threshold": 0.4,
                        "gpu": true,
                        "normalize": true,
                        "stitch_threshold": 0.0
                    },
                    "sha256": "c97dbfc39bc9352607289c7659ee3e70f42189ddd76c273c845802a824ab4210",
                    "source": "model.py"
                },
                "dependencies": {
                    "sha256": "8b7b307a010225d1741191f4c1a9415ed81d66469da76c59d5164e24ba99fe48",
                    "source": "env.yml"
                },
                "pytorch_version": "2.2.2",
                "sha256": "2dc3087a8abd7da46d1ab0ddd5824639933cc3ff63b382af3fa1939a392db93c",
                "source": "cyto3.pth"
            }
        }
    },
    "rdf_yaml_sha256": "b80321c4ff9ebd223860d517d2587b2cd741fc1069cbe6d175b864896e87b2bd",
    "scores": {
        "core_compatibility": 0.0,
        "metadata_completeness": 0.0,
        "metadata_format": 0.0,
        "overall_compatibility": 0.0,
        "overall_partner_tool_compatibility": 0.0,
        "tool_compatibility": {},
        "tool_compatibility_version_specific": {}
    },
    "status": "failed",
    "tests": {
        "biapy": {
            "3.6.5": {
                "badge": null,
                "details": "[all] pytorch_state_dict not found in model RDF or inputs != 1\n",
                "error": "[all] pytorch_state_dict not found in model RDF or inputs != 1\n",
                "links": [
                    "biapy/biapy"
                ],
                "score": 0.0,
                "status": "failed"
            }
        },
        "bioimageio.core": {
            "0.9.3": {
                "badge": null,
                "details": {
                    "details": [
                        {
                            "context": {
                                "file_name": "rdf.yaml",
                                "known_files": {
                                    "cyto3.pth": "2dc3087a8abd7da46d1ab0ddd5824639933cc3ff63b382af3fa1939a392db93c",
                                    "env.yml": "8b7b307a010225d1741191f4c1a9415ed81d66469da76c59d5164e24ba99fe48",
                                    "https://github.com/juglab/cellpose-bmz-wrapper": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/cover.png?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/cyto3.pth?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/doc.md?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/env.yml?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/input_sample.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/model.py?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/output1_sample_masks.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/output2_sample_flows.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/output3_sample_styles.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/output4_sample_diams.npy?version=v0": null,
                                    "input_sample.npy": "f765246489a2b9913c7726a5706e535543e3ed42dac07ee21a8ffd2e6c129bed",
                                    "model.py": "c97dbfc39bc9352607289c7659ee3e70f42189ddd76c273c845802a824ab4210",
                                    "output1_sample_masks.npy": "6bc2bd4c4b98a41cddbf7446c4500235a57c149710280e620565eb112c5251f2",
                                    "output2_sample_flows.npy": "112c5afd9e12c690d2cbbcf0a7b0fd673ce753c29f2e3bccbc15d927bf205d24",
                                    "output3_sample_styles.npy": "877ea628fdc2bc2aa94603049970da8597dda2c612944b20633ebea9dfac0776",
                                    "output4_sample_diams.npy": "3b9360ded86c2a4d3e2592bfcce5cf42eefc96026661d5e1acadbb052d1f16b9"
                                },
                                "original_source_name": null,
                                "perform_io_checks": true,
                                "root": "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files?version=v0",
                                "update_hashes": false
                            },
                            "errors": [],
                            "loc": [],
                            "name": "Successfully created `ModelDescr` instance.",
                            "recommended_env": null,
                            "saved_conda_compare": null,
                            "status": "passed",
                            "warnings": []
                        },
                        {
                            "context": {
                                "file_name": "rdf.yaml",
                                "known_files": {
                                    "cyto3.pth": "2dc3087a8abd7da46d1ab0ddd5824639933cc3ff63b382af3fa1939a392db93c",
                                    "env.yml": "8b7b307a010225d1741191f4c1a9415ed81d66469da76c59d5164e24ba99fe48",
                                    "https://github.com/juglab/cellpose-bmz-wrapper": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/cover.png?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/cyto3.pth?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/doc.md?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/env.yml?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/input_sample.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/model.py?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/output1_sample_masks.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/output2_sample_flows.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/output3_sample_styles.npy?version=v0": null,
                                    "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/output4_sample_diams.npy?version=v0": null,
                                    "input_sample.npy": "f765246489a2b9913c7726a5706e535543e3ed42dac07ee21a8ffd2e6c129bed",
                                    "model.py": "c97dbfc39bc9352607289c7659ee3e70f42189ddd76c273c845802a824ab4210",
                                    "output1_sample_masks.npy": "6bc2bd4c4b98a41cddbf7446c4500235a57c149710280e620565eb112c5251f2",
                                    "output2_sample_flows.npy": "112c5afd9e12c690d2cbbcf0a7b0fd673ce753c29f2e3bccbc15d927bf205d24",
                                    "output3_sample_styles.npy": "877ea628fdc2bc2aa94603049970da8597dda2c612944b20633ebea9dfac0776",
                                    "output4_sample_diams.npy": "3b9360ded86c2a4d3e2592bfcce5cf42eefc96026661d5e1acadbb052d1f16b9"
                                },
                                "original_source_name": null,
                                "perform_io_checks": true,
                                "root": "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files?version=v0",
                                "update_hashes": false
                            },
                            "errors": [],
                            "loc": [],
                            "name": "bioimageio.spec format validation model 0.5.5",
                            "recommended_env": null,
                            "saved_conda_compare": null,
                            "status": "passed",
                            "warnings": [
                                {
                                    "loc": [
                                        "documentation"
                                    ],
                                    "msg": "No '# Validation' (sub)section found in doc.md.",
                                    "severity": 30,
                                    "type": "warning"
                                },
                                {
                                    "loc": [
                                        "inputs",
                                        0,
                                        "sample_tensor"
                                    ],
                                    "msg": "Needs to be filled for FAIR compliance",
                                    "severity": 35,
                                    "type": "warning"
                                },
                                {
                                    "loc": [
                                        "outputs",
                                        0,
                                        "sample_tensor"
                                    ],
                                    "msg": "Needs to be filled for FAIR compliance",
                                    "severity": 35,
                                    "type": "warning"
                                },
                                {
                                    "loc": [
                                        "outputs",
                                        1,
                                        "sample_tensor"
                                    ],
                                    "msg": "Needs to be filled for FAIR compliance",
                                    "severity": 35,
                                    "type": "warning"
                                },
                                {
                                    "loc": [
                                        "outputs",
                                        2,
                                        "sample_tensor"
                                    ],
                                    "msg": "Needs to be filled for FAIR compliance",
                                    "severity": 35,
                                    "type": "warning"
                                },
                                {
                                    "loc": [
                                        "outputs",
                                        3,
                                        "sample_tensor"
                                    ],
                                    "msg": "Needs to be filled for FAIR compliance",
                                    "severity": 35,
                                    "type": "warning"
                                }
                            ]
                        },
                        {
                            "context": null,
                            "errors": [
                                {
                                    "loc": [
                                        "weights",
                                        "pytorch_state_dict"
                                    ],
                                    "msg": "Command '['conda', 'activate', '57cd7396fb1fb1fec5b137531bd6ae0f4389ff84dd4c0587265c52b1aab8f614']' returned non-zero exit status 1.",
                                    "traceback_html": "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<style>\n.r1 {color: #800000; text-decoration-color: #800000}\n.r2 {color: #800000; text-decoration-color: #800000; font-weight: bold}\n.r3 {color: #bf7f7f; text-decoration-color: #bf7f7f; font-weight: bold}\n.r4 {color: #bfbf7f; text-decoration-color: #bfbf7f}\n.r5 {color: #808000; text-decoration-color: #808000; font-weight: bold}\n.r6 {color: #0000ff; text-decoration-color: #0000ff}\n.r7 {color: #00ff00; text-decoration-color: #00ff00}\n.r8 {color: #7f7f7f; text-decoration-color: #7f7f7f}\n.r9 {color: #00ffff; text-decoration-color: #00ffff}\n.r10 {color: #808000; text-decoration-color: #808000}\n.r11 {color: #00ffff; text-decoration-color: #00ffff; text-decoration: underline}\n.r12 {color: #ff00ff; text-decoration-color: #ff00ff}\n.r13 {color: #ff0000; text-decoration-color: #ff0000; font-weight: bold}\n.r14 {color: #008000; text-decoration-color: #008000}\n.r15 {font-weight: bold}\n.r16 {color: #008080; text-decoration-color: #008080; font-weight: bold}\n.r17 {font-style: italic}\nbody {\n    color: #000000;\n    background-color: #ffffff;\n}\n</style>\n</head>\n<body>\n    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><code style=\"font-family:inherit\"><span class=\"r1\">‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:<span class=\"r6\">389</span> in <span class=\"r7\">_test</span> <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 386 </span><span class=\"r8\">‚îÇ   ‚îÇ   </span><span class=\"r6\">raise</span> <span class=\"r9\">RuntimeError</span>(<span class=\"r10\">&quot;Conda not available&quot;</span>) <span class=\"r6\">from</span> <span class=\"r11\">e</span>                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 387 </span><span class=\"r8\">‚îÇ   </span>                                                                                      <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 388 </span><span class=\"r8\">‚îÇ   </span><span class=\"r6\">try</span>:                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r1\">‚ù± </span> 389 <span class=\"r8\">‚îÇ   ‚îÇ   </span>run_command([CONDA_CMD, <span class=\"r10\">&quot;activate&quot;</span>, env_name])                                    <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 390 </span><span class=\"r8\">‚îÇ   </span><span class=\"r6\">except</span> <span class=\"r9\">Exception</span>:                                                                     <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 391 </span><span class=\"r8\">‚îÇ   ‚îÇ   </span>working_dir.mkdir(parents=<span class=\"r6\">True</span>, exist_ok=<span class=\"r6\">True</span>)                                    <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 392 </span><span class=\"r8\">‚îÇ   ‚îÇ   </span>path = working_dir / <span class=\"r10\">&quot;env.yaml&quot;</span>                                                   <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:<span class=\"r6\">196</span> in <span class=\"r7\">defau</span> <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 193 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 194 </span><span class=\"r6\">def</span> <span class=\"r7\">default_run_command</span>(args: Sequence[<span class=\"r9\">str</span>]):                                             <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 195 </span><span class=\"r8\">‚îÇ   </span>logger.info(<span class=\"r10\">&quot;running &#x27;{}&#x27;...&quot;</span>, <span class=\"r10\">&quot; &quot;</span>.join(args))                                        <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r1\">‚ù± </span> 196 <span class=\"r8\">‚îÇ   </span>_ = subprocess.check_call(args)                                                       <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 197 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 198 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 199 </span><span class=\"r6\">def</span> <span class=\"r7\">test_description</span>(                                                                     <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r4\">/usr/lib/python3.12/</span><span class=\"r5\">subprocess.py</span>:<span class=\"r6\">413</span> in <span class=\"r7\">check_call</span>                                              <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 410 </span><span class=\"r8\">‚îÇ   ‚îÇ   </span>cmd = kwargs.get(<span class=\"r10\">&quot;args&quot;</span>)                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 411 </span><span class=\"r8\">‚îÇ   ‚îÇ   </span><span class=\"r6\">if</span> cmd <span class=\"r12\">is</span> <span class=\"r6\">None</span>:                                                                   <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 412 </span><span class=\"r8\">‚îÇ   ‚îÇ   ‚îÇ   </span>cmd = popenargs[<span class=\"r6\">0</span>]                                                            <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r1\">‚ù± </span> 413 <span class=\"r8\">‚îÇ   ‚îÇ   </span><span class=\"r6\">raise</span> CalledProcessError(retcode, cmd)                                            <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 414 </span><span class=\"r8\">‚îÇ   </span><span class=\"r6\">return</span> <span class=\"r6\">0</span>                                                                              <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 415 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 416 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ</span>\n<span class=\"r13\">CalledProcessError: </span>Command <span class=\"r14\">&#x27;[&#x27;</span>conda&#x27;, <span class=\"r14\">&#x27;activate&#x27;</span>, <span class=\"r14\">&#x27;57cd7396fb1fb1fec5b137531bd6ae0f4389ff84dd4c0587265c52b1aab8f614&#x27;</span><span class=\"r15\">]</span>&#x27; returned non-zero exit status <span class=\"r16\">1</span>.\n\n<span class=\"r17\">During handling of the above exception, another exception occurred:</span>\n\n<span class=\"r1\">‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ </span><span class=\"r2\">Traceback </span><span class=\"r3\">(most recent call last)</span><span class=\"r1\"> ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:<span class=\"r6\">399</span> in <span class=\"r7\">_test</span> <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 396 </span><span class=\"r8\">‚îÇ   ‚îÇ   ‚îÇ   </span>run_command(                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 397 </span><span class=\"r8\">‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   </span>[CONDA_CMD, <span class=\"r10\">&quot;env&quot;</span>, <span class=\"r10\">&quot;create&quot;</span>, <span class=\"r10\">f&quot;--file={</span>path<span class=\"r10\">}&quot;</span>, <span class=\"r10\">f&quot;--name={</span>env_name<span class=\"r10\">}&quot;</span>]      <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 398 </span><span class=\"r8\">‚îÇ   ‚îÇ   ‚îÇ   </span>)                                                                             <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r1\">‚ù± </span> 399 <span class=\"r8\">‚îÇ   ‚îÇ   ‚îÇ   </span>run_command([CONDA_CMD, <span class=\"r10\">&quot;activate&quot;</span>, env_name])                                <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 400 </span><span class=\"r8\">‚îÇ   ‚îÇ   </span><span class=\"r6\">except</span> <span class=\"r9\">Exception</span> <span class=\"r6\">as</span> e:                                                            <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 401 </span><span class=\"r8\">‚îÇ   ‚îÇ   ‚îÇ   </span>summary = descr.validation_summary                                            <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 402 </span><span class=\"r8\">‚îÇ   ‚îÇ   ‚îÇ   </span>summary.add_detail(                                                           <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r4\">/home/runner/.local/lib/python3.12/site-packages/bioimageio/core/</span><span class=\"r5\">_resource_tests.py</span>:<span class=\"r6\">196</span> in <span class=\"r7\">defau</span> <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 193 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 194 </span><span class=\"r6\">def</span> <span class=\"r7\">default_run_command</span>(args: Sequence[<span class=\"r9\">str</span>]):                                             <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 195 </span><span class=\"r8\">‚îÇ   </span>logger.info(<span class=\"r10\">&quot;running &#x27;{}&#x27;...&quot;</span>, <span class=\"r10\">&quot; &quot;</span>.join(args))                                        <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r1\">‚ù± </span> 196 <span class=\"r8\">‚îÇ   </span>_ = subprocess.check_call(args)                                                       <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 197 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 198 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 199 </span><span class=\"r6\">def</span> <span class=\"r7\">test_description</span>(                                                                     <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r4\">/usr/lib/python3.12/</span><span class=\"r5\">subprocess.py</span>:<span class=\"r6\">413</span> in <span class=\"r7\">check_call</span>                                              <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>                                                                                                  <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 410 </span><span class=\"r8\">‚îÇ   ‚îÇ   </span>cmd = kwargs.get(<span class=\"r10\">&quot;args&quot;</span>)                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 411 </span><span class=\"r8\">‚îÇ   ‚îÇ   </span><span class=\"r6\">if</span> cmd <span class=\"r12\">is</span> <span class=\"r6\">None</span>:                                                                   <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 412 </span><span class=\"r8\">‚îÇ   ‚îÇ   ‚îÇ   </span>cmd = popenargs[<span class=\"r6\">0</span>]                                                            <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span> <span class=\"r1\">‚ù± </span> 413 <span class=\"r8\">‚îÇ   ‚îÇ   </span><span class=\"r6\">raise</span> CalledProcessError(retcode, cmd)                                            <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 414 </span><span class=\"r8\">‚îÇ   </span><span class=\"r6\">return</span> <span class=\"r6\">0</span>                                                                              <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 415 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚îÇ</span>   <span class=\"r8\"> 416 </span>                                                                                          <span class=\"r1\">‚îÇ</span>\n<span class=\"r1\">‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ</span>\n<span class=\"r13\">CalledProcessError: </span>Command <span class=\"r14\">&#x27;[&#x27;</span>conda&#x27;, <span class=\"r14\">&#x27;activate&#x27;</span>, <span class=\"r14\">&#x27;57cd7396fb1fb1fec5b137531bd6ae0f4389ff84dd4c0587265c52b1aab8f614&#x27;</span><span class=\"r15\">]</span>&#x27; returned non-zero exit status <span class=\"r16\">1</span>.\n</code></pre>\n</body>\n</html>\n",
                                    "traceback_md": "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Traceback (most recent call last) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:389 in _test ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ    386 ‚îÇ   ‚îÇ   raise RuntimeError(\"Conda not available\") from e                                  ‚îÇ\n‚îÇ    387 ‚îÇ                                                                                         ‚îÇ\n‚îÇ    388 ‚îÇ   try:                                                                                  ‚îÇ\n‚îÇ ‚ù±  389 ‚îÇ   ‚îÇ   run_command([CONDA_CMD, \"activate\", env_name])                                    ‚îÇ\n‚îÇ    390 ‚îÇ   except Exception:                                                                     ‚îÇ\n‚îÇ    391 ‚îÇ   ‚îÇ   working_dir.mkdir(parents=True, exist_ok=True)                                    ‚îÇ\n‚îÇ    392 ‚îÇ   ‚îÇ   path = working_dir / \"env.yaml\"                                                   ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:196 in defau ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ    193                                                                                           ‚îÇ\n‚îÇ    194 def default_run_command(args: Sequence[str]):                                             ‚îÇ\n‚îÇ    195 ‚îÇ   logger.info(\"running '{}'...\", \" \".join(args))                                        ‚îÇ\n‚îÇ ‚ù±  196 ‚îÇ   _ = subprocess.check_call(args)                                                       ‚îÇ\n‚îÇ    197                                                                                           ‚îÇ\n‚îÇ    198                                                                                           ‚îÇ\n‚îÇ    199 def test_description(                                                                     ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ /usr/lib/python3.12/subprocess.py:413 in check_call                                              ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ    410 ‚îÇ   ‚îÇ   cmd = kwargs.get(\"args\")                                                          ‚îÇ\n‚îÇ    411 ‚îÇ   ‚îÇ   if cmd is None:                                                                   ‚îÇ\n‚îÇ    412 ‚îÇ   ‚îÇ   ‚îÇ   cmd = popenargs[0]                                                            ‚îÇ\n‚îÇ ‚ù±  413 ‚îÇ   ‚îÇ   raise CalledProcessError(retcode, cmd)                                            ‚îÇ\n‚îÇ    414 ‚îÇ   return 0                                                                              ‚îÇ\n‚îÇ    415                                                                                           ‚îÇ\n‚îÇ    416                                                                                           ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\nCalledProcessError: Command '['conda', 'activate', '57cd7396fb1fb1fec5b137531bd6ae0f4389ff84dd4c0587265c52b1aab8f614']' returned non-zero exit status 1.\n\nDuring handling of the above exception, another exception occurred:\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Traceback (most recent call last) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:399 in _test ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ    396 ‚îÇ   ‚îÇ   ‚îÇ   run_command(                                                                  ‚îÇ\n‚îÇ    397 ‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   [CONDA_CMD, \"env\", \"create\", f\"--file={path}\", f\"--name={env_name}\"]      ‚îÇ\n‚îÇ    398 ‚îÇ   ‚îÇ   ‚îÇ   )                                                                             ‚îÇ\n‚îÇ ‚ù±  399 ‚îÇ   ‚îÇ   ‚îÇ   run_command([CONDA_CMD, \"activate\", env_name])                                ‚îÇ\n‚îÇ    400 ‚îÇ   ‚îÇ   except Exception as e:                                                            ‚îÇ\n‚îÇ    401 ‚îÇ   ‚îÇ   ‚îÇ   summary = descr.validation_summary                                            ‚îÇ\n‚îÇ    402 ‚îÇ   ‚îÇ   ‚îÇ   summary.add_detail(                                                           ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ /home/runner/.local/lib/python3.12/site-packages/bioimageio/core/_resource_tests.py:196 in defau ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ    193                                                                                           ‚îÇ\n‚îÇ    194 def default_run_command(args: Sequence[str]):                                             ‚îÇ\n‚îÇ    195 ‚îÇ   logger.info(\"running '{}'...\", \" \".join(args))                                        ‚îÇ\n‚îÇ ‚ù±  196 ‚îÇ   _ = subprocess.check_call(args)                                                       ‚îÇ\n‚îÇ    197                                                                                           ‚îÇ\n‚îÇ    198                                                                                           ‚îÇ\n‚îÇ    199 def test_description(                                                                     ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ /usr/lib/python3.12/subprocess.py:413 in check_call                                              ‚îÇ\n‚îÇ                                                                                                  ‚îÇ\n‚îÇ    410 ‚îÇ   ‚îÇ   cmd = kwargs.get(\"args\")                                                          ‚îÇ\n‚îÇ    411 ‚îÇ   ‚îÇ   if cmd is None:                                                                   ‚îÇ\n‚îÇ    412 ‚îÇ   ‚îÇ   ‚îÇ   cmd = popenargs[0]                                                            ‚îÇ\n‚îÇ ‚ù±  413 ‚îÇ   ‚îÇ   raise CalledProcessError(retcode, cmd)                                            ‚îÇ\n‚îÇ    414 ‚îÇ   return 0                                                                              ‚îÇ\n‚îÇ    415                                                                                           ‚îÇ\n‚îÇ    416                                                                                           ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\nCalledProcessError: Command '['conda', 'activate', '57cd7396fb1fb1fec5b137531bd6ae0f4389ff84dd4c0587265c52b1aab8f614']' returned non-zero exit status 1.\n",
                                    "type": "conda",
                                    "with_traceback": true
                                }
                            ],
                            "loc": [
                                "weights",
                                "pytorch_state_dict"
                            ],
                            "name": "Conda environment creation",
                            "recommended_env": {
                                "channels": [
                                    "pytorch",
                                    "nvidia",
                                    "conda-forge",
                                    "nodefaults"
                                ],
                                "dependencies": [
                                    "bioimageio.core",
                                    "cellpose",
                                    "cuda=11.8",
                                    "imagecodecs",
                                    "pip",
                                    "python=3.8",
                                    "pytorch",
                                    "setuptools",
                                    "torchvision",
                                    {
                                        "pip": [
                                            "matplotlib",
                                            "tqdm"
                                        ]
                                    }
                                ],
                                "name": null
                            },
                            "saved_conda_compare": "bioimageio.core not found\ncellpose not found\ncuda not found\nimagecodecs not found\npip not found\npython not found\npytorch not found\nsetuptools not found\ntorchvision not found\nmatplotlib not found\ntqdm not found\n",
                            "status": "failed",
                            "warnings": []
                        }
                    ],
                    "env": [
                        [
                            "bioimageio.spec",
                            "0.5.5.5",
                            "",
                            ""
                        ]
                    ],
                    "format_version": "0.5.5",
                    "id": "famous-fish",
                    "metadata_completeness": 0.7230769230769231,
                    "name": "bioimageio format validation",
                    "saved_conda_list": "# packages in environment at /usr/share/miniconda/envs/core:\n#\n# Name                     Version          Build            Channel\n",
                    "source_name": "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/rdf.yaml?version=v0",
                    "status": "failed",
                    "type": "model"
                },
                "error": "Command '['conda', 'activate', '57cd7396fb1fb1fec5b137531bd6ae0f4389ff84dd4c0587265c52b1aab8f614']' returned non-zero exit status 1.",
                "links": [],
                "score": 0.0,
                "status": "failed"
            },
            "0.9.4": {
                "badge": null,
                "details": {
                    "details": [
                        {
                            "context": null,
                            "errors": [
                                {
                                    "loc": [],
                                    "msg": "test command 'conda run -n 57cd7396fb1fb1fec5b137531bd6ae0f4389ff84dd4c0587265c52b1aab8f614 bioimageio test https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/rdf.yaml?version=v0 --summary-path=/tmp/tmpk05sughv/pytorch_state_dict/summary.json --determinism=full --stop-early' did not produce a summary file at /tmp/tmpk05sughv/pytorch_state_dict/summary.json",
                                    "traceback_html": "",
                                    "traceback_md": "",
                                    "type": "bioimageio cli",
                                    "with_traceback": false
                                }
                            ],
                            "loc": [],
                            "name": "run 'bioimageio test'",
                            "recommended_env": null,
                            "saved_conda_compare": null,
                            "status": "failed",
                            "warnings": []
                        }
                    ],
                    "env": [],
                    "format_version": "unknown",
                    "id": null,
                    "metadata_completeness": 0.0,
                    "name": "calling bioimageio test command",
                    "saved_conda_list": "# packages in environment at /usr/share/miniconda/envs/core:\n#\n# Name                     Version          Build            Channel\n",
                    "source_name": "https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/rdf.yaml?version=v0",
                    "status": "failed",
                    "type": "unknown"
                },
                "error": "test command 'conda run -n 57cd7396fb1fb1fec5b137531bd6ae0f4389ff84dd4c0587265c52b1aab8f614 bioimageio test https://hypha.aicell.io/bioimage-io/artifacts/famous-fish/files/rdf.yaml?version=v0 --summary-path=/tmp/tmpk05sughv/pytorch_state_dict/summary.json --determinism=full --stop-early' did not produce a summary file at /tmp/tmpk05sughv/pytorch_state_dict/summary.json",
                "links": [],
                "score": 0.0,
                "status": "failed"
            }
        },
        "careamics": {
            "0.0.17": {
                "badge": null,
                "details": "'Model' resource not tagged with 'CAREamics' or 'careamics'.",
                "error": null,
                "links": [],
                "score": 0.0,
                "status": "not-applicable"
            }
        }
    }
}